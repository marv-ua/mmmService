
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузкаЗавершена = ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МесяцРегистрацииСтрокойПриОткрытии();
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы
#Область МесяцРегистрации

&НаКлиенте
Процедура МесяцРегистрацииСтрокойПриОткрытии()
	
	Если НЕ ЗначениеЗаполнено(Отчет.ПериодРегистрации) Тогда
		Отчет.ПериодРегистрации = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Отчет.ПериодРегистрации) Тогда 
		ЭтаФорма.МесяцРегистрацииСтрокой = Формат(Отчет.ПериодРегистрации,"ДФ=""ММММ гггг""");	
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура МесяцРегистрацииСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Отчет.ПериодРегистрации", "МесяцРегистрацииСтрокой");	
	ПериодРегистрацииПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегистрацииСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПериодРегистрацииНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Отчет.ПериодРегистрации", "МесяцРегистрацииСтрокой", , Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегистрацииСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Отчет.ПериодРегистрации", "МесяцРегистрацииСтрокой", Направление,,);	
	Отчет.ПериодРегистрации = НачалоМесяца(Отчет.ПериодРегистрации);
	ПериодРегистрацииПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегистрацииСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегистрацииСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПериодРегистрацииПриИзменении();
	
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииПриИзменении()
	
	//Объект.КредитныеДоговора.Очистить();
	//Объект.Итоги.Очистить();
КонецПроцедуры

#КонецОбласти
#КонецОбласти

&НаКлиенте
Процедура Настройки(Команда)
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	ОчиститьСообщения();
	
	//////////////////////////////////////////////////////////////
	//
 	СтруктураФоновогоЗадания = ЗапуститьВыполнениеВФоне(УникальныйИдентификатор);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);		
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	// указываем интервал обновления состояния в секундах, если не указать, 
	// то интервал будет увеличиваться при каждой итерации в 1.4 раза.
	ПараметрыОжидания.Интервал = 3;		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания,
		Новый ОписаниеОповещения("ФоновоеЗаполненияЗавершено", ЭтотОбъект),
		ПараметрыОжидания
	);
	
	// запуск обработчика для загрузки данных с 7
	Если ОбновитьДанные Тогда
		ПодключитьОбработчикОжидания("ЗагрузкаДанныхС7", 0.5, Истина);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьВыполнениеВФоне(ИдентификаторФормы, Многопоточно = Ложь)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, 
		"мммОтчетОСВСервер.ЗаполнитьОСВИз8", 
		ПараметрыОтчета, 
		АдресХранилища
	);	
	
КонецФункции

&НаСервере
Функция ПодготовитьПараметрыОтчета()
	
	Набор = РегистрыСведений.Обороты8.СоздатьНаборЗаписей();
	тз = Набор.Выгрузить();
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация"                       , Организация.ВыгрузитьЗначения());
	ПараметрыОтчета.Вставить("НачалоПериода"                     , НачалоДня(Отчет.ПериодРегистрации));
	ПараметрыОтчета.Вставить("КонецПериода"                      , КонецМесяца(Отчет.ПериодРегистрации));
	ПараметрыОтчета.Вставить("тзДанных", тз);
	ПараметрыОтчета.Вставить("ОтборСчета", Новый Структура("сч50,сч51,сч60,сч62", Отбор50, Отбор51, Отбор60, Отбор62));

	ПараметрыОтчета.Вставить("ОбновитьДанные" , ОбновитьДанные);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

&НаКлиенте
Процедура ФоновоеЗаполненияЗавершено(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		// обрабатываем результат
		
		Если НЕ НеВыводитьРезультат Тогда
			
			ОбработатьРезультатНаСервере();

			// Чтобы не писалось «Отчет не сформирован…»

			Элементы.Результат.ОтображениеСостояния.Видимость = Ложь;

			Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;	
			
						
		КонецЕсли;	
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатНаСервере()
	
	Об = РеквизитФормыВЗначение("Отчет");
	СхемаКомпоновкиДанных = Об.ПолучитьМакет("Макет");
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	//КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	//КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	//КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	//КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки (КомпоновщикНастроек.ПользовательскиеНастройки);
	//Настройки = КомпоновщикНастроек.ПолучитьНастройки();	
	
	ПараметрыДанныхОСКД = Настройки.ПараметрыДанных.Элементы;
	
	ЭлементНачалоПериода = ПараметрыДанныхОСКД.Найти("Период");
	ЭлементНачалоПериода.Использование = Истина;
	ЭлементНачалоПериода.Значение = Отчет.ПериодРегистрации;

	ЭлементКонецПериода = ПараметрыДанныхОСКД.Найти("Организации");
	ЭлементКонецПериода.Использование = Ложь;
	Если Организация.Количество() > 0 Тогда
		ЭлементКонецПериода = ПараметрыДанныхОСКД.Найти("Организации");
		ЭлементКонецПериода.Использование = Истина;
		ЭлементКонецПериода.Значение = Организация.ВыгрузитьЗначения();
	КонецЕсли;

	Если ОтборСчет7Использовать Тогда
		УстановитьОтборСКД(Настройки, "Счет7", ВидСравненияКомпоновкиДанных.ВСписке, ОтборСчет7.ВыгрузитьЗначения());
	КонецЕсли;	
	Если НЕ Отбор50 И НЕ Отбор51 И НЕ Отбор60 И НЕ Отбор62 Тогда
	Иначе
		МассивСчетов = Новый Массив;
		Если Отбор50 Тогда
			МассивСчетов.Добавить("50");
		КонецЕсли;
		Если Отбор51 Тогда
			МассивСчетов.Добавить("51");
		КонецЕсли;
		Если Отбор60 Тогда
			МассивСчетов.Добавить("60");
		КонецЕсли;
		Если Отбор62 Тогда
			МассивСчетов.Добавить("62.01");
			МассивСчетов.Добавить("62.05");
		КонецЕсли;
		УстановитьОтборСКД(Настройки, "Счет", ВидСравненияКомпоновкиДанных.ВСписке, МассивСчетов);
	КонецЕсли;	
	
	Если НЕ ВыводитьНачальныйОстаток И НЕ ВыводитьКонечныйОстаток И НЕ ВыводитьОборот Тогда	
	Иначе
		Для Каждого Гр Из Настройки.Выбор.Элементы Цикл
			Если СтрНайти(Гр.Заголовок, "Начальный") Тогда
				Гр.Использование = ВыводитьНачальныйОстаток;
			КонецЕсли;	
			Если СтрНайти(Гр.Заголовок, "Оборот") Тогда
				Гр.Использование = ВыводитьОборот;
			КонецЕсли;
			Если СтрНайти(Гр.Заголовок, "Конечный") Тогда
				Гр.Использование = ВыводитьКонечныйОстаток;
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли;	
	
	Если НЕ ТолькоДельта И НЕ ТолькоИз7 И НЕ ТолькоИз8 Тогда
	Иначе 
		Для Каждого Гр Из Настройки.Выбор.Элементы Цикл
			Если НЕ ТолькоИз7 Тогда
				Для Каждого Эл Из Гр.Элементы Цикл
					Если Эл.Заголовок = "из 7" Тогда
						Эл.Использование = ТолькоИз7;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
			Если НЕ ТолькоИз8 Тогда
				Для Каждого Эл Из Гр.Элементы Цикл
					Если Эл.Заголовок = "из 8" Тогда
						Эл.Использование = ТолькоИз8;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;	
			Если НЕ ТолькоДельта Тогда
				Для Каждого Эл Из Гр.Элементы Цикл
					Если Эл.Заголовок = "Дельта" Тогда
						Эл.Использование = ТолькоДельта;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
		
	
	КомпоновщикМакетаОСКД = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакетаОСКД.Выполнить(СхемаКомпоновкиДанных, Настройки);
	
	ПроцессорКомпоновкиОСКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиОСКД.Инициализировать(Макет);
	Результат.Очистить();

	ПроцессорВыводаОСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;

	ПроцессорВыводаОСКД.УстановитьДокумент(Результат);

	ПроцессорВыводаОСКД.Вывести(ПроцессорКомпоновкиОСКД);	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузкаДанныхС7()
	
	мммОтчетОстаткиКлиент.ЗагрузитОстаткиИОбороты7(Отчет.ПериодРегистрации, Ложь);
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтборСКД(КомпоновщикНастроекНастройки, ИмяПоля, ВидОтбора, Значение)

	ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ОтборыКомпановщика = КомпоновщикНастроекНастройки.Отбор.Элементы;
	Для Каждого Стр Из ОтборыКомпановщика Цикл
		Попытка
			Если Стр.ЛевоеЗначение = ПолеОтбора Тогда
				Отбор = Стр;
			КонецЕсли;
		Исключение
		КонецПопытки;	
	КонецЦикла;
	Если Отбор = Неопределено Тогда
		Отбор = КомпоновщикНастроекНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение  = ПолеОтбора;
	КонецЕсли;
	
	Если Значение <> Неопределено Тогда
		Отбор.ВидСравнения   = ВидОтбора;
		Отбор.Использование  = Истина;
		Отбор.ПравоеЗначение  = Значение;
	Иначе
		Отбор.Использование  = Ложь;
	КонецЕсли;
	
КонецПроцедуры


