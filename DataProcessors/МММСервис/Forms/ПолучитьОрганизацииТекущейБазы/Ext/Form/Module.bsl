&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСервераБазы();
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = "Robot";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Пароль) Тогда
		Пользователь = "bot";
	КонецЕсли;
	Перезаписывать = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура Получить(Команда)
	
	Если ЗначениеЗаполнено(Сервер) И ЗначениеЗаполнено(База) 
		И ЗначениеЗаполнено(Пользователь) И ЗначениеЗаполнено(Пароль) Тогда		
		ПолучитьОрганизацииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОрганизацииНаСервере()
	
	Организации.Очистить();
	
	Для Каждого СтрокаБаза Из СервераБазы Цикл
		Если НЕ СтрокаБаза.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		ПопыткаУдачно = Ложь;
		Попытка
			Прокси = мммСервер.ПолучитьПрокси(СтрокаБаза.Сервер, 
				СтрокаБаза.База, 
				?(ПустаяСтрока(СтрокаБаза.Пользователь),Пользователь,СтрокаБаза.Пользователь), 
				?(ПустаяСтрока(СтрокаБаза.Пароль),Пароль,СтрокаБаза.Пароль)
			);
			ПопыткаУдачно = Истина;
		Исключение
		КонецПопытки;
		Если Не ПопыткаУдачно Тогда
			Попытка
				Прокси = мммСервер.ПолучитьПрокси(СтрокаБаза.Сервер, 
					СтрокаБаза.База, 
					?(ПустаяСтрока(СтрокаБаза.Пользователь),Пользователь,СтрокаБаза.Пользователь), 
					?(ПустаяСтрока(СтрокаБаза.Пароль),Пароль,СтрокаБаза.Пароль)
				);
				ПопыткаУдачно = Истина;
			Исключение
			КонецПопытки;
		КонецЕсли;	
		
		Если НЕ ПопыткаУдачно Тогда
			Продолжить;
		КонецЕсли;	
			
		
		ТекстЗапроса = "ВЫБРАТЬ
		               |	Организации.Ссылка КАК Ссылка,
		               |	Организации.ПометкаУдаления КАК ПометкаУдаления,
		               |	Организации.Код КАК КодВБазе8,
		               |	Организации.Наименование КАК Наименование,
		               |	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		               |	Организации.ИНН КАК ИНН,
		               |	Организации.КПП КАК КПП,
		               |	Организации.ОГРН КАК ОГРН,
		               |	Организации.НаименованиеПолное КАК НаименованиеПолное,
		               |	Организации.НаименованиеСокращенное КАК НаименованиеСокращенное,
		               |	Организации.ФамилияИП КАК ФамилияИП,
		               |	Организации.ИмяИП КАК ИмяИП,
		               |	Организации.ОтчествоИП КАК ОтчествоИП,
		               |	Организации.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		               |	Организации.ДатаРегистрации КАК ДатаРегистрации
		               |ИЗ
		               |	Справочник.Организации КАК Организации
					   |ГДЕ
					   |	НЕ Организации.ПометкаУдаления";
		Ответ = Прокси.RunQuery(
			мммСервер.Сериализовать(
				Новый Структура("ТекстЗапроса", ТекстЗапроса)
			)	
		);
		
		Если ПопыткаУдачно Тогда
			СтрокаБаза.Пометка = Ложь;
		КонецЕсли;	
		
		Ответ = мммСервер.ДеСериализовать(Ответ);
		
		Если Ответ.Ошибка Тогда
			ОбщегоНазначения.СообщитьПользователю("При получении данных произошла ошибка"+Символы.ПС+Ответ.ОписаниеОшибки);
		Иначе
			Для Каждого СтрокаОтвета Из Ответ.Результат Цикл
				ОрганизацияСсылка = СохранитьОрганизацию(СтрокаОтвета, Перезаписывать);
				Если НЕ ОрганизацияСсылка = Неопределено Тогда
					НоваяСтрока = Организации.Добавить();
					НоваяСтрока.Организация = ОрганизацияСсылка;
					Если Перезаписывать Тогда
						ЗаписатьРасположениеФирм(ОрганизацияСсылка, 
							СтрокаБаза.Сервер, 
							СтрокаБаза.База, 
							?(ПустаяСтрока(СтрокаБаза.Пользователь),Пользователь,СтрокаБаза.Пользователь), 
							?(ПустаяСтрока(СтрокаБаза.Пароль),Пароль,СтрокаБаза.Пароль)
						);
					КонецЕсли;	
				КонецЕсли;				
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохранитьОрганизацию(СтрокаОтвета, Перезаписывать) 
	
	Возврат Справочники.Организации.СохранитьОрганизацию(СтрокаОтвета, Перезаписывать);
	
КонецФункции	

&НаСервереБезКонтекста
Процедура ЗаписатьРасположениеФирм(Организация, Сервер, ИмяБазы, Логин, Пароль)
	
	Справочники.Организации.ЗаписатьРасположениеФирм(Организация, Сервер, ИмяБазы, Логин, Пароль);
	
КонецПроцедуры	


&НаСервере
Процедура ЗаполнитьСервераБазы()
		
	СервераБазы.Загрузить(мммСервер.ПолучитьТаблицуСерверов());
	
КонецПроцедуры	

&НаКлиенте
Процедура ПометкаВсе(Команда)
	
	Для Каждого Стр Из СервераБазы Цикл
		Стр.Пометка = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНичего(Команда)
	
	Для Каждого Стр Из СервераБазы Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаИнвертировать(Команда)
	
	Для Каждого Стр Из СервераБазы Цикл
		Стр.Пометка = НЕ Стр.Пометка;
	КонецЦикла;
		
КонецПроцедуры


