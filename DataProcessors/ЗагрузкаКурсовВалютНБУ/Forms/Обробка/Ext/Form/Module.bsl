
#Область Функції

&НаСервере
Процедура Оформити()
	
	ПотЕлементОформлення = УсловноеОформление.Элементы.Добавить();
	ПотПоле = ПотЕлементОформлення.Поля.Элементы.Добавить();
	ПотПоле.Поле = Новый ПолеКомпоновкиДанных("КурсиВалют");
	ПотЕлементВідбору = ПотЕлементОформлення.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ПотЕлементВідбору.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КурсиВалют.Стан");
	ПотЕлементВідбору.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ПотЕлементВідбору.ПравоеЗначение = 1;
	ПотЕлементВідбору.Использование = Истина;
	ПотЕлементОформлення.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
КонецПроцедуры

&НаКлиенте
Процедура ВстановитиЗаголовокФорми(Підзаголовок = "")
	ЭтотОбъект.Заголовок = НазваОбробки + ", " + НСтр("uk = 'версія'; ru = 'версія'") + " " + ВерсіяОбробки
	+ ?(ПустаяСтрока(Підзаголовок), "", ": " + Підзаголовок);
КонецПроцедуры

&НаСервере
Процедура ОтриматиВалютиНаСервері()
	ОбраніВалюти = Новый Массив;
	Для Каждого ПотРядокВалюти Из Валюти Цикл
		Если ПотРядокВалюти.Вибір Тогда
			ОбраніВалюти.Добавить(ПотРядокВалюти.Валюта);
		КонецЕсли;
	КонецЦикла;
	Если Не ОбраніВалюти.Количество() Тогда
		Налаштування = ХранилищеОбщихНастроек.Загрузить("ЗавантаженняКурсівВалютНБУ");
		Если Налаштування <> Неопределено Тогда
			Попытка
				Версія = Налаштування.Версія;
				Налаштування.Параметри.Свойство("ОбраніВалюти", ОбраніВалюти);
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Валюти.Очистить();
	Запит = Новый Запрос;
	ТекстЗапиту =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Валюта,
	|	Валюты.Код КАК Код,
	|	Валюты.Наименование КАК ЛітернийКод,
	|	Валюты.НаименованиеПолное КАК Назва
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления";
	Запит.Текст = ТекстЗапиту;
	РезультатЗапиту = Запит.Выполнить();
	Вибірка = РезультатЗапиту.Выбрать();
	Пока Вибірка.Следующий() Цикл
		Если Не ПустаяСтрока(Вибірка.ЛітернийКод) Тогда
			ПотРядокВалюти = Валюти.Добавить();
			ЗаполнитьЗначенияСвойств(ПотРядокВалюти, Вибірка);
			Если ОбраніВалюти.Найти(ПотРядокВалюти.Валюта) <> Неопределено Тогда
				ПотРядокВалюти.Вибір = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗберегтиНалаштування()
	Налаштування = Новый Структура;
	Налаштування.Вставить("Версія", 1);
	Параметри = Новый Структура;
	ОбраніВалюти = Новый Массив;
	Для Каждого ПотРядокВалюти Из Валюти Цикл
		Если ПотРядокВалюти.Вибір Тогда
			ОбраніВалюти.Добавить(ПотРядокВалюти.Валюта);
		КонецЕсли;
	КонецЦикла;
	Параметри.Вставить("ОбраніВалюти", ОбраніВалюти);
	Налаштування.Вставить("Параметри", Параметри);
	ХранилищеОбщихНастроек.Сохранить("ЗавантаженняКурсівВалютНБУ", , Налаштування);
КонецПроцедуры

&НаКлиенте
Процедура ОтриманняКурсівВалют()
	Состояние(НСтр("ru = 'Запит до серверу НБУ'; uk = 'Запит до серверу НБУ'") + " . . .");
	Объект.КурсиВалют.Очистить();
	Для Каждого ПотРядокВалюти Из Валюти Цикл
		Если ПотРядокВалюти.Вибір Тогда
			ПотДата = Період.ДатаНачала;
			Пока ПотДата <= Період.ДатаОкончания Цикл
				НовКурс = Объект.КурсиВалют.Добавить();
				НовКурс.ДатаКурсу = ПотДата;
				НовКурс.Валюта = ПотРядокВалюти.Валюта;
				НовКурс.ЛітернийКод = ПотРядокВалюти.ЛітернийКод;
				ПотДата = ПотДата + 60 * 60 * 24;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЗапитСерверуНБУ();
КонецПроцедуры


//Функция ПолучитьВалютуПоНаименованию(НаименованиеВалюты)
//	Если Найти(нрег(НаименованиеВалюты), "грн") > 0 Тогда
//		Возврат Справочники.Валюты.НайтиПоНаименованию("Грн");
//	КонецЕсли;
//	Возврат Справочники.Валюты.НайтиПоНаименованию(НаименованиеВалюты);
//КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеВТегах(вСтроке)
	Начало = найти(вСтроке, ">");
	Окончание = Начало + Найти(Сред(вСтроке, Начало+1), "<");
	//Если Окончание > Начало Тогда
		Возврат СокрЛП(Сред(вСтроке, Начало+1, Окончание - Начало - 1));
	//КонецЕсли;
	Возврат "";
КонецФункции


&НаКлиенте
Процедура ЗапитСерверуНБУ()
	
	ОбработкаПрерыванияПользователя();
	
	// ++ Григорьев Владимир 07.05.2019 #3422  \\
	//ИмяВходящегоФайла = ПолучитьИмяВременногоФайла();
	ВремКаталог = КаталогВременныхФайлов() + "tempKurs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог,"*.*");
	ИмяФайла = "Curses.html"; 
    ИмяВходящегоФайла = "" + ВремКаталог + "\" + ИмяФайла;
	// -- Григорьев Владимир 07.05.2019 #3422

	
	КурсиДляЗапиту = Объект.КурсиВалют.НайтиСтроки(Новый Структура("КурсНБУ", 0));
	СерверСервісу = "bank.gov.ua";
	АдресаЗапиту = "/NBUStatService/v1/statdirectory/exchange?";
	
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(
            Новый СертификатКлиентаWindows(),
            Новый СертификатыУдостоверяющихЦентровWindows());	
			
	HTTP = Новый HTTPСоединение(СерверСервісу, , , ,,,ЗащищенноеСоединение);

	Для Каждого ПотКурс Из КурсиДляЗапиту Цикл
		Путь  = АдресаЗапиту + "valcode=" + ПотКурс.ЛітернийКод + "&date=" + Формат(ПотКурс.ДатаКурсу, "ДФ = yyyyMMdd"); // + "&json";
		HTTPВідповідь =	HTTP.Получить(Путь,ИмяВходящегоФайла);
		
		РядокВідповіді = HTTPВідповідь.ПолучитьТелоКакСтроку();
		Если HTTPВідповідь.КодСостояния = 503 Тогда
			ПодключитьОбработчикОжидания("ЗапитСерверуНБУ", 1, Истина);
			Прервать;
		ИначеЕсли HTTPВідповідь.КодСостояния <> 200 Тогда
			Сообщить(НСтр("ru = 'Помилка з''єднання'; uk = 'Помилка з''єднання'"));
			Сообщить(НСтр("ru = 'Відповідь сервера'; uk = 'Відповідь сервера'") + ":" + Символы.ПС + РядокВідповіді);
			Возврат;
		КонецЕсли;
				
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ИмяВходящегоФайла);
		КвоСтрок = Текст.КоличествоСтрок();
		Курс = 0; Код = "";
		Для ИндСтроки = 1 По КвоСтрок Цикл
			ТекСтрока = Текст.ПолучитьСтроку(ИндСтроки);
			ТекЗначение = ПолучитьЗначениеВТегах(ТекСтрока);
			Если Найти(нрег(ТекСтрока), "<cc>") > 0 Тогда
				Если ТекЗначение = "" Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли Найти(нрег(ТекСтрока), "<rate>") > 0 Тогда
				Курс = Число(СтрЗаменить(ТекЗначение, ".", ","));
			ИначеЕсли Найти(нрег(ТекСтрока), "<r030>") > 0 Тогда
				Код = ТекЗначение;
			КонецЕсли;
		КонецЦикла;
		ПотКурс.КурсНБУ = Курс;
		ПотКурс.Стан = 1;
		
		// ++ Григорьев Владимир 07.05.2019 #3422  \\
		УдалитьФайлы(ВремКаталог,"*.*");
		// -- Григорьев Владимир 07.05.2019 #3422
		
	КонецЦикла;
	
	КурсиДляЗапиту = Объект.КурсиВалют.НайтиСтроки(Новый Структура("КурсНБУ", 0));
	Если КурсиДляЗапиту.Количество() = 0 Тогда
		Состояние(НСтр("ru = 'Запит до інформаційної бази'; uk = 'Запит до інформаційної бази'") + " . . .");
		ЗаповнитиКурсиВалютНаСервері();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаповнитиКурсиВалютНаСервері()
	ОбраніВалюти = Новый Массив;
	Для Каждого ПотРядокВалюти Из Валюти Цикл
		Если ПотРядокВалюти.Вибір Тогда
			ОбраніВалюти.Добавить(ПотРядокВалюти.Валюта);
		КонецЕсли;
	КонецЦикла;
	Объект.КурсиВалют.Сортировать("Валюта, ДатаКурсу");
	Запит = Новый Запрос;
	ТекстЗапиту =
	"ВЫБРАТЬ
	|	КурсыВалют.Период КАК ДатаКурсу,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Кратность КАК Кратність
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период МЕЖДУ &ДатаПочатку И &ДатаЗавершення
	|	И КурсыВалют.Валюта В(&ОбраніВалюти)";
	Запит.УстановитьПараметр("ОбраніВалюти", ОбраніВалюти);
	Запит.УстановитьПараметр("ДатаПочатку", Період.ДатаНачала);
	Запит.УстановитьПараметр("ДатаЗавершення", Період.ДатаОкончания);
	Запит.Текст = ТекстЗапиту;
	РезультатЗапиту = Запит.Выполнить();
	Вибірка = РезультатЗапиту.Выбрать();
	Пока Вибірка.Следующий() Цикл
		ПошукКурсу = Объект.КурсиВалют.НайтиСтроки(Новый Структура("ДатаКурсу, Валюта", Вибірка.ДатаКурсу, Вибірка.Валюта));
		Если ПошукКурсу.Количество() Тогда
			ПотРядокКурсу = ПошукКурсу[0];
			ПотРядокКурсу.Кратність = Вибірка.Кратність;
		Иначе
			ЗаполнитьЗначенияСвойств(Объект.КурсиВалют.Добавить(), Вибірка);
		КонецЕсли;
	КонецЦикла;
	Запит = Новый Запрос;
	ТекстЗапиту =
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ ттНаПочаток
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Валюта В(&ОбраніВалюти)
	|	И КурсыВалют.Период < &ДатаПочатку
	|
	|СГРУППИРОВАТЬ ПО
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ттНаПочаток.Валюта,
	|	КурсыВалют.Кратность КАК Кратність
	|ИЗ
	|	ттНаПочаток КАК ттНаПочаток
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ттНаПочаток.Валюта = КурсыВалют.Валюта
	|			И ттНаПочаток.Период = КурсыВалют.Период";
	Запит.УстановитьПараметр("ОбраніВалюти", ОбраніВалюти);
	Запит.УстановитьПараметр("ДатаПочатку", Період.ДатаНачала);
	Запит.Текст = ТекстЗапиту;
	РезультатЗапиту = Запит.Выполнить();
	Вибірка = РезультатЗапиту.Выбрать();
	ПочатковаКратність = Новый Соответствие;
	Пока Вибірка.Следующий() Цикл
		ПочатковаКратність.Вставить(Вибірка.Валюта, Вибірка.Кратність);
	КонецЦикла;
	ПопВалюта = Неопределено;
	ПопКратність = 1;
	Для Каждого ПотРядокКурсу Из Объект.КурсиВалют Цикл
		Если ПотРядокКурсу.Валюта <> ПопВалюта Тогда
			ПопВалюта = ПотРядокКурсу.Валюта;
			ПопКратність = ПочатковаКратність.Получить(ПопВалюта);
			Если ПопКратність = Неопределено Тогда
				ПопКратність = 1;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПотРядокКурсу.Кратність) Тогда
			ПотРядокКурсу.Кратність = ПопКратність;
		КонецЕсли;
		Пока Истина Цикл
			ПотКурс = Окр(ПотРядокКурсу.КурсНБУ * ПотРядокКурсу.Кратність, 4);
			Если ПотКурс > 9999999999 Тогда
				Прервать;
			КонецЕсли;
			ПотКурсНБУ = ПотКурс / ПотРядокКурсу.Кратність;
			Если ПотРядокКурсу.КурсНБУ = ПотКурсНБУ Тогда
				ПотРядокКурсу.Курс = ПотКурс;
				ПотРядокКурсу.Стан = 0;
				ПотРядокКурсу.Вибір = Истина;
				ПопКратність = ПотРядокКурсу.Кратність;
				Прервать;
			Иначе
				ПотРядокКурсу.Кратність = ПотРядокКурсу.Кратність * 10;
				Если ПотРядокКурсу.Кратність > 9999999999 Тогда
					ПотРядокКурсу.Кратність = 1;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Объект.КурсиВалют.Сортировать("ДатаКурсу, Валюта");
КонецПроцедуры

&НаКлиенте
Процедура ЗаписКурсівВалют()
	Состояние(НСтр("ru = 'Запис курсів валют до інформаційної бази'; uk = 'Запис курсів валют до інформаційної бази'") + " . . .");
	ЗаписКурсівВалютНаСервері();
КонецПроцедуры

&НаСервере
Процедура ЗаписКурсівВалютНаСервері()
	Для Каждого ПотРядокКурсу Из Объект.КурсиВалют Цикл
		Если ПотРядокКурсу.Вибір И ПотРядокКурсу.Кратність <> 0 И ПотРядокКурсу.Курс <> 0 Тогда
			МенеджерЗаписуКурсівВалют = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
			МенеджерЗаписуКурсівВалют.Валюта = ПотРядокКурсу.Валюта;
			МенеджерЗаписуКурсівВалют.Период = ПотРядокКурсу.ДатаКурсу;
			МенеджерЗаписуКурсівВалют.Кратность = ПотРядокКурсу.Кратність;
			МенеджерЗаписуКурсівВалют.Курс = ПотРядокКурсу.Курс;
			Попытка
				МенеджерЗаписуКурсівВалют.Записать(Истина);
			Исключение
				Повідомлення = Новый СообщениеПользователю;
				Повідомлення.Текст = НСтр("ru = 'Помилка запису курсу'; uk = 'Помилка запису курсу'") + ":" + Символы.ПС + ОписаниеОшибки();
				Повідомлення.Поле = "Объект.КурсиВалют[" + Объект.КурсиВалют.Индекс(ПотРядокКурсу) + "]";
				Повідомлення.Сообщить();
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область Команди

&НаКлиенте
Процедура ОбратиВалюти(Команда)
	Элементы.ФормаОбратиВалюти.Видимость = Ложь;
	Элементы.ФормаОтриматиКурсиВалют.Видимость = Истина;
	Элементы.ФормаЗаписатиКурсиВалют.Видимость = Ложь;
	Элементы.Період.ТолькоПросмотр = Ложь;
	Элементы.СторінкиДій.ТекущаяСтраница = Элементы.СторінкаВиборуВалют;
КонецПроцедуры

&НаКлиенте
Процедура ОтриматиКурсиВалют(Команда)
	Если Не ЗначениеЗаполнено(Період.ДатаНачала) Или Не ЗначениеЗаполнено(Період.ДатаОкончания) Тогда
		ПоказатьОповещениеПользователя(, , НСтр("ru = 'Для отримання курсів потрібно обрати обмежений період'; uk = 'Для отримання курсів потрібно обрати обмежений період'"));
		Возврат;
	КонецЕсли;
	ВалютиОбрано = Ложь;
	Для Каждого ПотРядокВалюти Из Валюти Цикл
		Если ПотРядокВалюти.Вибір Тогда
			ВалютиОбрано = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не ВалютиОбрано Тогда
		ПоказатьОповещениеПользователя(, , НСтр("ru = 'Для отримання курсів потрібно обрати валюти'; uk = 'Для отримання курсів потрібно обрати валюти'"));
		Возврат;
	КонецЕсли;
	Элементы.ФормаОбратиВалюти.Видимость = Истина;
	Элементы.ФормаЗаписатиКурсиВалют.Видимость = Истина;
	Элементы.Період.ТолькоПросмотр = Истина;
	Элементы.СторінкиДій.ТекущаяСтраница = Элементы.СторінкаЗапитуКурсівВалют;
	ОтриманняКурсівВалют();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатиКурсиВалют(Команда)
	ЗаписКурсівВалют();
КонецПроцедуры

&НаКлиенте
Процедура ОновитиСписокВалют(Команда)
	ОтриматиВалютиНаСервері();
КонецПроцедуры

&НаКлиенте
Процедура ОбратиВсіКурси(Команда)
	Для Каждого ПотРядок Из Объект.КурсиВалют Цикл
		ПотРядок.Вибір = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбратиЖодногоКурсу(Команда)
	Для Каждого ПотРядок Из Объект.КурсиВалют Цикл
		ПотРядок.Вибір = Ложь;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область Елементи

&НаКлиенте
Процедура КурсиВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "КурсиВалютВалюта" Тогда
		ПоказатьЗначение(, Элементы.КурсиВалют.ТекущиеДанные.Валюта);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КурсиВалютКратністьПриИзменении(Элемент)
	ПотРядокКурсу = Объект.КурсиВалют.НайтиПоИдентификатору(Элементы.КурсиВалют.ТекущаяСтрока);
	ПотРядокКурсу.Курс = Окр(ПотРядокКурсу.КурсНБУ * ПотРядокКурсу.Кратність, 4);
	Если Не ПотРядокКурсу.Курс > 9999999999 И ПотРядокКурсу.Кратність <> 0 И ПотРядокКурсу.Курс / ПотРядокКурсу.Кратність = ПотРядокКурсу.КурсНБУ Тогда
		ПотРядокКурсу.Стан = 0;
		ПотРядокКурсу.Вибір = Истина;
	Иначе
		ПотРядокКурсу.Стан = 1;
		ПотРядокКурсу.Вибір = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КурсиВалютКурсПриИзменении(Элемент)
	ПотРядокКурсу = Объект.КурсиВалют.НайтиПоИдентификатору(Элементы.КурсиВалют.ТекущаяСтрока);
	Если Не ПотРядокКурсу.Курс > 9999999999 И ПотРядокКурсу.Кратність <> 0 И ПотРядокКурсу.Курс / ПотРядокКурсу.Кратність = ПотРядокКурсу.КурсНБУ Тогда
		ПотРядокКурсу.Стан = 0;
		ПотРядокКурсу.Вибір = Истина;
	Иначе
		ПотРядокКурсу.Стан = 1;
		ПотРядокКурсу.Вибір = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПоточнийОбєкт = РеквизитФормыВЗначение("Объект");
	ВерсіяОбробки = ПоточнийОбєкт.ПоточнаВерсіяОбробки();
	НазваОбробки = ПоточнийОбєкт.НазваОбробки();
	ІмяОбробки = ПоточнийОбєкт.ІмяОбробки();
	Оформити();
	Элементы.ФормаОбратиВалюти.Видимость = Ложь;
	Элементы.ФормаОтриматиКурсиВалют.Видимость = Истина;
	Элементы.ФормаЗаписатиКурсиВалют.Видимость = Ложь;
	Элементы.СторінкиДій.ТекущаяСтраница = Элементы.СторінкаВиборуВалют;
	ОтриматиВалютиНаСервері();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВстановитиЗаголовокФорми();
	ТмчДата = ТекущаяДата();
	Період.ДатаНачала = НачалоДня(ТмчДата);
	Період.ДатаОкончания = КонецДня(ТмчДата);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ЗберегтиНалаштування();
КонецПроцедуры

#КонецОбласти
