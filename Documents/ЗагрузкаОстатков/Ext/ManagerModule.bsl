#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс 

Функция ЗаполнитьОстатками50и51Из8(тзОстатки, Дата, Ссылка = "") Экспорт
	
	ТаблицаБаз = мммСервер.ПолучитьТаблицуСерверов(Истина);
	ПроцентВыполнения = 0;
	Для Каждого База Из ТаблицаБаз Цикл
		ПроцентВыполнения = ПроцентВыполнения + 1;
		
		Для сч = 1 По 3 Цикл
			Если База.Пометка Тогда	
				
				Актуальность = РегистрыСведений.АктуальностьОрганизаций.ПолучитьПоследнее(КонецМесяца(Дата), Новый Структура("Организация", База.Организация));
				Если НЕ Актуальность.Активна Тогда
					Продолжить;
				КонецЕсли;				
				
				ПопыткаУдачно = Ложь;
				// попытка 1
				Попытка
					Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
					ПопыткаУдачно = Истина;
				Исключение
				КонецПопытки;
				// попытка 2
				Если НЕ ПопыткаУдачно Тогда
					Попытка
						Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
						ПопыткаУдачно = Истина;
					Исключение
					КонецПопытки;
				КонецЕсли;
				// попытка 3
				Если НЕ ПопыткаУдачно Тогда
					Попытка
						Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
						ПопыткаУдачно = Истина;
					Исключение
					КонецПопытки;
				КонецЕсли;
				
				Если ПопыткаУдачно Тогда
					
					ТекстЗапроса = 
						"ВЫБРАТЬ
						|	Хозрасчетный.Ссылка КАК Счет
						|ПОМЕСТИТЬ ВТСчета
						|ИЗ
						|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
						|ГДЕ
						|	(ЛОЖЬ
						|			ИЛИ Хозрасчетный.Код В (&Коды)
						|			ИЛИ Хозрасчетный.Родитель.Код В (&Коды)
						|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Коды)
						|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Коды))
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	Контрагенты.Ссылка КАК Ссылка,
						|	""ПОСТАВЩИКИ"" КАК Аналитика
						|ПОМЕСТИТЬ ВТПоставщикиТовара
						|ИЗ
						|	Справочник.Контрагенты КАК Контрагенты
						|ГДЕ
						|	ИСТИНА
						|	И (ЛОЖЬ
						|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент1
						|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
						|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
						|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1)
						|	И НЕ Контрагенты.ЭтоГруппа
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	Контрагенты.Ссылка КАК Ссылка,
						|	""РЕКЛАМА"" КАК Аналитика
						|ПОМЕСТИТЬ ВТРеклама
						|ИЗ
						|	Справочник.Контрагенты КАК Контрагенты
						|ГДЕ
						|	ИСТИНА
						|	И (ЛОЖЬ
						|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент2
						|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
						|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
						|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2)
						|	И НЕ Контрагенты.ЭтоГруппа
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВЫБОР
						|		КОГДА ХозрасчетныйОстатки.Счет.Код ПОДОБНО ""60.%""
						|			ТОГДА ""60""
						|		КОГДА ХозрасчетныйОстатки.Счет.Код ПОДОБНО ""50.%""
						|			ТОГДА ""50""
						|		ИНАЧЕ ХозрасчетныйОстатки.Счет.Код
						|	КОНЕЦ КАК Счет,
						|	ВЫБОР
						|		КОГДА СУММА(ХозрасчетныйОстатки.СуммаОстаток) < 0
						|			ТОГДА СУММА(ХозрасчетныйОстатки.СуммаОстаток) * -1
						|		ИНАЧЕ СУММА(ХозрасчетныйОстатки.СуммаОстаток)
						|	КОНЕЦ КАК СуммаОстатка,
						|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Организация) КАК Организация,
						|	ХозрасчетныйОстатки.Организация.ИНН КАК ИНН,
						|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))) КАК Аналитика
						|ИЗ
						|	РегистрБухгалтерии.Хозрасчетный.Остатки(
						|			&Период,
						|			Счет В
						|				(ВЫБРАТЬ
						|					ВТ.Счет КАК Счет
						|				ИЗ
						|					ВТСчета КАК ВТ),
						|			,
						|			Организация.ИНН = &Организация) КАК ХозрасчетныйОстатки
						|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоставщикиТовара КАК ВТПоставщикиТовара
						|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты)) = ВТПоставщикиТовара.Ссылка)
						|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРеклама КАК ВТРеклама
						|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты)) = ВТРеклама.Ссылка)
						|ГДЕ
						|	ВЫБОР
						|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстатки.Субконто1) = ТИП(Справочник.Контрагенты)
						|					И (ХозрасчетныйОстатки.Счет.Код ПОДОБНО ""60.%""
						|						ИЛИ ХозрасчетныйОстатки.Счет.Код = ""62.01"")
						|					И НЕ ХозрасчетныйОстатки.Счет.Код = ""62.05""
						|				ТОГДА ХозрасчетныйОстатки.Субконто1 В
						|							(ВЫБРАТЬ
						|								ВТПоставщикиТовара.Ссылка КАК Ссылка
						|							ИЗ
						|								ВТПоставщикиТовара КАК ВТПоставщикиТовара)
						|						ИЛИ ХозрасчетныйОстатки.Субконто1 В
						|							(ВЫБРАТЬ
						|								ВТРеклама.Ссылка КАК Ссылка
						|							ИЗ
						|								ВТРеклама КАК ВТРеклама)
						|			ИНАЧЕ ИСТИНА
						|		КОНЕЦ
						|
						|СГРУППИРОВАТЬ ПО
						|	ВЫБОР
						|		КОГДА ХозрасчетныйОстатки.Счет.Код ПОДОБНО ""60.%""
						|			ТОГДА ""60""
						|		КОГДА ХозрасчетныйОстатки.Счет.Код ПОДОБНО ""50.%""
						|			ТОГДА ""50""
						|		ИНАЧЕ ХозрасчетныйОстатки.Счет.Код
						|	КОНЕЦ,
						|	ХозрасчетныйОстатки.Организация.ИНН,
						|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))),
						|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Организация)
						|";
					МассивКодов = Новый Массив;
					МассивКодов.Добавить("50");
					МассивКодов.Добавить("51");
					МассивКодов.Добавить("60");
					МассивКодов.Добавить("62.01");
					МассивКодов.Добавить("62.05");
					
					ПараметрыЗапроса = Новый Структура("Коды", МассивКодов);
					ПараметрыЗапроса.Вставить("Период", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
					ПараметрыЗапроса.Вставить("Организация", База.Организация.ИНН);
					ПараметрыЗапроса.Вставить("Контрагент1", "%Поставщики%"); // <Строка>[%Поставщики товара%]
					ПараметрыЗапроса.Вставить("Контрагент2", "%Реклама%"); // <Строка>[%Реклама%]					
					
					ПараметрыПрокси = Новый Структура("ТекстЗапроса, Параметры", ТекстЗапроса, ПараметрыЗапроса);
					
					Удачно = Ложь;
					Попытка
						Ответ = мммСервер.ДеСериализовать(
							Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
						);   
						Удачно = Истина;
					Исключение
					КонецПопытки;
					
					Если НЕ Удачно Тогда
						ОбновлениеИнформационнойБазыСлужебный.Пауза(10);
						Попытка
							Ответ = мммСервер.ДеСериализовать(
								Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
							);   
							Удачно = Истина;
						Исключение
						КонецПопытки;   								
					КонецЕсли;	
					
					Если НЕ Удачно Тогда
						ОбновлениеИнформационнойБазыСлужебный.Пауза(20);
						Попытка
							Ответ = мммСервер.ДеСериализовать(
								Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
							);   
							Удачно = Истина;
						Исключение
						КонецПопытки;   								
					КонецЕсли;	
					
					Если НЕ Удачно ТОгда
						ОбщегоНазначения.СообщитьПользователю("При подключении к базе с организацией "+База.Организация+ " возникла ошибка. Остатки по этой организации загружены не будут.");
						Продолжить;
					КонецЕсли;	
											
				
					Если Ответ.Ошибка Тогда
						ОбщегоНазначения.СообщитьПользователю("При получении данных произошла ошибка"+Символы.ПС+Ответ.ОписаниеОшибки);
						ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Загрузка остатков", 
							УровеньЖурналаРегистрации.Ошибка, 
							Метаданные.Документы.ЗагрузкаОстатков, 
							Ссылка, 
							"При получении данных произошла ошибка"+Символы.ПС+Ответ.ОписаниеОшибки
						);
					Иначе
						
						Для Каждого СтрокаОтвета Из Ответ.Результат Цикл
							ТекОрганизация = Справочники.Организации.НайтиОрганизацию(СтрокаОтвета);
							Если ЗначениеЗаполнено(ТекОрганизация) Тогда
								НоваяСтрока = тзОстатки.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтвета);
								НоваяСтрока.Организация = ТекОрганизация;
								
								ДлительныеОперации.СообщитьПрогресс(Окр(100*ПроцентВыполнения/ТаблицаБаз.Количество(),1), ""+База.Сервер+": "+ ТекОрганизация.Наименование);
								ЗаписьЖурналаРегистрации("Загрузка остатков 8", УровеньЖурналаРегистрации.Примечание,,,""+ База.Сервер+Символы.ПС+База.База+Символы.ПС+ТекОрганизация.Наименование+": "+НоваяСтрока.Счет+": "+НоваяСтрока.СуммаОстатка);
								// проверить наличие в РС Расположение и если записей нет = добавить
								//Расположение = РегистрыСведений.РасположениеФирм.СрезПоследних(, Новый Структура("Организация", ТекОрганизация));
								//Если Расположение.Количество() = 0 Тогда
								//	Справочники.Организации.ЗаписатьРасположениеФирм(ТекОрганизация, База.Сервер, База.База, База.Пользователь, База.Пароль);									
								//КонецЕсли;	
							Иначе
								ОбщегоНазначения.СообщитьПользователю("При получении данных произошла ошибка: Не найдена организация "+СтрокаОтвета);
								ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Загрузка остатков", 
									УровеньЖурналаРегистрации.Ошибка, 
									Метаданные.Документы.ЗагрузкаОстатков, 
									Ссылка, 
									"При получении данных произошла ошибка"+Символы.ПС+"Не найдена организация"+Символы.ПС+СтрокаОтвета
								);				
							КонецЕсли;
						КонецЦикла;
						База.Пометка = Ложь;
					КонецЕсли;						
				КонецЕсли;						
				
			КонецЕсли;	
		КонецЦикла;		
	КонецЦикла;	
	
	Возврат тзОстатки;
	
КонецФункции

#КонецОбласти	
	
#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");	
#КонецЕсли
