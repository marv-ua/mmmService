#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидимостьКолонокТЧ();
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗагрузитьОстатки(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопросаОчистки", ЭтотОбъект),
		"Документ будет перезаполнен данным из "+?(Объект.ОстаткиБазыМММ,"базы МММ","баз 8-ок")+Символы.ПС+"Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		,
		КодВозвратаДиалога.Да,
		"Перезаполнить документ?",
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОчистки(Результат, Парам) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Объект.ОстаткиБазыМММ Тогда
			Объект.Остатки.Очистить();
			мммОтчетОстаткиКлиент.ЗагрузитьОстатки5051Из7(Объект.Остатки, КонецМесяца(Объект.Дата));
			//ЗагрузкаИз7НаСервере();
		Иначе
		
	     	СтруктураФоновогоЗадания = ЗапуститьВыполнениеВФоне(УникальныйИдентификатор);
			
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);		
			ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
			ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
			// указываем интервал обновления состояния в секундах, если не указать, 
			// то интервал будет увеличиваться при каждой итерации в 1.4 раза.
			ПараметрыОжидания.Интервал = 3;		
			ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания,
				Новый ОписаниеОповещения("ФоновоеЗаполненияЗавершено", ЭтотОбъект),
				ПараметрыОжидания
			);	
		КонецЕсли;			
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаИз7НаСервере()
	
	тз = Объект.Остатки.Выгрузить();
	мммОтчетОстаткиСервер.ЗагрузитьОстатки5051Из7(тз, КонецМесяца(Объект.Дата));
	Объект.Остатки.Загрузить(тз);
	
КонецПроцедуры	

&НаСервере
Функция ЗапуститьВыполнениеВФоне(ИдентификаторФормы)
	
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(ИдентификаторФормы);
		ПараметрыВыполнения.ЗапуститьВФоне = Истина;
		ПараметрыВыполнения.ЗапуститьВФоне = Ложь;
		ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
		
		тз = Объект.Остатки.Выгрузить();
		тз.Очистить();
		ПараметрыФункции = Новый Массив;
		ПараметрыФункции.Добавить(тз);
		ПараметрыФункции.Добавить(Объект.Дата);
		ПараметрыФункции.Добавить(Объект.Ссылка);
		С = Новый Соответствие;
		С.Вставить("Параметры", ПараметрыФункции);
		
		Возврат ДлительныеОперации.ВыполнитьФункциюВНесколькоПотоков("Документы.ЗагрузкаОстатков.ЗаполнитьОстатками50и51Из8",
			ПараметрыВыполнения,
		    С
		);		
	
КонецФункции	

&НаКлиенте
Процедура ФоновоеЗаполненияЗавершено(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		// обрабатываем результат
		ОбработатьДанныеНаСервере(Результат.АдресРезультата);	
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеНаСервере(АдресРезультата)
	
	Данные = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если НЕ Данные = Неопределено Тогда
		Объект.Остатки.Очистить();
		тз = Объект.Остатки.Выгрузить();
		тз.Очистить();
		Для Каждого ТекД Из Данные Цикл
			Если ТекД.Значение.Статус = "Выполнено" Тогда
				Результат = ПолучитьИзВременногоХранилища(ТекД.Значение.АдресРезультата);	
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, тз);			
		    КонецЕсли;
		КонецЦикла;
		тз.Свернуть("Счет, Организация, Счет7, Аналитика", "СуммаОстатка");
		Объект.Остатки.Загрузить(тз);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОстаткиБазыМММПриИзменении(Элемент)
	
	ВидимостьКолонокТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьКолонокТЧ()
	
	Элементы.ОстаткиОрганизация.Видимость = НЕ Объект.ОстаткиБазыМММ;
	Элементы.ОстаткиСчет7.Видимость = Объект.ОстаткиБазыМММ;
	
КонецПроцедуры	

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	//СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти
