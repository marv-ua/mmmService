Процедура Обмен7() Экспорт

	ЗагрузитОстаткиИОбороты7(НачалоМесяца(НачалоМесяца(ТекущаяДата())-1), Ложь);
	ЗагрузитОстаткиИОбороты7(НачалоМесяца(ТекущаяДата()), Ложь);

КонецПроцедуры


Процедура ЗагрузитьОстатки5051Из7(тч, Период) Экспорт
	
	БазаОле = мммКлиент.ПодключитьсяКБазеМММКлиент();
	Если НЕ БазаОле = Неопределено Тогда
		
		ПолучитьОстатки51Из7(БазаОле, тч, Период);
		ПолучитьОстатки50Из7(БазаОле, тч, Период);
		ПолучитьОстатки60Из7(БазаОле, тч, Период);
		ПолучитьОстатки62Из7(БазаОле, тч, Период);
		
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ЗагрузитОстаткиИОбороты7(Период, ПоказыватьПредупреждения = Истина) Экспорт
	
	БазаОле = мммКлиент.ПодключитьсяКБазеМММКлиент();
	
	мммОтчетОСВСервер.ОчиститьРегистрОбороты7(НачалоМесяца(Период));
	
	Если НЕ БазаОле = Неопределено Тогда
		
		ПолучитьОстаткиИобороты51Из7(БазаОле, Период);
		ПолучитьОстаткиИОбороты50Из7(БазаОле, Период);
		ПолучитьОстаткиИОбороты60Из7(БазаОле, Период);
		ПолучитьОстаткиИОбороты62Из7(БазаОле, Период);
	Иначе
		
		Если ПоказыватьПредупреждения Тогда 
			#Если Клиент Тогда
			ПоказатьПредупреждение(,"Остатки из 7 не обновилось, не удалось подключиться к базе",,"Ошибка обновления данных из 7");
			#КонецЕсли
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПолучитьОстатки51Из7(БазаОле, тч, Период)
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета"), Неопределено, 1, 0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(Период,"ДЛФ=Д"), Формат(Период,"ДЛФ=Д"), "51", Неопределено, Неопределено, 3,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета")) = 1 Цикл
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = Ит.Счет.Код;
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7(СокрЛП(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета")).Наименование));
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
		КонецЦикла;
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ПолучитьОстатки50Из7(БазаОле, тч, Период)
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(Период,"ДЛФ=Д"), Формат(Период,"ДЛФ=Д"), "50", Неопределено, Неопределено, 1,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Если СокрЛП(Ит.Счет.Код) = "50.1" Тогда
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7("Мгнт");
			
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7("Кнтр")
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.11" Тогда
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7("Бтк");
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.22" Тогда
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7("Звс");
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.33" Тогда
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7("Жсмн");
		Иначе
		//	НоваяСтрока.Счет7 = ПредопределенноеЗначение("Справочник.Счета7.ПустаяСсылка");
		КонецЕсли;			
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ПолучитьОстатки62Из7(БазаОле, тч, Период)
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"), Неопределено, 1,0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(Период,"ДЛФ=Д"), Формат(Период,"ДЛФ=Д"), "62", Неопределено, Неопределено, 1,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")) = 1 Цикл
			СтрокаКонтрагент = СокрЛП(НРег(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")).Наименование));
			Если НЕ (СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0 ИЛИ СтрНайти(СтрокаКонтрагент, "реклама") > 0)  Тогда
				Продолжить;
			КонецЕсли;
			Если Ит.Счет.Код = "62" Тогда
				Продолжить;
			КонецЕсли;	
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Аналитика = ?(СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0, "ПОСТАВЩИКИ", "РЕКЛАМА");
			СтрокаКонтрагент = СтрЗаменить(СтрокаКонтрагент, "поставщики товара", "");			
			Если Ит.Счет.Код = "62.1" Тогда
				НоваяСтрока.Счет = "62.01";
			ИначеЕсли Ит.Счет.Код = "62.2" Тогда
				НоваяСтрока.Счет = "62.02";
			ИначеЕсли Ит.Счет.Код = "62.3" Тогда
				НоваяСтрока.Счет = "62.03";
			ИначеЕсли Ит.Счет.Код = "62.4" Тогда
				НоваяСтрока.Счет = "62.04";
			ИначеЕсли Ит.Счет.Код = "62.5" Тогда
				НоваяСтрока.Счет = "62.05";
			Иначе
				НоваяСтрока.Счет = Ит.Счет.Код;
			КонецЕсли;
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7(СтрокаКонтрагент);
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
		КонецЦикла;
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ПолучитьОстатки60Из7(БазаОле, тч, Период)
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"), Неопределено, 1,0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(Период,"ДЛФ=Д"), Формат(Период,"ДЛФ=Д"), "60", Неопределено, Неопределено, 1,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")) = 1 Цикл
			СтрокаКонтрагент = СокрЛП(НРег(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")).Наименование));
			Если НЕ СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0 Тогда
				Продолжить;
			КонецЕсли;
			Если Ит.Счет.Код = "60" Тогда
				Продолжить;
			КонецЕсли;	
			СтрокаКонтрагент = СтрЗаменить(СтрокаКонтрагент, "поставщики товара", "");
			НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "60";//Ит.Счет.Код;			
			НоваяСтрока.Счет7 = мммОтчетОстаткиСервер.ПолучитьСчет7(СтрокаКонтрагент);//ПредопределенноеЗначение("Справочник.Счета7.ПустаяСсылка");
			НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Аналитика = "ПОСТАВЩИКИ";
		КонецЦикла;
	КонецЦикла;	
		
КонецПроцедуры	


Процедура ПолучитьОстаткиИобороты51Из7(БазаОле, Период)
	
	тч = Новый Массив;
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета"), Неопределено, 1, 0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(НачалоМесяца(Период),"ДЛФ=Д"), Формат(КонецМесяца(Период),"ДЛФ=Д"), "51", Неопределено, Неопределено, 3,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета")) = 1 Цикл
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			
			НоваяСтрока.Период = НачалоМесяца(Период);
			НоваяСтрока.Счет = Ит.Счет.Код;
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7(СокрЛП(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.БанковскиеСчета")).Наименование));
			
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			
			тч.Добавить(НоваяСтрока);
		КонецЦикла;
	КонецЦикла;	
	
	мммОтчетОСВСервер.ЗаписатьВРегистрОбороты7(тч);
		
КонецПроцедуры	

Процедура ПолучитьОстаткиИОбороты50Из7(БазаОле, Период)
	
	тч = Новый Массив;
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(НачалоМесяца(Период),"ДЛФ=Д"), Формат(КонецМесяца(Период),"ДЛФ=Д"), "50", Неопределено, Неопределено, 3,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Если СокрЛП(Ит.Счет.Код) = "50.1" Тогда
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			НоваяСтрока.Период = НачалоМесяца(Период);
			НоваяСтрока.Счет = "50";
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7("Мгнт");
			
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			тч.Добавить(НоваяСтрока);
			
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();  
			НоваяСтрока.Счет = "50";
			НоваяСтрока.Период = НачалоМесяца(Период);			
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7("Кнтр");
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			тч.Добавить(НоваяСтрока);
			
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.11" Тогда
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			НоваяСтрока.Период = НачалоМесяца(Период);			
			НоваяСтрока.Счет = "50";
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7("Бтк");
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			тч.Добавить(НоваяСтрока);
			
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.22" Тогда
			НоваяСтрока = ПодготовитьСтруктуру();
			НоваяСтрока.Период = НачалоМесяца(Период);			
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока.Счет = "50";
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7("Звс");
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			тч.Добавить(НоваяСтрока);
			
		ИначеЕсли СокрЛП(Ит.Счет.Код) = "50.33" Тогда
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			НоваяСтрока.Период = НачалоМесяца(Период);			
			НоваяСтрока.Счет = "50";
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());	
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7("Жсмн");
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			тч.Добавить(НоваяСтрока);
			
		Иначе
		//	НоваяСтрока.Счет7 = ПредопределенноеЗначение("Справочник.Счета7.ПустаяСсылка");
		КонецЕсли;			
	КонецЦикла;	
	
	мммОтчетОСВСервер.ЗаписатьВРегистрОбороты7(тч);
		
КонецПроцедуры	

Процедура ПолучитьОстаткиИОбороты62Из7(БазаОле, Период)
	
	тч = Новый Массив;
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"), Неопределено, 1,0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(НачалоМесяца(Период),"ДЛФ=Д"), Формат(КонецМесяца(Период),"ДЛФ=Д"), "62", Неопределено, Неопределено, 3,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")) = 1 Цикл
			СтрокаКонтрагент = СокрЛП(НРег(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")).Наименование));
			Если НЕ (СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0 ИЛИ СтрНайти(СтрокаКонтрагент, "реклама") > 0)  Тогда
				Продолжить;
			КонецЕсли;
			Если Ит.Счет.Код = "62" Тогда
				Продолжить;
			КонецЕсли;	
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			НоваяСтрока.Период = НачалоМесяца(Период);
			НоваяСтрока.Аналитика = ?(СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0, "ПОСТАВЩИКИ", "РЕКЛАМА");
			СтрокаКонтрагент = СтрЗаменить(СтрокаКонтрагент, "поставщики товара", "");			
			Если Ит.Счет.Код = "62.1" Тогда
				НоваяСтрока.Счет = "62.01";
			ИначеЕсли Ит.Счет.Код = "62.2" Тогда
				НоваяСтрока.Счет = "62.02";
			ИначеЕсли Ит.Счет.Код = "62.3" Тогда
				НоваяСтрока.Счет = "62.03";
			ИначеЕсли Ит.Счет.Код = "62.4" Тогда
				НоваяСтрока.Счет = "62.04";
			ИначеЕсли Ит.Счет.Код = "62.5" Тогда
				НоваяСтрока.Счет = "62.05";
			Иначе
				НоваяСтрока.Счет = Ит.Счет.Код;
			КонецЕсли;
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7(СокрЛП(СтрокаКонтрагент));
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			
			тч.Добавить(НоваяСтрока);
			
		КонецЦикла;
	КонецЦикла;	
	
	мммОтчетОСВСервер.ЗаписатьВРегистрОбороты7(тч);
		
КонецПроцедуры	

Процедура ПолучитьОстаткиИОбороты60Из7(БазаОле, Период)
	
	тч = Новый Массив;
	
	Ит = БазаОле.CreateObject("БухгалтерскиеИтоги");
	Ит.ИспользоватьПланСчетов(БазаОле.EvalExpr("ОсновнойПланСчетов()"));
	Ит.ИспользоватьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"), Неопределено, 1,0);
	Ит.ВключатьСубсчета(1, 0);
	Ит.ВыполнитьЗапрос(Формат(НачалоМесяца(Период),"ДЛФ=Д"), Формат(КонецМесяца(Период),"ДЛФ=Д"), "60", Неопределено, Неопределено, 3,Неопределено, "S");
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		Ит.ВыбратьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты"));
		Пока Ит.ПолучитьСубконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")) = 1 Цикл
			СтрокаКонтрагент = СокрЛП(НРег(Ит.Субконто(БазаОле.EvalExpr("ВидыСубконто.Контрагенты")).Наименование));
			Если НЕ СтрНайти(СтрокаКонтрагент, "поставщики товара") > 0 Тогда
				Продолжить;
			КонецЕсли;
			Если Ит.Счет.Код = "60" Тогда
				Продолжить;
			КонецЕсли;	
			СтрокаКонтрагент = СтрЗаменить(СтрокаКонтрагент, "поставщики товара", "");
			//НоваяСтрока = тч.Добавить();
			НоваяСтрока = ПодготовитьСтруктуру();
			
			НоваяСтрока.Период = НачалоМесяца(Период);			
			НоваяСтрока.Счет = "60";//Ит.Счет.Код;			
			НоваяСтрока.Организация = мммОтчетОстаткиСервер.ПолучитьСчет7(СокрЛП(СтрокаКонтрагент));//ПредопределенноеЗначение("Справочник.Счета7.ПустаяСсылка");
			//НоваяСтрока.СуммаОстатка = Число(Ит.СКД()) - Число(Ит.СКК());
			//НоваяСтрока.СуммаОстатка = ?(НоваяСтрока.СуммаОстатка < 0, НоваяСтрока.СуммаОстатка * (-1), НоваяСтрока.СуммаОстатка);
			НоваяСтрока.Аналитика = "ПОСТАВЩИКИ";
			
			НоваяСтрока.СуммаНачальныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНД());
			НоваяСтрока.СуммаНачальныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СНК());
			НоваяСтрока.СуммаОборотДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.ДО());
			НоваяСтрока.СуммаОборотКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.КО());
			НоваяСтрока.СуммаКонечныйОстатокДт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКД());
			НоваяСтрока.СуммаКонечныйОстатокКт = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Ит.СКК());
			
			тч.Добавить(НоваяСтрока);
		КонецЦикла;
	КонецЦикла;
	
	мммОтчетОСВСервер.ЗаписатьВРегистрОбороты7(тч);
		
КонецПроцедуры		

Функция ПодготовитьСтруктуру()
	
	Возврат Новый Структура("Период,Организация,Счет,Аналитика,СуммаНачальныйОстатокДт,СуммаНачальныйОстатокКт,СуммаОборотДт,СуммаОборотКт,СуммаКонечныйОстатокДт,СуммаКонечныйОстатокКт");
	
КонецФункции	
	