#Область ПрограммныйИнтерфейс

Процедура СформироватьЭтотОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = Обработки.МММСервис.ПолучитьМакет("МакетОСВ");
	/////////////////////////////////////////////////////////
	// Выведем шапку
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОтборПериод");
	ОбластьМакета.Параметры.Период = ""+Формат(ПараметрыОтчета.НачалоПериода, "ДФ=dd.MM.yyyy") + " - " + Формат(ПараметрыОтчета.КонецПериода, "ДФ=dd.MM.yyyy");
	ВысотаЗаголовка = ОбластьМакета.ВысотаТаблицы;                                      			
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");                                    			
	ТабличныйДокумент.Вывести(ОбластьМакета);		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	РасположениеФирмСрезПоследних.Сервер КАК Сервер,
	|	РасположениеФирмСрезПоследних.ИмяБазы КАК База,
	|	РасположениеФирмСрезПоследних.Логин КАК Логин,
	|	РасположениеФирмСрезПоследних.Пароль КАК Пароль
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасположениеФирм.СрезПоследних КАК РасположениеФирмСрезПоследних
	|		ПО Организации.Ссылка = РасположениеФирмСрезПоследних.Организация
	|ГДЕ
	|	Организации.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(ПараметрыОтчета.Организация) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Организации.Ссылка В (&Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", ПараметрыОтчета.Организация);
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекПодключение = Новый Структура("Прокси,Сервер,База,Логин,Пароль", Неопределено, "","","","");
	Прогон = 1;
	МассивОрганизацийСОшибками = Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДлительныеОперации.СообщитьПрогресс(Окр(100*Прогон/ВыборкаДетальныеЗаписи.Количество()), СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.НаименованиеСокращенное),);
		Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Сервер)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.База)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Логин) Тогда
			Продолжить;
		КонецЕсли;	
		
		Актуальность = РегистрыСведений.АктуальностьОрганизаций.ПолучитьПоследнее(ПараметрыОтчета.КонецПериода, Новый Структура("Организация", ВыборкаДетальныеЗаписи.Ссылка));
		Если НЕ Актуальность.Активна Тогда 
			Продолжить;
		КонецЕсли;
		
		//Если (НЕ ТекПодключение.Сервер = ВыборкаДетальныеЗаписи.Сервер И НЕ ТекПодключение.База = ВыборкаДетальныеЗаписи.База) 
		//	ИЛИ ТекПодключение.Прокси = Неопределено Тогда
		//КонецЕсли;
		Попытка
			СоединениеУстановлено = Ложь;
			Для сч = 1 По 3 Цикл
				Попытка
					Прокси = мммСервер.ПолучитьПрокси(ВыборкаДетальныеЗаписи.Сервер, 
						ВыборкаДетальныеЗаписи.База,
						ВыборкаДетальныеЗаписи.Логин,
						ВыборкаДетальныеЗаписи.Пароль
					);
					СоединениеУстановлено = Истина;
					Прервать;
				Исключение
				КонецПопытки;		
			КонецЦикла;
			Если НЕ СоединениеУстановлено Тогда
				Продолжить;
			КонецЕсли;			
			
			/////////////////////////////////////////////////////////
			// Формирование данных

			Запрос = мммСервер.ЗапросПрокси();
			Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Т.Счет.Код КАК Счет,
			|	ПРЕДСТАВЛЕНИЕ(Т.Организация) КАК Организация,
			|	Т.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
			|	Т.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
			|	Т.СуммаОборотДт КАК СуммаОборотДт,
			|	Т.СуммаОборотКт КАК СуммаОборотКт,
			|	Т.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
			|	Т.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Месяц, , Счет.Код В (&Счета), , Организация.ИНН В (&Организации)) КАК Т";
			Запрос.Параметры.Вставить("Счета", ПараметрыОтчета.Счета);
			Запрос.Параметры.Вставить("Организации", ВыборкаДетальныеЗаписи.Ссылка.ИНН);
			Запрос.Параметры.Вставить("НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
			Запрос.Параметры.Вставить("КонецПериода", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
			
			Ответ = мммСервер.ДеСериализовать(
				Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
			);

			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОрганизация");
			Таблица = Ответ.Результат;
			Если НЕ Ответ.Ошибка Тогда
				Если Ответ.Результат.Количество() > 0 Тогда
					Для каждого стр  Из Таблица Цикл
					
						ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, стр);
						ТабличныйДокумент.Вывести(ОбластьМакета);
					
					КонецЦикла; 
				КонецЕсли;
			КонецЕсли;
			
		Исключение
			МассивОрганизацийСОшибками.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка, ,,ОписаниеОшибки());
		КонецПопытки;
		Прогон = Прогон + 1;
	КонецЦикла;
	
	ПарамФайлов = Новый Структура("ТаблДокумент,ИмяОрганизации,МассивОрганизацийСОшибками", 
		ТабличныйДокумент, "", МассивОрганизацийСОшибками
	);
	
	ПоместитьВоВременноеХранилище(ПарамФайлов, АдресХранилища);	
	
КонецПроцедуры

Процедура Обмен8() Экспорт
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);

	ЗаполнитьОСВИз8(ПодготовитьПараметрыОтчета(НачалоМесяца(НачалоМесяца(ТекущаяДата()-1))), АдресХранилища);
	ЗаполнитьОСВИз8(ПодготовитьПараметрыОтчета(НачалоМесяца(ТекущаяДата())), АдресХранилища);
	
КонецПроцедуры	

Функция ПодготовитьПараметрыОтчета(Период = Неопределено)
	
	Если Период  = Неопределено Тогда
		Период = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	
	Набор = РегистрыСведений.Обороты8.СоздатьНаборЗаписей();
	тз = Набор.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка КАК Организация
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктуальностьОрганизаций.СрезПоследних(&Период) КАК АктуальностьОрганизацийСрезПоследних
	               |		ПО Организации.Ссылка = АктуальностьОрганизацийСрезПоследних.Организация
	               |ГДЕ
	               |	НЕ Организации.ПометкаУдаления
	               |	И АктуальностьОрганизацийСрезПоследних.Активна";
	Запрос.УстановитьПараметр("Период", Период);
	тз1 = Запрос.Выполнить().Выгрузить();
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация"                       , тз1.ВыгрузитьКолонку("Организация"));
	ПараметрыОтчета.Вставить("НачалоПериода"                     , Период);
	ПараметрыОтчета.Вставить("КонецПериода"                      , КонецМесяца(Период));
	ПараметрыОтчета.Вставить("тзДанных", тз);
	ПараметрыОтчета.Вставить("ОтборСчета", Новый Структура("сч50,сч51,сч60,сч62", Истина, Истина, Истина, Истина));

	ПараметрыОтчета.Вставить("ОбновитьДанные" , Истина);
	
	Возврат ПараметрыОтчета;
	
КонецФункции


Процедура ЗаполнитьОСВИз8(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Если ПараметрыОтчета.ОбновитьДанные Тогда
		
		ТаблицаБаз = мммСервер.ПолучитьТаблицуСерверов(КонецМесяца(ПараметрыОтчета.НачалоПериода), ?(ПараметрыОтчета.Организация.Количество() > 0, ПараметрыОтчета.Организация, Неопределено));
		тзОстатки = ПараметрыОтчета.тзДанных;
		ПроцентВыполнения = 0;
		Для Каждого База Из ТаблицаБаз Цикл
			ПроцентВыполнения = ПроцентВыполнения + 1;
			
			Для сч = 1 По 3 Цикл
				Если База.Пометка Тогда	
					
					Актуальность = РегистрыСведений.АктуальностьОрганизаций.ПолучитьПоследнее(КонецМесяца(ПараметрыОтчета.НачалоПериода), Новый Структура("Организация", База.Организация));
					Если НЕ Актуальность.Активна Тогда
						Продолжить;
					КонецЕсли;				
					
					ПопыткаУдачно = Ложь;
					// попытка 1
					Попытка
						Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
						ПопыткаУдачно = Истина;
					Исключение
					КонецПопытки;
					// попытка 2
					Если НЕ ПопыткаУдачно Тогда
						Попытка
							Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
							ПопыткаУдачно = Истина;
						Исключение
						КонецПопытки;
					КонецЕсли;
					// попытка 3
					Если НЕ ПопыткаУдачно Тогда
						Попытка
							Прокси = мммСервер.ПолучитьПрокси(База.Сервер, База.База, База.Пользователь, База.Пароль); 
							ПопыткаУдачно = Истина;
						Исключение
						КонецПопытки;
					КонецЕсли;
					
					Если ПопыткаУдачно Тогда
						
						ТекстЗапроса = "ВЫБРАТЬ
|	Хозрасчетный.Ссылка КАК Счет
|ПОМЕСТИТЬ ВТСчета
|ИЗ
|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
|ГДЕ
|	(ЛОЖЬ
|			ИЛИ Хозрасчетный.Код В (&Коды)
|			ИЛИ Хозрасчетный.Родитель.Код В (&Коды)
|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Коды)
|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Коды))
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Контрагенты.Ссылка КАК Ссылка,
|	""ПОСТАВЩИКИ"" КАК Аналитика
|ПОМЕСТИТЬ ВТПоставщикиТовара
|ИЗ
|	Справочник.Контрагенты КАК Контрагенты
|ГДЕ
|	ИСТИНА
|	И (ЛОЖЬ
|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент1
|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1)
|	И НЕ Контрагенты.ЭтоГруппа
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Контрагенты.Ссылка КАК Ссылка,
|	""РЕКЛАМА"" КАК Аналитика
|ПОМЕСТИТЬ ВТРеклама
|ИЗ
|	Справочник.Контрагенты КАК Контрагенты
|ГДЕ
|	ИСТИНА
|	И (ЛОЖЬ
|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент2
|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2)
|	И НЕ Контрагенты.ЭтоГруппа
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВЫБОР
|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
|			ТОГДА ""60""
|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""50.%""
|			ТОГДА ""50""
|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Счет.Код
|	КОНЕЦ КАК Счет,
|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстаткиИОбороты.Организация) КАК Организация,
|	ХозрасчетныйОстаткиИОбороты.Организация.ИНН КАК ИНН,
|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))) КАК Аналитика,
|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт,
|	0 КАК СуммаОборотДт,
|	0 КАК СуммаОборотКт,
|	NULL КАК Поле1
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), , , , , Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоставщикиТовара КАК ВТПоставщикиТовара
|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТПоставщикиТовара.Ссылка)
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРеклама КАК ВТРеклама
|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТРеклама.Ссылка)
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСчета КАК ВТ
|		ПО (ВТ.Счет = ХозрасчетныйОстаткиИОбороты.Счет)
|ГДЕ
|	ВЫБОР
|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Субконто1) = ТИП(Справочник.Контрагенты)
|					И (ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
|						ИЛИ ХозрасчетныйОстаткиИОбороты.Счет.Код = ""62.01"")
|					И НЕ ХозрасчетныйОстаткиИОбороты.Счет.Код = ""62.05""
|				ТОГДА ХозрасчетныйОстаткиИОбороты.Субконто1 В
|							(ВЫБРАТЬ
|								ВТПоставщикиТовара.Ссылка КАК Ссылка
|							ИЗ
|								ВТПоставщикиТовара КАК ВТПоставщикиТовара)
|						ИЛИ ХозрасчетныйОстаткиИОбороты.Субконто1 В
|							(ВЫБРАТЬ
|								ВТРеклама.Ссылка КАК Ссылка
|							ИЗ
|								ВТРеклама КАК ВТРеклама)
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|
|СГРУППИРОВАТЬ ПО
|	ХозрасчетныйОстаткиИОбороты.Организация.ИНН,
|	ВЫБОР
|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
|			ТОГДА ""60""
|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""50.%""
|			ТОГДА ""50""
|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Счет.Код
|	КОНЕЦ,
|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))),
|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстаткиИОбороты.Организация)
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""60.%""
|			ТОГДА ""60""
|		КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""50.%""
|			ТОГДА ""50""
|		ИНАЧЕ ХозрасчетныйОбороты.Счет.Код
|	КОНЕЦ,
|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Организация),
|	ХозрасчетныйОбороты.Организация.ИНН,
|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))),
|	0,
|	0,
|	0,
|	0,
|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт),
|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт),
|	ХозрасчетныйОбороты.КорСчет.Код
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.Обороты(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), , , , Организация.ИНН = &Организация, , ) КАК ХозрасчетныйОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоставщикиТовара КАК ВТПоставщикиТовара
|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТПоставщикиТовара.Ссылка)
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРеклама КАК ВТРеклама
|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТРеклама.Ссылка)
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСчета КАК ВТ
|		ПО (ВТ.Счет = ХозрасчетныйОбороты.Счет)
|ГДЕ
|	ВЫБОР
|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(Справочник.Контрагенты)
|					И (ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""60.%""
|						ИЛИ ХозрасчетныйОбороты.Счет.Код = ""62.01"")
|					И НЕ ХозрасчетныйОбороты.Счет.Код = ""62.05""
|				ТОГДА ХозрасчетныйОбороты.Субконто1 В
|							(ВЫБРАТЬ
|								ВТПоставщикиТовара.Ссылка КАК Ссылка
|							ИЗ
|								ВТПоставщикиТовара КАК ВТПоставщикиТовара)
|						ИЛИ ХозрасчетныйОбороты.Субконто1 В
|							(ВЫБРАТЬ
|								ВТРеклама.Ссылка КАК Ссылка
|							ИЗ
|								ВТРеклама КАК ВТРеклама)
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|	И ВЫБОР
|			КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""50.%""
|					И ХозрасчетныйОбороты.КорСчет.Код ПОДОБНО ""50.%""
|				ТОГДА ЛОЖЬ
|			КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""51%""
|					И ХозрасчетныйОбороты.КорСчет.Код ПОДОБНО ""51%""
|				ТОГДА ЛОЖЬ
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ
|
|СГРУППИРОВАТЬ ПО
|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))),
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""60.%""
|			ТОГДА ""60""
|		КОГДА ХозрасчетныйОбороты.Счет.Код ПОДОБНО ""50.%""
|			ТОГДА ""50""
|		ИНАЧЕ ХозрасчетныйОбороты.Счет.Код
|	КОНЕЦ,
|	ХозрасчетныйОбороты.Организация.ИНН,
|	ХозрасчетныйОбороты.КорСчет.Код,
|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Организация)
|";
							//"ВЫБРАТЬ
							//|	Хозрасчетный.Ссылка КАК Счет
							//|ПОМЕСТИТЬ ВТСчета
							//|ИЗ
							//|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
							//|ГДЕ
							//|	(ЛОЖЬ
							//|			ИЛИ Хозрасчетный.Код В (&Коды)
							//|			ИЛИ Хозрасчетный.Родитель.Код В (&Коды)
							//|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Коды)
							//|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Коды))
							//|;
							//|
							//|////////////////////////////////////////////////////////////////////////////////
							//|ВЫБРАТЬ
							//|	Контрагенты.Ссылка КАК Ссылка,
							//|	""ПОСТАВЩИКИ"" КАК Аналитика
							//|ПОМЕСТИТЬ ВТПоставщикиТовара
							//|ИЗ
							//|	Справочник.Контрагенты КАК Контрагенты
							//|ГДЕ
							//|	ИСТИНА
							//|	И (ЛОЖЬ
							//|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент1
							//|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
							//|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1
							//|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент1)
							//|	И НЕ Контрагенты.ЭтоГруппа
							//|;
							//|
							//|////////////////////////////////////////////////////////////////////////////////
							//|ВЫБРАТЬ
							//|	Контрагенты.Ссылка КАК Ссылка,
							//|	""РЕКЛАМА"" КАК Аналитика
							//|ПОМЕСТИТЬ ВТРеклама
							//|ИЗ
							//|	Справочник.Контрагенты КАК Контрагенты
							//|ГДЕ
							//|	ИСТИНА
							//|	И (ЛОЖЬ
							//|			ИЛИ Контрагенты.Родитель.Наименование ПОДОБНО &Контрагент2
							//|			ИЛИ Контрагенты.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
							//|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2
							//|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО &Контрагент2)
							//|	И НЕ Контрагенты.ЭтоГруппа
							//|;
							//|
							//|////////////////////////////////////////////////////////////////////////////////
							//|ВЫБРАТЬ
							//|	ВЫБОР
							//|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
							//|			ТОГДА ""60""
							//|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""50.%""
							//|			ТОГДА ""50""
							//|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Счет.Код
							//|	КОНЕЦ КАК Счет,
							//|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстаткиИОбороты.Организация) КАК Организация,
							//|	ХозрасчетныйОстаткиИОбороты.Организация.ИНН КАК ИНН,
							//|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10))) КАК Аналитика,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
							//|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт
							//|ИЗ
							//|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
							//|			НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ),
							//|			КОНЕЦПЕРИОДА(&Период, МЕСЯЦ),
							//|			,
							//|			,
							//|			Счет В
							//|				(ВЫБРАТЬ
							//|					ВТ.Счет КАК Счет
							//|				ИЗ
							//|					ВТСчета КАК ВТ),
							//|			,
							//|			Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты
							//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоставщикиТовара КАК ВТПоставщикиТовара
							//|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТПоставщикиТовара.Ссылка)
							//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРеклама КАК ВТРеклама
							//|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты)) = ВТРеклама.Ссылка)
							//|ГДЕ
							//|	ВЫБОР
							//|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Субконто1) = ТИП(Справочник.Контрагенты)
							//|					И (ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
							//|						ИЛИ ХозрасчетныйОстаткиИОбороты.Счет.Код = ""62.01"")
							//|					И НЕ ХозрасчетныйОстаткиИОбороты.Счет.Код = ""62.05""
							//|				ТОГДА ХозрасчетныйОстаткиИОбороты.Субконто1 В
							//|							(ВЫБРАТЬ
							//|								ВТПоставщикиТовара.Ссылка КАК Ссылка
							//|							ИЗ
							//|								ВТПоставщикиТовара КАК ВТПоставщикиТовара)
							//|						ИЛИ ХозрасчетныйОстаткиИОбороты.Субконто1 В
							//|							(ВЫБРАТЬ
							//|								ВТРеклама.Ссылка КАК Ссылка
							//|							ИЗ
							//|								ВТРеклама КАК ВТРеклама)
							//|			ИНАЧЕ ИСТИНА
							//|		КОНЕЦ 
							//|
							//|СГРУППИРОВАТЬ ПО
							//|	ХозрасчетныйОстаткиИОбороты.Организация.ИНН,
							//|	ВЫБОР
							//|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""60.%""
							//|			ТОГДА ""60""
							//|		КОГДА ХозрасчетныйОстаткиИОбороты.Счет.Код ПОДОБНО ""50.%""
							//|			ТОГДА ""50""
							//|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Счет.Код
							//|	КОНЕЦ,
							//|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстаткиИОбороты.Организация),
							//|	(ВЫРАЗИТЬ(ЕСТЬNULL(ВТПоставщикиТовара.Аналитика, """") КАК СТРОКА(10))) + (ВЫРАЗИТЬ(ЕСТЬNULL(ВТРеклама.Аналитика, """") КАК СТРОКА(10)))";
						МассивКодов = Новый Массив;
						МассивКодов.Добавить("50");
						МассивКодов.Добавить("51");
						МассивКодов.Добавить("60");
						МассивКодов.Добавить("62.01");
						МассивКодов.Добавить("62.05");					
						
						ПараметрыЗапроса = Новый Структура("Коды", МассивКодов);
						ПараметрыЗапроса.Вставить("Период", ПараметрыОтчета.НачалоПериода);
						ПараметрыЗапроса.Вставить("Организация", База.Организация.ИНН);
						ПараметрыЗапроса.Вставить("Контрагент1", "%Поставщики%"); // <Строка>[%Поставщики товара%]
						ПараметрыЗапроса.Вставить("Контрагент2", "%Реклама%"); // <Строка>[%Реклама%]					
						
						ПараметрыПрокси = Новый Структура("ТекстЗапроса, Параметры", ТекстЗапроса, ПараметрыЗапроса);
						
						Набор = РегистрыСведений.Обороты8.СоздатьНаборЗаписей();
						Набор.Отбор.Период.Установить(ПараметрыОтчета.НачалоПериода);
						Набор.Отбор.Организация.Установить(База.Организация);
						Набор.Записать();						
						
						Удачно = Ложь;
						Попытка
							Ответ = мммСервер.ДеСериализовать(
								Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
							);   
							Удачно = Истина;
						Исключение
						КонецПопытки;
						
						Если НЕ Удачно Тогда
							ОбновлениеИнформационнойБазыСлужебный.Пауза(10);
							Попытка
								Ответ = мммСервер.ДеСериализовать(
									Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
								);   
								Удачно = Истина;
							Исключение
							КонецПопытки;   								
						КонецЕсли;	
						
						Если НЕ Удачно Тогда
							ОбновлениеИнформационнойБазыСлужебный.Пауза(20);
							Попытка
								Ответ = мммСервер.ДеСериализовать(
									Прокси.RunQuery(мммСервер.Сериализовать(ПараметрыПрокси))
								);   
								Удачно = Истина;
							Исключение
							КонецПопытки;   								
						КонецЕсли;	
						
						Если НЕ Удачно Тогда
							ОбщегоНазначения.СообщитьПользователю("При подключении к базе с организацией "+База.Организация+ " возникла ошибка. Остатки по этой организации загружены не будут.");
							Продолжить;
						КонецЕсли;	
												
					
						Если Ответ.Ошибка Тогда
							ОбщегоНазначения.СообщитьПользователю("При получении данных произошла ошибка"+Символы.ПС+Ответ.ОписаниеОшибки);
							ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Загрузка остатков и оборотов 8", 
								УровеньЖурналаРегистрации.Ошибка, 
								Метаданные.Документы.ЗагрузкаОстатков, 
								, 
								"При получении данных произошла ошибка"+Символы.ПС+Ответ.ОписаниеОшибки
							);
						Иначе
							
							Ответ.Результат.Свернуть("Счет, Организация, ИНН, Аналитика", "СуммаНачальныйОстатокДт, СуммаНачальныйОстатокКт,СуммаКонечныйОстатокДт,СуммаКонечныйОстатокКт,СуммаОборотДт,СуммаОборотКт");
							Для Каждого СтрокаОтвета Из Ответ.Результат Цикл
								ТекОрганизация = Справочники.Организации.НайтиОрганизацию(СтрокаОтвета);
								Если ЗначениеЗаполнено(ТекОрганизация) Тогда
									НоваяСтрока = тзОстатки.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтвета);
									НоваяСтрока.Организация = ТекОрганизация;
									НоваяСтрока.Период = ПараметрыОтчета.НачалоПериода;									
									
									МенеджерЗаписи = РегистрыСведений.Обороты8.СоздатьМенеджерЗаписи();
									ЗаполнитьЗначенияСвойств(МенеджерЗаписи, НоваяСтрока);
									Попытка
										МенеджерЗаписи.Записать();
									Исключение
										ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Загрузка остатков и оборотов 8", 
											УровеньЖурналаРегистрации.Ошибка, 
											Метаданные.Документы.ЗагрузкаОстатков, 
											, 
											ОписаниеОшибки()
										);										
									КонецПопытки;
									
									ДлительныеОперации.СообщитьПрогресс(Окр(100*ПроцентВыполнения/ТаблицаБаз.Количество(),1), ""+База.Сервер+": "+ ТекОрганизация.Наименование);
									
									// проверить наличие в РС Расположение и если записей нет = добавить
									//Расположение = РегистрыСведений.РасположениеФирм.СрезПоследних(, Новый Структура("Организация", ТекОрганизация));
									//Если Расположение.Количество() = 0 Тогда
									//	Справочники.Организации.ЗаписатьРасположениеФирм(ТекОрганизация, База.Сервер, База.База, База.Пользователь, База.Пароль);									
									//КонецЕсли;	
								Иначе
									ОбщегоНазначения.СообщитьПользователю("При получении данных произошла ошибка: Не найдена организация "+СтрокаОтвета);
									ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Загрузка остатков и оборотов 8", 
										УровеньЖурналаРегистрации.Ошибка, 
										Метаданные.Документы.ЗагрузкаОстатков, 
										, 
										"При получении данных произошла ошибка"+Символы.ПС+"Не найдена организация"+Символы.ПС+СтрокаОтвета
									);				
								КонецЕсли;
							КонецЦикла;
														
							База.Пометка = Ложь;
						КонецЕсли;						
					КонецЕсли;						
					
				КонецЕсли;	
			КонецЦикла;		
		КонецЦикла;		
		
	КонецЕсли;	
	
	Данные = Новый Структура("ТаблицаДанных", тзОстатки);
	ПоместитьВоВременноеХранилище(Данные, АдресХранилища);	
	
КонецПроцедуры

Процедура ЗаписатьВРегистрОбороты7(м) Экспорт
	
	Для Каждого стр Из м Цикл
		
		Менеджер = РегистрыСведений.Обороты7.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Менеджер, стр);
		Менеджер.Записать();
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОчиститьРегистрОбороты7(Период) Экспорт
	
	Набор = РегистрыСведений.Обороты7.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(Период);
	Набор.Записать();
	
КонецПроцедуры	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти



