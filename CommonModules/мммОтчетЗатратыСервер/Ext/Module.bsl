#Область ПрограммныйИнтерфейс

Процедура СформироватьЭтотОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	//*******************************************************************************************
	Разделитель=";";
	Кодировка = "windows-1251"; // КодировкаТекста.ANSI;
	
	ПотокВПамяти  = Новый ПотокВПамяти;
	ПотокВыгрузкиОстальные = Новый ЗаписьТекста(ПотокВПамяти, Кодировка);
	
	ПотокВПамятиП20  = Новый ПотокВПамяти;
	ПотокВыгрузкиП20 = Новый ЗаписьТекста(ПотокВПамятиП20, Кодировка);

	ПотокВПамятиПерс  = Новый ПотокВПамяти;
	ПотокВыгрузкиПерс = Новый ЗаписьТекста(ПотокВПамятиПерс, Кодировка);
	
	Потоки = Новый Соответствие;

	
	СтрЗаписи="КодПоискаИНН;Период;Организация;Документ;СчДебет;СчКредит;Сумма;СодержаниеОперации;Группа";
	ПотокВыгрузкиОстальные.ЗаписатьСтроку(СтрЗаписи);
	ПотокВыгрузкиП20.ЗаписатьСтроку(СтрЗаписи);
	ПотокВыгрузкиПерс.ЗаписатьСтроку(СтрЗаписи);
	//*******************************************************************************************
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Обработки.МММСервис.ПолучитьМакет("МакетЗатраты");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	РасположениеФирмСрезПоследних.Сервер КАК Сервер,
	|	РасположениеФирмСрезПоследних.ИмяБазы КАК База,
	|	РасположениеФирмСрезПоследних.Логин КАК Логин,
	|	РасположениеФирмСрезПоследних.Пароль КАК Пароль,
	|	ЕСТЬNULL(СвязьОрганизаций8ИСчетов7.Счет7.Наименование, """") КАК Сч7
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасположениеФирм.СрезПоследних КАК РасположениеФирмСрезПоследних
	|		ПО Организации.Ссылка = РасположениеФирмСрезПоследних.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязьОрганизаций8ИСчетов7 КАК СвязьОрганизаций8ИСчетов7
	|		ПО Организации.Ссылка = СвязьОрганизаций8ИСчетов7.Организация8
	|ГДЕ
	|	Организации.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(ПараметрыОтчета.Организация) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Организации.Ссылка В (&Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", ПараметрыОтчета.Организация);
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекПодключение = Новый Структура("Прокси,Сервер,База,Логин,Пароль", Неопределено, "","","","");
	Прогон = 1;
	МассивОрганизацийСОшибками = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДлительныеОперации.СообщитьПрогресс(Окр(100*Прогон/ВыборкаДетальныеЗаписи.Количество()), СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.НаименованиеСокращенное),);
		Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Сервер)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.База)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Логин) Тогда
			Продолжить;
		КонецЕсли;	
		
		Актуальность = РегистрыСведений.АктуальностьОрганизаций.ПолучитьПоследнее(ПараметрыОтчета.КонецПериода, Новый Структура("Организация", ВыборкаДетальныеЗаписи.Ссылка));
		Если НЕ Актуальность.Активна Тогда 
			Продолжить;
		КонецЕсли;		
		
		//Если (НЕ ТекПодключение.Сервер = ВыборкаДетальныеЗаписи.Сервер И НЕ ТекПодключение.База = ВыборкаДетальныеЗаписи.База) 
		//	ИЛИ ТекПодключение.Прокси = Неопределено Тогда
		//КонецЕсли;
		Попытка
			СоединениеУстановлено = Ложь;
			Для сч = 1 По 3 Цикл
				Попытка
					Прокси = мммСервер.ПолучитьПрокси(ВыборкаДетальныеЗаписи.Сервер, 
						ВыборкаДетальныеЗаписи.База,
						ВыборкаДетальныеЗаписи.Логин,
						ВыборкаДетальныеЗаписи.Пароль
					);
					СоединениеУстановлено = Истина;
					Прервать;
				Исключение
				КонецПопытки;		
			КонецЦикла;
			Если НЕ СоединениеУстановлено Тогда
				Продолжить;
			КонецЕсли;	
			
			/////////////////////////////////////////////////////////
			// дробим потоки
			
			ГруппаОрганизаций = НРег(ВыборкаДетальныеЗаписи.Сч7);	
			Если ПустаяСтрока(ГруппаОрганизаций) Тогда
				ОбщегоНазначения.СообщитьПользователю("Для организации "+ВыборкаДетальныеЗаписи.ссылка+ " не установлено соответствие");
				ЗаписьЖурналаРегистрации("Затраты",УровеньЖурналаРегистрации.Предупреждение,Метаданные.Справочники.Организации,ВыборкаДетальныеЗаписи.Ссылка,"Для организации "+ВыборкаДетальныеЗаписи.ссылка+ " не установлено соответствие",);
			КонецЕсли;
			//?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные))
			
			/////////////////////////////////////////////////////////
			// Выведем шапку
			
			СведенияОПокупателе = ВыборкаДетальныеЗаписи.Ссылка.НаименованиеПолное;
			СведенияОПокупателе = СведенияОПокупателе + ", ("+ ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), "П20", ?(ГруппаОрганизаций = "перс", "Перс", "Универсам"))+")";
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ВысотаЗаголовка = ОбластьМакета.ВысотаТаблицы;
			
			ОбластьМакета.Параметры.ОрганизацияПредставление = СведенияОПокупателе+" "
				+ мммКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
			ОбластьМакета.Параметры.ТекДата = ТекущаяДатаСеанса();
			
			ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(1 + ВысотаЗаголовка, , 2 + ВысотаЗаголовка);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			/////////////////////////////////////////////////////////
			// Формирование данных
			
			ИтСуммаДоп = 0;
			
			//Если мммОтчетЗатратыСерверПереопределяемый.ИспользоватьМодульРеализацияКасса50(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(ВыборкаДетальныеЗаписи.Ссылка) Тогда 			// Контракт
			//	ТаблицаРеализации = РеализацияКасса50(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			//КонецЕсли;	
			// комментарий Агнессы: пропускаем
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			//	ТаблицаВыручки = ВозвратОтПоставщиков(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);					
			//КонецЕсли;	
			
			ПоступлениеВБанк(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);			// ВСЕ   		
			
			Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(ВыборкаДетальныеЗаписи.Ссылка) Тогда                                    	// Жасмин
				ТаблицаВозврата = ВозвратПокупателям(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
				//ТаблицаЗП = ВыплатаЗП(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
				ТаблицаПП = ОплатаПоставщикамПодрядчикам(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
				ТаблицаДС = ВнутреннееПеремещениеДС(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			КонецЕсли;
			Если мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				ТаблицаЗП = ВыплатаЗП(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			КонецЕсли;
			
			ТаблицаТоваров = ПоступлениеТоваров(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);        // ВСЕ
			
			Если мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыЗП(ВыборкаДетальныеЗаписи.Ссылка) Тогда                                 		// ЗП	
				ТаблицаЗП = Зарплата(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
				ТаблицаИЛ = ИсполнительныеЛисты(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			КонецЕсли;		
			//Если мммОтчетЗатратыСерверПереопределяемый.ИспользоватьМодульРеализацияБанк51(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(ВыборкаДетальныеЗаписи.Ссылка)
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(ВыборкаДетальныеЗаписи.Ссылка)    					// Контракт, Жасмин, Байкал-Ярис-Посей
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				ТаблицаРеализации = РеализацияБанк51(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);			
			//КонецЕсли;	
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ИспользоватьМодульРеализацияКасса50(ВыборкаДетальныеЗаписи.Ссылка)
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(ВыборкаДетальныеЗаписи.Ссылка) 
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				Касса50(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);	
			//КонецЕсли;
			
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(ВыборкаДетальныеЗаписи.Ссылка) Тогда            							// Контракт
			//	ТаблицаРеализации = ПеребросМагнатВулкан(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			//КонецЕсли;		
			Анализ51(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			
			//Если мммОтчетЗатратыСерверПереопределяемый.ИспользоватьПеребросЯрисКонтракт(ВыборкаДетальныеЗаписи.Ссылка)
			//	ИЛИ ВыборкаДетальныеЗаписи.Ссылка.ИНН = "7807244431" Тогда            														// Контракт, !!!Ярис
			//	Таблица3 = ПеребросЯрисКонтракт(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);
			//КонецЕсли;	
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				ТаблицаТоваров = ПрочиеВыплаты(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);				
			//КонецЕсли;
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(ВыборкаДетальныеЗаписи.Ссылка) Тогда 
			//	ПеребросКонтрактВулкан(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ГруппаОрганизаций);				
			//КонецЕсли;	
			
			ТаблицаНалогов = Налоги(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);			
			ТаблицаМатериалов = Материалы(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			ТаблицаУслуг = Услуги(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			ТаблицаУслуг2 = КонтрагентыДополнительныеРеквизиты(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ИтСуммаДоп, ГруппаОрганизаций);
			
			/////////////////////////////////////////////////////////
			// Итого строка 

			ОбластьМакетаИтого = Макет.ПолучитьОбласть("ИтогоСтрока");
			ОбластьМакетаИтого.Параметры.ИтогоУслуги = ТаблицаУслуг.Итог("СуммаУслуг");
			ОбластьМакетаИтого.Параметры.ИтогоНалоги = ТаблицаНалогов.Итог("СуммаНалога") + ?(мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыЗП(ВыборкаДетальныеЗаписи.Ссылка), ТаблицаИЛ.Итог("СуммаНалога") + ТаблицаЗП.Итог("СуммаНалога"), 0);
			ОбластьМакетаИтого.Параметры.ИтСуммаПоступлений = ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов");
			ОбластьМакетаИтого.Параметры.ИтСуммаОплат = ТаблицаМатериалов.Итог("СуммаОплатМатериалов");
			
			ОбластьМакетаИтого.Параметры.ИтСуммаИтого = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаУслуг.Итог("СуммаУслуг") + ТаблицаМатериалов.Итог("СуммаОплатМатериалов");
			
			ТабличныйДокумент.Вывести(ОбластьМакетаИтого);
			
			ОбластьМакетаВсего = Макет.ПолучитьОбласть("Всего");
			ОбластьМакетаВсего.Параметры.ИтСуммаВсего = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов")+ТаблицаУслуг.Итог("СуммаУслуг");
			ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
			ОбластьМакетаВсего = Макет.ПолучитьОбласть("ВсегоПоВсем");
			ОбластьМакетаВсего.Параметры.ИтСуммаВсегоПоВсем = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаМатериалов.Итог("СуммаОплатМатериалов") + ТаблицаУслуг.Итог("СуммаУслуг")
				+ ИтСуммаДоп;
			ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
			
			/////////////////////////////////////////////////////////
			// 	
			
			ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
			РезультатЗапроса = Проверка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка);
			Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(ВыборкаДетальныеЗаписи.Ссылка) 
				ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				РезультатЗапроса = ВетСправка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка);
			КонецЕсли;
			
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок(); 		
			ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
			ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);
			
			ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
			ТаблицаУслуг = НеВошедшиеКонтрагентыПоУслугам(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			
			ТабличныйДокумент.ЗакончитьАвтоГруппировкуСтрок(); 
			КоличествоУровней = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок();
			Для Уровень = 1 По КоличествоУровней Цикл// - 1 Цикл
				ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(КоличествоУровней - Уровень);
			КонецЦикла;	
			
			Запрос57(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			
			//ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
			//ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);
			
			//Если мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыЗП(ВыборкаДетальныеЗаписи.Ссылка)
			//	ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоОрганизации_NMU_Juli(ВыборкаДетальныеЗаписи.Ссылка) Тогда
				ТаблицаПоступлений(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19"), ПотокВыгрузкиП20, ?(ГруппаОрганизаций = "перс",ПотокВыгрузкиПерс,ПотокВыгрузкиОстальные)), Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций);
			//КонецЕсли;					

		Исключение
			МассивОрганизацийСОшибками.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка, ,,ОписаниеОшибки());
		КонецПопытки;
		Прогон = Прогон + 1;
			
	КонецЦикла;
	
	//ПотокВыгрузки.Закрыть();
	ПотокВыгрузкиП20.Закрыть();
	ПотокВыгрузкиПерс.Закрыть();
	ПотокВыгрузкиОстальные.Закрыть();
	
	ДвоичныеДанныеПотокаВыгрузки = ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();	
	ДвоичныеДанныеПотокаВыгрузкиП20 = ПотокВПамятиП20.ЗакрытьИПолучитьДвоичныеДанные();	
	ДвоичныеДанныеПотокаВыгрузкиПерс = ПотокВПамятиПерс.ЗакрытьИПолучитьДвоичныеДанные();
	
	ИмяОрганизации=СтрЗаменить(ВыборкаДетальныеЗаписи.Ссылка.НаименованиеСокращенное,"""","");
	ПарамФайлов=Новый Структура("ТаблДокумент,ИмяОрганизации,ДвоичнДанныеВыгрузки,ДвоичнДанныеВыгрузкиПерс,ДвоичнДанныеВыгрузкиП20,МассивОрганизацийСОшибками",
		ТабличныйДокумент,ИмяОрганизации,ДвоичныеДанныеПотокаВыгрузки,ДвоичныеДанныеПотокаВыгрузкиПерс,ДвоичныеДанныеПотокаВыгрузкиП20, МассивОрганизацийСОшибками
	);
	
	ПоместитьВоВременноеХранилище(ПарамФайлов, АдресХранилища);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Формирование данных //////////////////////////////////
// 
Процедура ПоступлениеВБанк(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("66");//ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);//66
	МассивКорСчетов.Добавить("67");//ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам); //67
	МассивКорСчетов.Добавить("76");
	МассивКорСчетов.Добавить("77");
	//
	МассивКорСчетов.Добавить("50");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаВыручки,
		|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, 
		|			&ДатаОкончания, 
		|			Авто, 
		|			Счет.Код В (&Счет), 
		|			, 
		|			Организация.ИНН = &Организация, 
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТСчета КАК ВТ),
		|		) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСчет
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";	
		//|ВЫБРАТЬ
		//|	ХозрасчетныйОборотыДтКт.СчетКт.Код КАК СчетКт,
		//|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот,
		//|	ХозрасчетныйОборотыДтКт.СубконтоКт1.Наименование КАК СубконтоКт1
		//|ИЗ
		//|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		//|			&ДатаНачала,
		//|			&ДатаОкончания,
		//|			Месяц,
		//|			,
		//|			,
		//|			СчетКт В ИЕРАРХИИ
		//|				(ВЫБРАТЬ
		//|					ВТСчета.Счет
		//|				ИЗ
		//|					ВТСчета),
		//|			,
		//|			Организация.ИНН = &Организация) КАК ХозрасчетныйОборотыДтКт
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ХозрасчетныйОборотыДтКт.СчетКт,
		//|	ХозрасчетныйОборотыДтКт.СубконтоКт1";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			//Для Каждого Стр Из Ответ.Результат Цикл
			//	Если Лев(Стр.СчетКт, 2) "50" Тогда
			//		СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) + Разделитель
			//		+ "Выписка" + Разделитель + "51" + Разделитель + Стр.СчетКт + Разделитель + Стр.СуммаОборот
			//		+Разделитель+"Поступление наличных в банк"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//		
			//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//		
			//	Иначе
			//		СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) + Разделитель
			//		+ "Выписка" + Разделитель + "51" + Разделитель + Стр.СчетКт + Разделитель + Стр.СуммаОборот
			//		+Разделитель+"Поступление наличных в банк"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//		
			//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//		
			//		//*********************************************
			//		СтрЗаписи=СокрЛП("5050505050")+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//		+"Операция"+Разделитель+"51"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель
			//		+ Стр.СуммаОборот
			//		+Разделитель+"Сдача наличных в банк "+СокрЛП(Организация.ИНН) + Разделитель + ГруппаОрганизаций;
			//		
			//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//	КонецЕсли;
				
				
				СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) + Разделитель
				+ "Выписка" + Разделитель + "51" + Разделитель + Ответ.Результат[0].КорСчет + Разделитель + СокрЛП(Ответ.Результат.Итог("СуммаВыручки"))
				+Разделитель+"Поступление наличных в банк"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
				//*********************************************
				СтрЗаписи=СокрЛП("5050505050")+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+"51"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаВыручки"))
				+Разделитель+"Сдача наличных в банк "+СокрЛП(Организация.ИНН) + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
			//КонецЦикла;
						
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПеребросКонтрактВулкан(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("60");	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.Параметры.Вставить("ВидыКорСубконто", "00-000011");

	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорКонтрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).ИНН КАК ИНН
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			,
		|			Организация.ИНН = &Организация
		|				И КорСубконто1 В (ВЫБРАТЬ Т.Ссылка ИЗ Справочник.Контрагенты КАК Т ГДЕ Т.Код В (&ВидыКорСубконто)),
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСубконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";	
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Таблица3 = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотКт"))+Разделитель+"Прочие выплаты Кнтр"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);

			СтрЗаписи=СокрЛП(Таблица3[0].ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Таблица3[0].КорКонтрагент)+Разделитель
			+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотКт"))+Разделитель+"Прочие поступления Влкн"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;

			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);

						
		КонецЕсли;	
	КонецЕсли;		
	
КонецПроцедуры	

Функция ВозвратОтПоставщиков(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("57");

	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаВозврата,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто2) КАК Субконто1,
		|	ХозрасчетныйОбороты.Счет.Код КАК Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, 
		|			&ДатаОкончания, 
		|			Авто, 
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета), 
		|			, 
		|			Организация.ИНН = &Организация, 
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|		) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто2
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";	
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	ТаблицаВозврата = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"51"+Разделитель+"57"+Разделитель+СокрЛП(ТаблицаВозврата.Итог("СуммаВозврата"))+Разделитель+"Возврат От Поставщиков"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//***********************************************************
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"57"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаВозврата.Итог("СуммаВозврата"))+Разделитель+"ОплатаПоставщикамПодрядчикам"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;

КонецФункции

Функция ВозвратПокупателям(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);//66
	//МассивКорСчетов.Добавить("67");//ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам); //67
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "50");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаВозврата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВозвратПокупателю)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";		
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"90.1.1"+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаВозврата"))+Разделитель+"возвр покуп"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;

КонецФункции	

Функция ВыплатаЗП(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	//МассивКорСчетов = Новый Массив;
	//МассивКорСчетов.Добавить("76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);//66
	//МассивКорСчетов.Добавить("67");//ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам); //67
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "50");
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаЗП
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация,, ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаТруда)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";		
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=//СокрЛП(Организация.ИНН)
				СокрЛП("5050505050")+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"76"+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаЗП"))+Разделитель+"выплата зп";
				+"Операция"+Разделитель+"50.1"+Разделитель+"51"+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаЗП"))+Разделитель+"депоненты"+//"выплата зарплаты"+
				?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "")+Разделитель+ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;

КонецФункции	

Функция ОплатаПоставщикамПодрядчикам(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("60");//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);//60
	//МассивКорСчетов.Добавить("67");//ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам); //67
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "50");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";		
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"60"+Разделитель+СокрЛП(Ответ.Результат.Итог("Сумма"))+Разделитель+"оплата товара"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;

КонецФункции	

Функция ВнутреннееПеремещениеДС(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("51");//ПланыСчетов.Хозрасчетный.РасчетныеСчета);//51
	//МассивКорСчетов.Добавить("67");//ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам); //67
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "50");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;
	    |
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
	    |
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВнутреннееДвижениеДС)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";		
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"51"+Разделитель+СокрЛП(Ответ.Результат.Итог("Сумма"))+Разделитель+"поступл с рс"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;

КонецФункции	

Функция ПоступлениеТоваров(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Ответ = Неопределено;
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ЖАСМИН Поставщики"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ЖАСМИН Поставщики""");
		КонецЕсли;			
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""Поставщики БАЙКАЛ"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""Поставщики БАЙКАЛ""");
		КонецЕсли;			
	Иначе
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ПОСТАВЩИКИ ТОВАРА"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ПОСТАВЩИКИ ТОВАРА""");
		КонецЕсли;	
	КонецЕсли;
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "60"); //ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ЖАСМИН Поставщики");
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Поставщики БАЙКАЛ");
	Иначе
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ПОСТАВЩИКИ ТОВАРА");
	КонецЕсли;
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаТоваров
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В
		|				(ВЫБРАТЬ
		|					*
		|				ИЗ
		|					ВТСчета КАК ВТ),
		|			,
		|			Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ 
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				Контрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты КАК Контрагенты)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
		|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"ПоступлениеТоваров"+Разделитель+"60"+Разделитель+"60"+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаТоваров"))+Разделитель+"Поступление товаров"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции	

Функция Налоги(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
		МассивКорСчетов = Новый Массив;
		МассивКорСчетов.Добавить("68");//(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
		МассивКорСчетов.Добавить("69");//(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала", НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация", Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51"); //		   ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);	
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Код КАК Код
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаНалога,
			|	ХозрасчетныйОбороты.КорСчет.Наименование КАК КорСчет,
			|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорСубконто
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет.Код В (&Счет),
			|			,
			|			Организация.ИНН = &Организация,
			|			КорСчет.Код В (ВЫБРАТЬ ВТ.Код ИЗ ВТСчета КАК ВТ),
			|			) КАК ХозрасчетныйОбороты
			| 
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.КорСчет.Наименование,
			|	ХозрасчетныйОбороты.КорСубконто1
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
			|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	ТаблицаНалогов = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаНалогов Цикл
				ОбластьМакета.Параметры.ВидНалога = Лев(Стр.КорСчет,40)+" "+Лев(Стр.КорСубконто,6);
				ОбластьМакета.Параметры.СуммаНалога = Стр.СуммаНалога;
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;			
			
			Если мммОтчетЗатратыСерверПереопределяемый.ИспользоватьМодульРеализацияБанк51(Организация)
				ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(Организация) Тогда
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Выписка"+Разделитель+"68"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаНалогов.Итог("СуммаНалога"))+Разделитель+"налоги"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;	
			
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			Иначе
	
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Выписка"+Разделитель+"60.1"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаНалогов.Итог("СуммаНалога"))+Разделитель+"налоги"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;	
			
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			КонецЕсли;
						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;
	
КонецФункции 	

Функция Материалы(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""Материалы"",Истина,,);");
	Если СтрНайти(Ответ, """Value"": {") > 0 И 
		СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
		СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""Материалы""");
	КонецЕсли;	
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);	
	//Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.Параметры.Вставить("Счет", "60");		//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Материалы");
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОбороты.Субконто1 КАК ВидНалога,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОплатМатериалов,
		|	0 КАК СуммаПоступленийМатериалов
		|ПОМЕСТИТЬ ВТМатериалы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В
		|				(ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Организация.ИНН = &Организация,
		|			КорСчет.Код = &КорСчет,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	NULL,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНалога
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(Материалы.ВидНалога) КАК ВидНалога,
		|	СУММА(Материалы.СуммаПоступленийМатериалов) КАК СуммаПоступленийМатериалов,
		|	СУММА(Материалы.СуммаОплатМатериалов) КАК СуммаОплатМатериалов
		|ИЗ
		|	ВТМатериалы КАК Материалы
		|
		|СГРУППИРОВАТЬ ПО
		|	Материалы.ВидНалога
		|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаМатериалов = Ответ.Результат;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаМатериалов Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаОплатМатериалов;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			
			//********************************************************************************
			Если мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмаКонтракт(Организация) 
				ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Организация) 
				ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(Организация) Тогда
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"ПоступлениеМатериалов"+Разделитель+"51"+Разделитель+"60.1"+Разделитель+СокрЛП(ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов"))+Разделитель+"Поступления по материалам"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыЗП(Организация) ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) 
				ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"ПоступлениеМатериалов"+Разделитель+"10.1"+Разделитель+"60.1"+Разделитель+СокрЛП(ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов"))+Разделитель+"Поступления по материалам"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;	
			Иначе 
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"ПоступлениеМатериалов"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов"))+Разделитель+"Поступления по материалам"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			КонецЕсли;	
				
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"60.1"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаМатериалов.Итог("СуммаОплатМатериалов"))+Разделитель+"Оплата материалы"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);	
			//********************************************************************************
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция Услуги(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ЗАТРАТЫ"",Истина,,);");
	Если СтрНайти(Ответ, """Value"": {") > 0 И 
		СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
		СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ЗАТРАТЫ""");
	КонецЕсли;	
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);	
	Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ЗАТРАТЫ");	
	Запрос.Параметры.Вставить("Счет", "60");		//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета51
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК ВидНалога,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаУслуг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета.Код
		|				ИЗ
		|					ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							ВтОфис.Контрагент
		|						ИЗ
		|							ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет.Код = &КорСчет,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1),
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета51.Код
		|				ИЗ
		|					ВТСчета51),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В (ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.УслугиБанков))
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
		|";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаУслуг = Ответ.Результат;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаУслуг Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаУслуг;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоУслугам");
			ОбластьМакета.Параметры.ИтСуммаУслуг = ТаблицаУслуг.Итог("СуммаУслуг");
			ТабличныйДокумент.Вывести(ОбластьМакета);	
			
			//********************************************************************************
			СтрЗаписи= СокрЛП(Организация.ИНН)+Разделитель+СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"62.1"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаУслуг.Итог("СуммаУслуг"))+Разделитель+"затраты"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);	
			//********************************************************************************
			
		КонецЕсли;
	КонецЕсли;

	Возврат Ответ.Результат;
	
КонецФункции

Функция КонтрагентыДополнительныеРеквизиты(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ИтСуммаДоп, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	МассивСчетов5 = Новый Массив;
	МассивСчетов5.Добавить("60");//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	МассивСчетов5.Добавить("76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);	
	Запрос.Параметры.Вставить("Счет", МассивСчетов5);
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК ВидНалога,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.Контрагенты).ИНН КАК ВидНалогаИНН,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаУслуг,
		|	ПРЕДСТАВЛЕНИЕ(КонтрагентыДополнительныеРеквизиты.Значение) КАК ТипКлиента
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета.Код
		|				ИЗ
		|					ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ВтОфис.Контрагент
		|					ИЗ
		|						ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет.Код В (&КорСчет),
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО ХозрасчетныйОбороты.Субконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
		|ИТОГИ
		|	СУММА(СуммаУслуг)
		|ПО
		|	ТипКлиента
		|";

	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаУслуг2 = Ответ.Результат;
			
			Для Каждого Стр Из ТаблицаУслуг2 Цикл
				Если Не ЗначениеЗаполнено(Стр.ВидНалога) Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогиПоДопРекизитам");					
					ОбластьМакета.Параметры.ВидНалога=Стр.ТипКлиента;
					ИтСуммаДоп=ИтСуммаДоп+Стр.СуммаУслуг;
					//********************************************************************************
					Если СокрЛП(Стр.ТипКлиента)="Офис" Тогда
						СтрЗаписи= СокрЛП(Организация.ИНН)+Разделитель+СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Выписка"+Разделитель+"62.1"+Разделитель+"51"+Разделитель+СокрЛП(Стр.СуммаУслуг)+Разделитель+"Оплата поставщику "+ Стр.ТипКлиента+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					ИначеЕсли СокрЛП(Стр.ТипКлиента)="К 72" Тогда
						СтрЗаписи= СокрЛП(Организация.ИНН)+Разделитель+СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Выписка"+Разделитель+"62.1"+Разделитель+"51"+Разделитель+СокрЛП(Стр.СуммаУслуг)+Разделитель+"Оплата поставщику "+ Стр.ТипКлиента+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					КонецЕсли; 
					//********************************************************************************
				Иначе
					ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
					ОбластьМакета.Параметры.ВидНалога=Стр.ВидНалога;
					//********************************************************************************	
					Если СокрЛП(Стр.ТипКлиента)="Фирмы универсама" Тогда
						СтрЗаписи= СокрЛП(Организация.ИНН)+Разделитель+СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Выписка"+Разделитель+"62.1"+Разделитель+"51"+Разделитель+СокрЛП(Стр.СуммаУслуг)+Разделитель+Стр.ТипКлиента+" "+Стр.ВидНалогаИНН+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
						Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
							// реверс
							СтрЗаписи= СокрЛП(Стр.ВидНалогаИНН)+Разделитель+СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Стр.ВидНалогаИНН)+Разделитель
							+"Выписка"+Разделитель+"51"+Разделитель+"62.1"+Разделитель+СокрЛП(Стр.СуммаУслуг)+Разделитель+"Прочие поступления Жсмн"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
							
							ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли; 								
				ОбластьМакета.Параметры.СуммаУслуг=Стр.СуммаУслуг;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции	

Функция Проверка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация)
	
	ОбластьМакетаПроверка = Макет.ПолучитьОбласть("Проверка");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет",  "51");//ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	
	Запрос.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаПроверки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет.Код В (&Счет), , Организация.ИНН = &Организация, , ) КАК ХозрасчетныйОбороты";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда	
			РезультатЗапроса = Ответ.Результат;	
			ОбластьМакетаПроверка.Параметры.СуммаПроверки = РезультатЗапроса.Итог("СуммаПроверки");
	//	КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакетаПроверка);	
	
	Возврат Ответ.Результат;
	
КонецФункции	

Функция ВетСправка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация)
	
	ОбластьВетСправка = Макет.ПолучитьОбласть("ВетСправка");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет",  "44.03");
	
	Запрос.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаВетСправка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет.Код В (&Счет), , Организация.ИНН = &Организация, , ) КАК ХозрасчетныйОбороты";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда	
			РезультатЗапроса = Ответ.Результат;	
			ОбластьВетСправка.Параметры.СуммаВетСправка=РезультатЗапроса.Итог("СуммаВетСправка")*1.2;
	//	КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьВетСправка);	
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция НеВошедшиеКонтрагентыПоУслугам(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	ОбластьМакетаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугам");
	ОбластьМакетаГруппаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугамГруппа");
		
	ВыполняемыйКод = "ГруппаКонтрагентовЗатраты=Справочники.Контрагенты.НайтиПоНаименованию(""ЗАТРАТЫ"",Истина,,);
		|ГруппаКонтрагентовМатериалы=Справочники.Контрагенты.НайтиПоНаименованию(""Материалы"",Истина,,);
		|МассивКлиентов= Новый Массив;
		|МассивКлиентов.Добавить(ГруппаКонтрагентовЗатраты);
		|МассивКлиентов.Добавить(ГруппаКонтрагентовМатериалы);
		|Запрос = Новый Запрос;
		|Запрос.УстановитьПараметр(""ДатаНачала"", 		НачалоДня(Дата("+Формат(ПараметрыОтчета.НачалоПериода,"ДФ=yyyy,MM,dd")+")));
		|Запрос.УстановитьПараметр(""ДатаОкончания"", 	Новый Граница(КонецДня(Дата("+Формат(ПараметрыОтчета.КонецПериода,"ДФ=yyyy,MM,dd")+")), ВидГраницы.Включая));
		|Запрос.УстановитьПараметр(""Организация"", 	"""+Организация.ИНН+""");
		|Запрос.УстановитьПараметр(""ВидыСубконто"", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		|Запрос.УстановитьПараметр(""ВыбСчет"", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
		|Запрос.УстановитьПараметр(""КорСчет"", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		|Запрос.УстановитьПараметр(""ГруппаКонтрагентов"", МассивКлиентов);
		|ДопСвойство= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(""ТипКлиента"");
		|Запрос.УстановитьПараметр(""Свойство"", ДопСвойство);
		|Запрос.Текст =""ВЫБРАТЬ
		||	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		||ПОМЕСТИТЬ ВтОфис
		||ИЗ
		||	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		||ГДЕ
		||	КонтрагентыДополнительныеРеквизиты.Свойство = &Свойство
		||
		||ИНДЕКСИРОВАТЬ ПО
		||	Контрагент
		||;
		||
		||////////////////////////////////////////////////////////////////////////////////
		||ВЫБРАТЬ РАЗРЕШЕННЫЕ
		||	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		||	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаУслуг
		||ИЗ
		||	РегистрБухгалтерии.Хозрасчетный.Обороты(
		||			&ДатаНачала,
		||			&ДатаОкончания,
		||			Авто,
		||			Счет В ИЕРАРХИИ (&ВыбСчет),
		||			&ВидыСубконто,
		||			НЕ Субконто1 В
		||						(ВЫБРАТЬ
		||							ВтОфис.Контрагент
		||						ИЗ
		||							ВтОфис)
		||				И Организация.ИНН = &Организация,
		||			КорСчет = &КорСчет,
		||			) КАК ХозрасчетныйОбороты
		||ГДЕ
		||	НЕ ХозрасчетныйОбороты.Субконто1 В ИЕРАРХИИ (&ГруппаКонтрагентов)
		||
		||СГРУППИРОВАТЬ ПО
		||	ХозрасчетныйОбороты.Субконто1
		||ИТОГИ
		||	СУММА(СуммаУслуг)
		||ПО
		||	Контрагент ТОЛЬКО ИЕРАРХИЯ"";		
		|ТаблицаУслуг = Запрос.Выполнить().Выгрузить();
		|ВозвращаемоеЗначение = Новый ТаблицаЗначений;
		|ВозвращаемоеЗначение.Колонки.Добавить(""ЭтоГруппа"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""Контрагент"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""СуммаУслуг"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""Уровень"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""СвояФирма"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""ПоставщикиТовара"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""ИНН"");		
		|Для Каждого Стр Из ТаблицаУслуг Цикл
		|	Если НЕ ЗначениеЗаполнено(Стр.Контрагент) Тогда
		|		Продолжить;
		|	КонецЕсли;	
		|	
		|	НоваяСтр = ВозвращаемоеЗначение.Добавить();
		|	НоваяСтр.ЭтоГруппа = Стр.Контрагент.ЭтоГруппа;
		|	НоваяСтр.Уровень = Стр.Контрагент.Уровень();
		|	НоваяСтр.СуммаУслуг = Стр.СуммаУслуг;
		|	НоваяСтр.Контрагент = СокрЛП(Стр.Контрагент);
		|   НоваяСтр.ИНН = Стр.Контрагент.ИНН;	
		|	Если НЕ Стр.Контрагент.ЭтоГруппа Тогда
		|		Если СтрНайти(Стр.Контрагент.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;		
		|		КонецЕсли;			
		|	КонецЕсли;
		|КонецЦикла;";				

	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunCode(ВыполняемыйКод)
	);
	ТаблицаУслуг = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		
		ТаблицаСвоихФирм = ПолучитьТаблицуСвоихФирм(Организация);
		ТаблицаСумм = Новый ТаблицаЗначений;
		ТаблицаСумм.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
		ТаблицаСумм.Колонки.Добавить("ПоставщикиТовара", Новый ОписаниеТипов("Булево"));
		
		Если Ответ.Результат.Количество() > 0 Тогда
			Для Каждого Стр Из ТаблицаУслуг Цикл
				Если Не ЗначениеЗаполнено(Стр.Контрагент) Тогда
					Продолжить;
				КонецЕсли;
				Если (Стр.ЭтоГруппа)Тогда //и (Стр.Контрагент.Уровень()=0) Тогда
					ОбластьМакетаГруппаКлиентов.Параметры.Контрагент=Стр.Контрагент;
					ОбластьМакетаГруппаКлиентов.Параметры.СуммаУслуг=Стр.СуммаУслуг;
					ТабличныйДокумент.Вывести(ОбластьМакетаГруппаКлиентов,Стр.Уровень);
				Иначе
					ОбластьМакетаКлиентов.Параметры.Контрагент=Стр.Контрагент;
					ОбластьМакетаКлиентов.Параметры.СуммаУслуг=Стр.СуммаУслуг;
					
					ТабличныйДокумент.Вывести(ОбластьМакетаКлиентов,Стр.Уровень);
					
					///
					Если НЕ ТаблицаСвоихФирм.Найти(Стр.ИНН, "ИНН") = Неопределено Тогда
						// переброс денег. Запись должна быть сформирована ПрочиеВыплаты
					Иначе
						НоваяСтрока = ТаблицаСумм.Добавить();
						НоваяСтрока.Сумма =  Стр.СуммаУслуг;
						НоваяСтрока.ПоставщикиТовара = Стр.ПоставщикиТовара;
					КонецЕсли;		
					
				КонецЕсли; 					
			КонецЦикла; 
			//********************************************************************************
			ТаблицаСумм.Свернуть("ПоставщикиТовара", "Сумма");
			тзПоставщики = ТаблицаСумм.Скопировать(ТаблицаСумм.НайтиСтроки(Новый Структура("ПоставщикиТовара", Истина)));
			Если тзПоставщики.Количество() > 0 Тогда
				Попытка
					СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) +Разделитель
					+"Выписка" + Разделитель + "60" + Разделитель + "51" + Разделитель + тзПоставщики.Итог("Сумма") +
					Разделитель + "Поставщики товара"
					+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " " + СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				Исключение
				КонецПопытки; 				
			КонецЕсли;	
			
			тзНеВошедшие = ТаблицаСумм.Скопировать(ТаблицаСумм.НайтиСтроки(Новый Структура("ПоставщикиТовара", Ложь)));
			Если тзНеВошедшие.Количество() > 0 Тогда
				Попытка
					СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) +Разделитель
					+"Выписка" + Разделитель + "60" + Разделитель + "51" + Разделитель + тзНеВошедшие.Итог("Сумма") +
					Разделитель + "не вошедшие услуги"//"Поставщики товара"
					+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " " + СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				Исключение
				КонецПопытки; 
			//ИначеЕсли 
				
			КонецЕсли;
			//********************************************************************************			
		КонецЕсли;
	Иначе
		ЗаписьЖурналаРегистрации("Отчет затраты",УровеньЖурналаРегистрации.Ошибка,,,Ответ.ОписаниеОшибки);
	КонецЕсли;	
	
	Возврат Ответ.Результат;
	
КонецФункции	

Процедура Запрос57(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	ОбластьМакетаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугам");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("КорСчет", "57");//ПланыСчетов.Хозрасчетный.ПереводыВПути_);
	Запрос.Параметры.Вставить("Счет", "51");//ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаУслуг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Период, Счет.Код В (&Счет), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТСчета), ) КАК ХозрасчетныйОбороты";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Для Каждого Выборка Из Ответ.Результат Цикл
				Если Выборка.СуммаУслуг > 0 Тогда
					ОбластьМакетаКлиентов.Параметры.Контрагент="Счет 57";
					ОбластьМакетаКлиентов.Параметры.СуммаУслуг=Выборка.СуммаУслуг;
					ТабличныйДокумент.Вывести(ОбластьМакетаКлиентов);					
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

Процедура Касса50(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	
	//Возврат;
	
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "50");//ПланыСчетов.Хозрасчетный.Касса);
		Запрос.Параметры.Вставить("СписокКорСчетов", "76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
		Аналитика76=Новый Массив;		
		Аналитика76.Добавить("КОНТРАКТ");         
		Аналитика76.Добавить("МАГНАТ");        // добавить терминал, плутон, вентор
		Аналитика76.Добавить("ТЕРМИНАЛ");
		Аналитика76.Добавить("ВЕНТОР");
		Аналитика76.Добавить("ПЛУТОН");
		Запрос.Параметры.Вставить("ВидыКорСубконто", Аналитика76);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТКонтрагенты
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|;			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица1 = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"50.1"+Разделитель+СокрЛП(Таблица1.Итог("СуммаОборотДт"))+Разделитель+"Выдача в кассу Жсм по 76"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;		
		
		//****************************************************************************************************************
		Аналитика76=Новый Массив;
		Аналитика76.Добавить("Жасмин ООО (Кос)");        
		Аналитика76.Добавить("Жасмин ООО (Хош)");         
		Аналитика76.Добавить("ПОСЕЙДОН рко");         
		Аналитика76.Добавить("ЯРИС рко");	//добавить вираж, пульс, ручей, лавр
		Аналитика76.Добавить("ВИРАЖ ООО");
		Аналитика76.Добавить("ПУЛЬС ООО");
		Аналитика76.Добавить("РУЧЕЙ ООО");
		Аналитика76.Добавить("ЛАВР ООО");
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "50");//ПланыСчетов.Хозрасчетный.Касса);
		Запрос.Параметры.Вставить("СписокКорСчетов", "76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
		Запрос.Параметры.Вставить("ВидыКорСубконто", Аналитика76);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТКонтрагенты
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|;			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица2 = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"90.1.1"+Разделитель+СокрЛП(Таблица2.Итог("СуммаОборотДт"))+Разделитель+"Выручка Жсм"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;
		
		//***********************************Сдача наличных в банк*******************************************************************
		Аналитика51=Новый Массив;
		Аналитика51.Добавить("Розничная выручка");        	
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "50");
		Запрос.Параметры.Вставить("ВидыСубконто", Аналитика51);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И Субконто2 В (ВЫБРАТЬ Т.Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств КАК Т ГДЕ Т.Наименование = ""Розничная выручка""),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица4 = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)
				+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+"51"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+СокрЛП(Таблица4.Итог("СуммаОборотДт"))+Разделитель+
				"Сдача наличных в банк "
				+СокрЛП(Организация.ИНН)+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;
		
		//****************************************************************************************************************
		Аналитика51=Новый Массив;
		Аналитика51.Добавить("Оплата от покупателей");        	
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "91");
		Запрос.Параметры.Вставить("ВидыСубконто", Аналитика51);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И Субконто2 В (ВЫБРАТЬ Т.Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств КАК Т ГДЕ Т.Наименование = ""Оплата от покупателей""),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица4 = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+"51"+Разделитель+"91"+Разделитель+СокрЛП(Таблица4.Итог("СуммаОборотДт"))+Разделитель+"% банка"
				+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;	
		
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
		
		//***********************************Сдача наличных в банк*******************************************************************      	
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "50");
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И Субконто2 В (ВЫБРАТЬ Т.Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств КАК Т ГДЕ Т.Наименование = ""Розничная выручка""),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица4 = Ответ.Результат;
				СтрЗаписи = СокрЛП("5050505050")//СокрЛП(Организация.ИНН)
				+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+"51"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+СокрЛП(Таблица4.Итог("СуммаОборотДт"))+Разделитель+"Сдача наличных в банк "+СокрЛП(Организация.ИНН)+
				?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;
		
		//****************************************************************************************************************  	
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "91");
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И Субконто2 В (ВЫБРАТЬ Т.Ссылка ИЗ Справочник.СтатьиДвиженияДенежныхСредств КАК Т ГДЕ Т.Наименование = ""Оплата от покупателей""),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица4 = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+"51"+Разделитель+"91"+Разделитель+СокрЛП(Таблица4.Итог("СуммаОборотДт"))+Разделитель+"% банка"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			КонецЕсли;
		КонецЕсли;		
		
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Организация) Тогда
		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "50");//ПланыСчетов.Хозрасчетный.Касса);
		МассивКорСчетов = Новый Массив;
		МассивКорСчетов.Добавить("90.01");
		МассивКорСчетов.Добавить("51");
		МассивКорСчетов.Добавить("70");
		МассивКорСчетов.Добавить("76");
		Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////	
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ 
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаРеализации,
			|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.КорСчет.Код
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";			
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		ТаблицаРеализации = Ответ.Результат;
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				
				Для каждого Выборка Из ТаблицаРеализации Цикл		
					Если Лев(Выборка.КорСчет,2)=Лев("90.01",2) Тогда
						
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+Выборка.КорСчет+Разделитель+СокрЛП(Выборка.СуммаРеализации)+Разделитель+"Выручка"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					ИначеЕсли Выборка.КорСчет="51" Тогда
						
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"51"+Разделитель+СокрЛП(Выборка.СуммаРеализации)+Разделитель+"инкасация"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					ИначеЕсли Выборка.КорСчет="70" Тогда
						
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"70"+Разделитель+СокрЛП(Выборка.СуммаРеализации)+Разделитель+"выплата зп"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					ИначеЕсли Лев(Выборка.КорСчет,2)=Лев("76",2) Тогда
						
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"50.1"+Разделитель+СокрЛП(Выборка.СуммаРеализации)+Разделитель+"прих с 50 мгнт,кнтр"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
	
					КонецЕсли;
				КонецЦикла; 				
			КонецЕсли;
		КонецЕсли;
		
		///////////////////////////////////////////
		// СдачаНаличныхБанк
		// создается движение операцией
		//Запрос = мммСервер.ЗапросПрокси();
		//Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		//Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		//Запрос.Параметры.Вставить("Организация",   Организация.Наименование);
		//Запрос.Параметры.Вставить("Счет", "51");
		//Запрос.Параметры.Вставить("СписокКорСчетов", "50");
		//Запрос.ТекстЗапроса = "
		//	|ВЫБРАТЬ
		//	|	Хозрасчетный.Ссылка КАК Счет
		//	|ПОМЕСТИТЬ ВТСчета
		//	|ИЗ
		//	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		//	|ГДЕ
		//	|	(Хозрасчетный.Код В (&Счет)
		//	|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		//	|;		
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////	
		//	|ВЫБРАТЬ
		//	|	Хозрасчетный.Ссылка КАК Счет
		//	|ПОМЕСТИТЬ ВТКорСчета
		//	|ИЗ
		//	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		//	|ГДЕ
		//	|	(Хозрасчетный.Код В (&СписокКорСчетов)
		//	|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		//	|;		
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ 
		//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		//	|	ХозрасчетныйОбороты.Счет.Код КАК Счет,
		//	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто2) КАК Субконто2
		//	|ИЗ
		//	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.Наименование = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ХозрасчетныйОбороты.Счет,
		//	|	ХозрасчетныйОбороты.Субконто2
		//	|
		//	|ИМЕЮЩИЕ
		//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		//
		//Ответ = мммСервер.ДеСериализовать(
		//	Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		//);
		//Если НЕ Ответ.Ошибка Тогда
		//	Если Ответ.Результат.Количество() > 0 Тогда
		//		Таблица51 = Ответ.Результат;
		//		СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
		//		+"Выписка"+Разделитель+"51"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+СокрЛП(Таблица51.Итог("СуммаОборотДт"))+Разделитель+"Сдача наличных в банк"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
		//		
		//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
		//		
		//	КонецЕсли;
		//КонецЕсли;
		
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоВулкан(Организация) Тогда
		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "50");
		Запрос.Параметры.Вставить("СписокКорСчетов", "90.01");
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////	
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ 
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) + ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотКт), 0) КАК СуммаРеализации
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				ТаблицаРеализации = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"90.1.1"+Разделитель+СокрЛП(ТаблицаРеализации.Итог("СуммаРеализации"))+Разделитель+"Реализация касса"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
			КонецЕсли;
		КонецЕсли;
				
	Иначе
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "50");//ПланыСчетов.Хозрасчетный.Касса);
		Запрос.Параметры.Вставить("СписокКорСчетов", "76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////	
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ 
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) - ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотКт), 0) КАК СуммаРеализации,
			|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК Субконто1
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.Субконто1";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				ТаблицаРеализации = Ответ.Результат;
				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"90.1.1"+Разделитель+СокрЛП(ТаблицаРеализации.Итог("СуммаРеализации"))+Разделитель+"Реализация касса"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция РеализацияКасса50_90(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "50");//ПланыСчетов.Хозрасчетный.Касса);
	Запрос.Параметры.Вставить("СписокКорСчетов", "90.01");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) - ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотКт), 0) КАК СуммаРеализации
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет.Код В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет.Код В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаРеализации = Ответ.Результат;
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+мммОтчетЗатратыСерверПереопределяемый.Счет50(Организация)+Разделитель+"90.01"+Разделитель+СокрЛП(ТаблицаРеализации.Итог("СуммаРеализации"))+Разделитель+"Реализация касса"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция РеализацияБанк51(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", "62");
	МассивДДС= Новый Массив;
	МассивДДС.Добавить("СБП");
	МассивДДС.Добавить("Эквайринг");
	Запрос.Параметры.Вставить("СтатьиДенеженыхСредств", МассивДДС);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТСтатьиДДС
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|ГДЕ
		|	СтатьиДвиженияДенежныхСредств.Наименование В (&СтатьиДенеженыхСредств)
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ 
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаРеализации
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В (&Счет),
		|			,
		|			Организация.ИНН = &Организация
		|				И Субконто2 В (ВЫБРАТЬ * ИЗ ВТСтатьиДДС)"+?(мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация), " И НЕ КорСубконто1.Наименование = ""СБЕРБАНК Эквайринг 551000140996. М21""","")+",
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.СуммаОборотДт + ХозрасчетныйОбороты.СуммаОборотКт
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";
	
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Организация) Тогда
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ 
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаРеализации
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет.Код В (&Счет),
			|			,
			|			Организация.ИНН = &Организация,
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.СуммаОборотДт + ХозрасчетныйОбороты.СуммаОборотКт
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) + СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";				
	КонецЕсли;	
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаРеализации = Ответ.Результат;
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"51"+Разделитель+"62"+Разделитель+СокрЛП(ТаблицаРеализации.Итог("СуммаРеализации"))+Разделитель+"Реализация банк"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);

		КонецЕсли;
	КонецЕсли;
	
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		МассивКорСубконто = Новый Массив;
		МассивКорСубконто.Добавить("ПОКУПАТЕЛИ ЖАСМИН"); 
		МассивКорСубконто.Добавить("РЕКЛАМА 62,1 ЖАСМИН"); 
		МассивКорСубконто.Добавить("ЖАСМИН Поставщики"); 
		МассивДДС= Новый Массив;
		МассивДДС.Добавить("Оплата от покупателей");
		МассивДДС.Добавить("Прочие поступления");		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "62");
		Запрос.Параметры.Вставить("СтатьиДенеженыхСредств",   МассивДДС);
		Запрос.Параметры.Вставить("ВидыКорСубконто", МассивКорСубконто);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТСтатьиДДС
			|ИЗ
			|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
			|ГДЕ
			|	СтатьиДвиженияДенежныхСредств.Наименование В (&СтатьиДенеженыхСредств)
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТКонтрагенты
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто) 
			|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
			|;			
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""62.05""
			|			ТОГДА ""ВНД""
			|		ИНАЧЕ ""Поставщики""
			|	КОНЕЦ КАК ТипКлиента
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет.Код В (&Счет),
			|			,
			|			Организация.ИНН = &Организация
			|				И Субконто2 В (ВЫБРАТЬ * ИЗ ВТСтатьиДДС)
			|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
			|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками)),
			|			) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""62.05""
			|			ТОГДА ""ВНД""
			|		ИНАЧЕ ""Поставщики""
			|	КОНЕЦ
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				тзВыборка = Ответ.Результат;
				
				Для Каждого Выборка Из тзВыборка Цикл
					Если  Выборка.ТипКлиента =	"Поставщики"	 Тогда
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Выписка"+Разделитель+"51"+Разделитель+"62.01"+Разделитель+СокрЛП(Выборка.СуммаОборотДт)+Разделитель+"Поступления от покупателей Опт 62.1"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					ИначеЕсли Выборка.ТипКлиента =	"ВНД"	 Тогда 
						СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
						+"Выписка"+Разделитель+"51"+Разделитель+"62.05"+Разделитель+СокрЛП(Выборка.СуммаОборотДт)+Разделитель+"реклама 62.5"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
						
						ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);

					КонецЕсли; 			
					
				КонецЦикла;

			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;		
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция ПеребросЯрисКонтракт(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Если Организация.Инн = "7807244431" Тогда //Ярис
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "62");
		ВыбКонтрагент="КОНТРАКТ"; // Ярис
		Запрос.Параметры.Вставить("ВидыКорСубконто",   ВыбКонтрагент);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////	
			|ВЫБРАТЬ
			|	Хозрасчетный.Ссылка КАК Счет
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТКонтрагенты
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Наименование В (&ВидыКорСубконто)
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорКонтрагент,
			|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).ИНН КАК КорКонтрагентИНН
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет В (ВЫБРАТЬ * ИЗ ВТсчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
			|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.КорСубконто1
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица3 = Ответ.Результат;

				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Выписка"+Разделитель+"51"+Разделитель+"62"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотКт"))+Разделитель+"Прочие поступления Кнтр"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51");
		Запрос.Параметры.Вставить("СписокКорСчетов", "60");
		ВыбКонтрагент="00-000025"; // Ярис
		Запрос.Параметры.Вставить("ВидыКорСубконто",   ВыбКонтрагент);
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Код КАК Код
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////	
			|ВЫБРАТЬ
			|	Хозрасчетный.Код КАК Код
			|ПОМЕСТИТЬ ВТКорСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТКонтрагенты
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Код В (&ВидыКорСубконто)
			|;		
			|
			|////////////////////////////////////////////////////////////////////////////////		
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
			|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорКонтрагент,
			|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).ИНН КАК КорКонтрагентИНН
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет.Код В (ВЫБРАТЬ * ИЗ ВТсчета),
			|			,
			|			Организация.ИНН = &Организация
			|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
			|			КорСчет.Код В (ВЫБРАТЬ * ИЗ ВТКорСчета),
			|			) КАК ХозрасчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.КорСубконто1
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0";
		
		Ответ = мммСервер.ДеСериализовать(
			Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
		);
		Если НЕ Ответ.Ошибка Тогда
			Если Ответ.Результат.Количество() > 0 Тогда
				Таблица3 = Ответ.Результат;

				СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
				+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотКт"))+Разделитель+"Прочие выплаты Ярс"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);

				СтрЗаписи=СокрЛП(Таблица3[0].КорКонтрагентИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Таблица3[0].КорКонтрагент)+Разделитель
				+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотКт"))+Разделитель+"Прочие поступления Кнтр"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
				ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;	
	
КонецФункции	

Функция ПеребросМагнатВулкан(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", "62");
	Аналитика=Новый Массив;		         
	Аналитика.Добавить("Магнат");   
	Запрос.Параметры.Вставить("ВидыКорСубконто", Аналитика);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
		|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
		|;			
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорКонтрагент
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			,
		|			Организация.ИНН = &Организация
		|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСубконто1		
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Таблица3 = Ответ.Результат;
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+"51"+Разделитель+"62"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотДт"))+Разделитель+"Прочие поступления Мгнт"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
		КонецЕсли;
	КонецЕсли;	
	
	//*************************************************
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", "62");
	Аналитика=Новый Массив;		         
	Аналитика.Добавить("Вулкан");   
	Запрос.Параметры.Вставить("ВидыКорСубконто", Аналитика);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
		|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто) 
		|		ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель.Наименование В (&ВидыКорСубконто)
		|;			
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорКонтрагент
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			,
		|			Организация.ИНН = &Организация
		|				И КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты),
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСубконто1		
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Таблица3 = Ответ.Результат;
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Операция"+Разделитель+"51"+Разделитель+"62"+Разделитель+СокрЛП(Таблица3.Итог("СуммаОборотДт"))+Разделитель+"Прочие поступления Влкн"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
		КонецЕсли;
	КонецЕсли;	
		
	Возврат Ответ.Результат;
	
КонецФункции

Функция Анализ51(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	//Запрос.Параметры.Вставить("СписокКорСчетов", "62");
	//Аналитика = Новый Массив;		         
	//Аналитика.Добавить("Аренда");   
	//Запрос.Параметры.Вставить("Субконто", Аналитика);
	Запрос.ТекстЗапроса = 
		"//
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ ЛОЖЬ
		|	ИЛИ Хозрасчетный.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет)
		|;
		|//
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
		|	ХозрасчетныйОбороты.Счет.Код КАК Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
		|	КОНЕЦ КАК КорСчет,
		|	ХозрасчетныйОбороты.Субконто2.Наименование КАК Субконто2
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала,
		|		&ДатаОкончания,
		|		Авто,
		|		Счет В (
		|			ВЫБРАТЬ
		|				ВТСчета.Счет КАК Счет
		|			ИЗ
		|				ВТСчета КАК ВТСчета),
		|		,
		|		Организация.ИНН = &Организация,
		|		,
		|		) КАК ХозрасчетныйОбороты
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
		|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.Субконто2
		|";

	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Таблица3 = Ответ.Результат;
			Для Каждого стр Из Таблица3 Цикл
				Если стр.КорСчет = "62" И СокрЛП(НРег(стр.Субконто2)) = "аренда" Тогда
					СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
					+"Выписка"+Разделитель+"51"+Разделитель+"62"+Разделитель+СокрЛП(стр.СуммаОборотДт)+Разделитель+"Аренда" + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				ИначеЕсли стр.КорСчет = "91" И СокрЛП(НРег(стр.Субконто2)) = "прочие поступления" Тогда
					СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
					+"Выписка"+Разделитель+"51"+Разделитель+"91"+Разделитель+СокрЛП(стр.СуммаОборотДт)+Разделитель+"% банка" + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");
	Запрос.Параметры.Вставить("СписокКорСчетов", "57");
	//Аналитика = Новый Массив;		         
	//Аналитика.Добавить("Аренда");   
	//Запрос.Параметры.Вставить("Субконто", Аналитика);
	Запрос.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ ЛОЖЬ
		|	ИЛИ Хозрасчетный.Код В (&СписокКорСчетов)
		|	ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов)
		|;
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ ЛОЖЬ
		|	ИЛИ Хозрасчетный.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|	ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет)
		|;
		|//
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
		|	ХозрасчетныйОбороты.Счет.Код КАК Счет,
		|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет,
		|	ХозрасчетныйОбороты.Субконто2.Наименование КАК Субконто2
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала,
		|		&ДатаОкончания,
		|		Авто,
		|		Счет В (
		|			ВЫБРАТЬ
		|				ВТСчета.Счет КАК Счет
		|			ИЗ
		|				ВТСчета КАК ВТСчета),
		|		,
		|		Организация.ИНН = &Организация,
		|		КорСчет В (Выбрать * ИЗ ВТКорСчета),
		|		) КАК ХозрасчетныйОбороты
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.КорСчет,
		|	ХозрасчетныйОбороты.Субконто2
		|";

	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Таблица3 = Ответ.Результат;
			Для Каждого стр Из Таблица3 Цикл
				Если стр.КорСчет = "57.03" И стр.СуммаОборотДт <> 0 Тогда
					СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
					+"Выписка"+Разделитель+"51"+Разделитель+"57.3"+Разделитель+СокрЛП(стр.СуммаОборотДт)+Разделитель+стр.Субконто2+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);	
				ИначеЕсли стр.КорСчет = "57.03" И стр.СуммаОборотКт <> 0 Тогда
					СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
					+"Выписка"+Разделитель+"57.3"+Разделитель+"51"+Разделитель+СокрЛП(стр.СуммаОборотКт)+Разделитель+стр.Субконто2+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;		
		
КонецФункции

Функция Зарплата(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "70");  // РасчетыСПерсоналомПоОплатеТруда
	Запрос.Параметры.Вставить("СписокКорСчетов", "51");
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаНалога,
		|	ХозрасчетныйОбороты.Счет.Наименование КАК ВидНалога
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Наименование";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ТаблицаЗП = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаЗП Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла; 
			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			+"Выписка"+Разделитель+"70"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаЗП.Итог("СуммаНалога"))+Разделитель+"расчеты с персоналом"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;	
	
КонецФункции

Функция ИсполнительныеЛисты(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "76.41");  // РасчетыПоИсполнительнымДокументамРаботников
	Запрос.Параметры.Вставить("СписокКорСчетов", "51");
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаНалога,
		|	ХозрасчетныйОбороты.Счет.Наименование КАК ВидНалога
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Наименование";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ТаблицаИЛ = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаИЛ Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла; 
			//СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//+"Выписка"+Разделитель+"70"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаЗП.Итог("СуммаНалога"))+Разделитель+"расчеты с персоналом";
			//ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;	
	
КонецФункции

Функция ТаблицаПоступлений(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет,ГруппаОрганизаций)
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);	
	
	///////////////////////////////////////////ТАБЛИЦА ПОСТУПЛЕНИЙ ШАПКА///////////////////////////////////////////////////
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПоступлений");
	//ТабличныйДокумент.Вывести(ОбластьМакета);
	// Дно
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("ВыбСчет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&ВыбСчет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт), 0) КАК СуммаНачало,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт), 0) КАК СуммаКонец,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт), 0) КАК СуммаПриход,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт), 0) КАК СуммаРасход
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты";	

	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	ТаблицаОстатков = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
		//	ОбластьМакета = Макет.ПолучитьОбласть("ДноПоступлений");
			Для Каждого Стр Из ТаблицаОстатков Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
			КонецЦикла; 			
		КонецЕсли;
	КонецЕсли;	
	ТабличныйДокумент.Вывести(ОбластьМакета);		

	///////////////////////////////////////////ТАБЛИЦА ПОСТУПЛЕНИЙ СТРОКИ///////////////////////////////////////////////////
			
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;		
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорСубконто,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаПрихода,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК СтатьяДС
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			НЕ КорСубконто1 В
		|						(ВЫБРАТЬ
		|							ВтОфис.Контрагент
		|						ИЗ
		|							ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСчет,
		|	ХозрасчетныйОбороты.КорСубконто1,
		|	ХозрасчетныйОбороты.Субконто1
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ИтСумПоступлений=0;
	ТаблицаПоступлений = Ответ.Результат;
	ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПоступлений");	
			Для Каждого Стр Из ТаблицаПоступлений Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				ИтСумПоступлений=ИтСумПоступлений+Стр.СуммаПрихода;
			КонецЦикла; 
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоступ");
			ОбластьМакета.Параметры.СуммаПрихода=ТаблицаПоступлений.Итог("СуммаПрихода");
			ТабличныйДокумент.Вывести(ОбластьМакета);			
		КонецЕсли;
	КонецЕсли;
	ТабличныйДокумент.ЗакончитьАвтоГруппировкуСтрок(); 
	КоличествоУровней = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок();
	Для Уровень = 1 По КоличествоУровней - 1 Цикл
		ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(КоличествоУровней - Уровень);
	КонецЦикла;
	
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);
	
	
	// ПокупателиДополнительныеРеквизиты
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "62");  // РасчетыСПокупателямиИЗаказчиками
	Запрос.Параметры.Вставить("КорСчет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;		
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(КонтрагентыДополнительныеРеквизиты.Значение) КАК ТипКлиента,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0) КАК СуммаПрихода
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ВтОфис.Контрагент
		|					ИЗ
		|						ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО ХозрасчетныйОбороты.Субконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
		|ИТОГИ
		|	СУММА(СуммаПрихода)
		|ПО
		|	ТипКлиента";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	ИтСуммаДоп=0;
	ТаблицаПокупателей = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Для Каждого Стр Из ТаблицаПокупателей Цикл
				Если Не ЗначениеЗаполнено(Стр.Контрагент) Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогиПоДопРекизитамПокупателей");					
					ОбластьМакета.Параметры.ТипКлиента=Стр.ТипКлиента;
					ИтСуммаДоп=ИтСуммаДоп+Стр.СуммаПрихода;
				Иначе
					ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПокупателей");
					ОбластьМакета.Параметры.ТипКлиента=Стр.Контрагент;										
				КонецЕсли; 								
				
				ОбластьМакета.Параметры.СуммаПрихода=Стр.СуммаПрихода;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоступлений");
			ОбластьМакета.Параметры.СуммаПрихода=ИтСумПоступлений+ИтСуммаДоп;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
	КонецЕсли;	
	
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);

	
	//// Дно
	//Запрос = мммСервер.ЗапросПрокси();
	//Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	//Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	//Запрос.Параметры.Вставить("Организация",   Организация.Наименование);
	//Запрос.Параметры.Вставить("ВыбСчет", "51");  // РасчетныеСчета
	//Запрос.ТекстЗапроса = "
	//	|ВЫБРАТЬ
	//	|	Хозрасчетный.Ссылка КАК Счет
	//	|ПОМЕСТИТЬ ВТСчета
	//	|ИЗ
	//	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//	|ГДЕ
	//	|	(Хозрасчетный.Код В (&ВыбСчет)
	//	|			ИЛИ Хозрасчетный.Родитель.Код В (&ВыбСчет)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&ВыбСчет)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&ВыбСчет))
	//	|;		
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////			
	//	|ВЫБРАТЬ
	//	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт), 0) КАК СуммаНачало,
	//	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт), 0) КАК СуммаКонец,
	//	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт), 0) КАК СуммаПриход,
	//	|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт), 0) КАК СуммаРасход
	//	|ИЗ
	//	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.Наименование = &Организация) КАК ХозрасчетныйОстаткиИОбороты";	

	//
	//Ответ = мммСервер.ДеСериализовать(
	//	Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	//);
	//
	//ТаблицаОстатков = Ответ.Результат;

	//Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда
	//		ОбластьМакета = Макет.ПолучитьОбласть("ДноПоступлений");
	//		Для Каждого Стр Из ТаблицаОстатков Цикл
	//			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
	//		КонецЦикла; 			
	//	КонецЕсли;
	//КонецЕсли;	
	//ТабличныйДокумент.Вывести(ОбластьМакета);	
	
	Возврат Ответ.Результат;		
	
КонецФункции

Функция ПрочиеВыплаты(Прокси, ПараметрыОтчета, Организация, ПотокВыгрузки, Разделитель, ТабличныйДокумент, Макет, ГруппаОрганизаций)
	
	//Запрос = мммСервер.ЗапросПрокси();
	//Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	//Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	//Запрос.Параметры.Вставить("Организация",   Организация.Наименование);
	//Запрос.Параметры.Вставить("Счет", "51");  
	//Запрос.Параметры.Вставить("СписокКорСчетов", "60");
	//Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Поставщики БАЙКАЛ");
	//Запрос.ТекстЗапроса = "ВЫБРАТЬ
	//	|	Контрагенты.Ссылка КАК Ссылка
	//	|ПОМЕСТИТЬ ВТКонтрагенты
	//	|ИЗ
	//	|	Справочник.Контрагенты КАК Контрагенты
	//	|ГДЕ
	//	|	(Контрагенты.Наименование = &ГруппаКонтрагентов
	//	|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
	//	|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
	//	|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
	//	|;
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	Хозрасчетный.Ссылка КАК Счет
	//	|ПОМЕСТИТЬ ВТСчета
	//	|ИЗ
	//	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//	|ГДЕ
	//	|	(Хозрасчетный.Код В (&Счет)
	//	|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
	//	|;		
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////	
	//	|ВЫБРАТЬ
	//	|	Хозрасчетный.Ссылка КАК Счет
	//	|ПОМЕСТИТЬ ВТКорСчета
	//	|ИЗ
	//	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//	|ГДЕ
	//	|	(Хозрасчетный.Код В (&СписокКорСчетов)
	//	|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
	//	|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
	//	|;		
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////		
	//	|ВЫБРАТЬ
	//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаПриход,
	//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаРасход
	//	|ИЗ
	//	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.Наименование = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
	//	|ГДЕ
	//	|	ХозрасчетныйОбороты.КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты)";	
	//
	//Ответ = мммСервер.ДеСериализовать(
	//	Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	//);
	//ТаблицаТоваров = Ответ.Результат;
	//Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда
	//		Если СокрЛП(Организация.ИНН)= "7807236582" Тогда  //посейдон
	//			СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
	//			+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие выплаты Бйкл"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
	//			
	//			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
	//			// делаем реверс с посейдона на байкал
	//			СтрЗаписи="7807244512"+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ "ООО БАЙКАЛ" +Разделитель
	//			+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие поступления Псйдн"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
	//			
	//			ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
	//		КонецЕсли;	
	//	КонецЕсли;
	//	Если СокрЛП(Организация.ИНН)= "7807244431" Тогда  //ярис
	//		СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
	//		+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие выплаты Бйкл"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
	//		
	//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
	//		// делаем реверс с ярис на байкал 
	//		СтрЗаписи="7807244512"+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ "ООО БАЙКАЛ" +Разделитель
	//		+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие поступления Ярс"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
	//		
	//		ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
	//		
	//	КонецЕсли;		
	//КонецЕсли;
	
	ТаблицаСвоихФирм = ПолучитьТаблицуСвоихФирм(Организация);	
	//
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51"); 
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить("60");
	МассивКорСчетов.Добавить("62");
	Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);
	Запрос.Параметры.Вставить("Контрагенты", ТаблицаСвоихФирм.ВыгрузитьКолонку("ИНН"));
	//Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Поставщики БАЙКАЛ");
	Запрос.ТекстЗапроса = "
		//|ВЫБРАТЬ
		//|	Контрагенты.Ссылка КАК Ссылка
		//|ПОМЕСТИТЬ ВТКонтрагенты
		//|ИЗ
		//|	Справочник.Контрагенты КАК Контрагенты
		//|ГДЕ
		//|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		//|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		//|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		//|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		//|;
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН В (&Контрагенты)
		|;		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаПриход,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаРасход,
		|	ХозрасчетныйОбороты.Счет.Код КАК Счет,
		|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Наименование КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).ИНН КАК КонтрагентИНН 
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.КорСубконто1 В (ВЫБРАТЬ * ИЗ ВТКонтрагенты)
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Код,
		|	ХозрасчетныйОбороты.КорСчет.Код,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).Наименование,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто1 КАК Справочник.Контрагенты).ИНН		
		|";	
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ТаблицаТоваров = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			//Если СокрЛП(Организация.ИНН)= "7807236582" Тогда  //посейдон
			//	СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//	+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие выплаты Бйкл"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//	
			//	ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//	// делаем реверс с посейдона на байкал
			//	СтрЗаписи="7807244512"+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ "ООО БАЙКАЛ" +Разделитель
			//	+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие поступления Псйдн"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//	
			//	ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);				
			//КонецЕсли;	
			//Если СокрЛП(Организация.ИНН)= "7807244431" Тогда  //ярис
			//	СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//	+"Выписка"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие выплаты Бйкл"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//	
			//	ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//	// делаем реверс с ярис на байкал 
			//	СтрЗаписи="7807244512"+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ "ООО БАЙКАЛ" +Разделитель
			//	+"Выписка"+Разделитель+"51"+Разделитель+"60"+Разделитель+СокрЛП(ТаблицаТоваров.Итог("СуммаРасход"))+Разделитель+"Прочие поступления Ярс"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//	
			//	ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			//КонецЕсли;
			
			// убираем корр счет чтоб не дробило. Один хер переброска на 51 
			Ответ.Результат.Свернуть("Контрагент, КонтрагентИНН, Счет", "СуммаПриход, СуммаРасход");
			
			Для Каждого Запись Из Ответ.Результат Цикл
				// Расход
				Если Запись.СуммаРасход <> 0 Тогда
					СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) + Разделитель
					+ "Выписка" + Разделитель + "60/62" + Разделитель + Запись.Счет + Разделитель + СокрЛП(Запись.СуммаРасход) + Разделитель 
					+ "Прочие выплаты " + ТаблицаСвоихФирм.НайтиСтроки(Новый Структура("ИНН", Запись.КонтрагентИНН))[0].ГруппаКонтрагент
					+ ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+ СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				КонецЕсли;
				
				// Приход - никакого реверса. Должно быть основано на документах и проводках
				Если Запись.СуммаПриход <> 0 Тогда
					СтрЗаписи = СокрЛП(Организация.ИНН) + Разделитель + СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy")) + Разделитель + СокрЛП(Организация) + Разделитель
					+ "Выписка" + Разделитель + Запись.Счет + Разделитель + "60/62" + Разделитель + СокрЛП(Запись.СуммаПриход) + Разделитель 
					+ "Прочие поступления " + ТаблицаСвоихФирм.НайтиСтроки(Новый Структура("ИНН", Запись.КонтрагентИНН))[0].ГруппаКонтрагент
					+ ?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+ СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
					
					ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
				КонецЕсли;				
			КонецЦикла;	
			
		КонецЕсли;		
	КонецЕсли;

	
	Возврат Ответ.Результат;	
	
КонецФункции	

Функция ПолучитьТаблицуСвоихФирм(Организация)
	
	// инн своих фирм
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.ИНН КАК ИНН,
	               |	СвязьОрганизаций8ИСчетов7.Счет7 КАК ГруппаКонтрагент
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязьОрганизаций8ИСчетов7 КАК СвязьОрганизаций8ИСчетов7
	               |		ПО Организации.Ссылка = СвязьОрганизаций8ИСчетов7.Организация8
	               |ГДЕ
	               |	Организации.ИНН <> &ИНН
	               |	И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""П20""
	               |			И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""П19""
	               |			И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""Перс""";
	Запрос.УстановитьПараметр("ИНН", Организация.ИНН);
	ТаблицаСвоихФирм = Запрос.Выполнить().Выгрузить();
	ТаблицаСвоихФирм.Индексы.Добавить("ИНН");
	
	Возврат ТаблицаСвоихФирм;
	
КонецФункции	
#КонецОбласти





