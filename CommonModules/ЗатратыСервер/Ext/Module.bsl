#Область ПрограммныйИнтерфейс

Процедура СформироватьЭтотОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	Разделитель=";";
	Кодировка = "windows-1251"; // КодировкаТекста.ANSI;
	Данные = Новый Соответствие;
	Прогон = 1;
	МассивОрганизацийСОшибками = Новый Массив;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = Обработки.МММСервис.ПолучитьМакет("МакетЗатраты");
	ЗаданиеФоновогоОбновления = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	РасположениеФирмСрезПоследних.Сервер КАК Сервер,
	|	РасположениеФирмСрезПоследних.ИмяБазы КАК База,
	|	РасположениеФирмСрезПоследних.Логин КАК Логин,
	|	РасположениеФирмСрезПоследних.Пароль КАК Пароль,
	|	ЕСТЬNULL(СвязьОрганизаций8ИСчетов7.Счет7.Наименование, """") КАК Сч7
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасположениеФирм.СрезПоследних КАК РасположениеФирмСрезПоследних
	|		ПО Организации.Ссылка = РасположениеФирмСрезПоследних.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязьОрганизаций8ИСчетов7 КАК СвязьОрганизаций8ИСчетов7
	|		ПО Организации.Ссылка = СвязьОрганизаций8ИСчетов7.Организация8
	|ГДЕ
	|	Организации.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(ПараметрыОтчета.Организация) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Организации.Ссылка В (&Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", ПараметрыОтчета.Организация);
	КонецЕсли;		
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
		ДлительныеОперации.СообщитьПрогресс(Окр(100*Прогон/ВыборкаДетальныеЗаписи.Количество()), СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.НаименованиеСокращенное),);
		
		Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Сервер)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.База)
			ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Логин) Тогда
			Продолжить;
		КонецЕсли;	
		
		Актуальность = РегистрыСведений.АктуальностьОрганизаций.ПолучитьПоследнее(ПараметрыОтчета.КонецПериода, Новый Структура("Организация", ВыборкаДетальныеЗаписи.Ссылка));
		Если НЕ Актуальность.Активна Тогда 
			Продолжить;
		КонецЕсли;	
		
		Группа = РегистрыСведений.СвязьОрганизаций8ИСчетов7.СрезПоследних(ПараметрыОтчета.КонецПериода, Новый Структура("Организация8", ВыборкаДетальныеЗаписи.Ссылка));

		Попытка
			СоединениеУстановлено = Ложь;
			Для сч = 1 По 3 Цикл
				Попытка
					Прокси = мммСервер.ПолучитьПрокси(ВыборкаДетальныеЗаписи.Сервер, 
						ВыборкаДетальныеЗаписи.База,
						ВыборкаДетальныеЗаписи.Логин,
						ВыборкаДетальныеЗаписи.Пароль
					);
					СоединениеУстановлено = Истина;
					Прервать;
				Исключение
					ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка, ,,ОписаниеОшибки());
				КонецПопытки;		
			КонецЦикла;
			Если НЕ СоединениеУстановлено Тогда
				Продолжить;
			КонецЕсли;	
			
			ОчиститьОчередь(НачалоМесяца(ПараметрыОтчета.НачалоПериода), ВыборкаДетальныеЗаписи.Ссылка, ПараметрыОтчета);
			
			СформироватьТабличноеПредставление(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ТабличныйДокумент, Макет, Группа);
			
			Если НЕ СформироватьПоток(Прокси, ПараметрыОтчета, ВыборкаДетальныеЗаписи.Ссылка, ?(Группа.Количество() > 0, СокрЛП(Группа[0].Счет7), "")) Тогда
				МассивОрганизацийСОшибками.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
				Прогон = Прогон + 1;
				Продолжить;
			КонецЕсли;
					
		Исключение
			МассивОрганизацийСОшибками.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
		КонецПопытки;
		Прогон = Прогон + 1;	
		
	КонецЦикла;
	
	ПарамФайлов=Новый Структура("ТаблДокумент,МассивОрганизацийСОшибками,Данные",
		ТабличныйДокумент, МассивОрганизацийСОшибками, Неопределено
	);
	
	ПоместитьВоВременноеХранилище(ПарамФайлов, АдресХранилища);	
	
КонецПроцедуры

Функция ПолучитьТаблицуСвоихФирм(Организация) Экспорт
	
	// инн своих фирм
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.ИНН КАК ИНН,
	               |	СвязьОрганизаций8ИСчетов7.Счет7 КАК ГруппаКонтрагент
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязьОрганизаций8ИСчетов7 КАК СвязьОрганизаций8ИСчетов7
	               |		ПО Организации.Ссылка = СвязьОрганизаций8ИСчетов7.Организация8
	               |ГДЕ
	               |	Организации.ИНН <> &ИНН
				   //|	И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""П20""
				   //|			И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""П19""
				   //|			И СвязьОрганизаций8ИСчетов7.Счет7.Наименование <> ""Перс""
				   |";
	Запрос.УстановитьПараметр("ИНН", Организация.ИНН);
	ТаблицаСвоихФирм = Запрос.Выполнить().Выгрузить();
	ТаблицаСвоихФирм.Индексы.Добавить("ИНН");
	
	Возврат ТаблицаСвоихФирм;
	
КонецФункции

Функция ПолучитьЗаписьПоКлючу(КлючЗаписи) Экспорт
	
	Запись = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючЗаписи);
	Запись.Прочитать();
	
	Возврат ЗатратыКлиентСервер.СтруктураДанных(Запись);
	
КонецФункции	

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьМакетНаСервере(ТабДок, Период) Экспорт
	
	Макет = Обработки.МММСервис.ПолучитьМакет("ЛогВыгрузкиЗатрат");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Период = Формат(Период, "ДФ='MMMM yyyy'");
	ТабДок.Вывести(ОбластьШапка);
	
	Возврат Макет;
	
КонецФункции	

// Процедура - Вывести
//
// Параметры:
//  ТабДок		 - ТабличныйДокумент - 
//  Макет		 - ТабличныйДокумент - Макет табдока 
//  ИмяОбласти	 - Строка - 
//  Значение	 - Структура - 
//
Процедура Вывести(ТабДок, Макет, ИмяОбласти, Значение) Экспорт
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	
	Для Каждого Эл Из Значение Цикл
		
		Область.Параметры[Эл.Ключ] = Эл.Значение;
		
	КонецЦикла;		
	
	ТабДок.Вывести(Область);	
	
КонецПроцедуры	

Функция СформироватьТабличноеПредставление(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет, Группа) Экспорт
	
	/////////////////////////////////////////////////////////
	// Выведем шапку
	
	СведенияОПокупателе = Организация.НаименованиеПолное;
	СведенияОПокупателе = СведенияОПокупателе + ", ("+ ?(Группа.Количество() > 0, СокрЛП(Группа[0].Счет7), "")+")";
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ВысотаЗаголовка = ОбластьМакета.ВысотаТаблицы;
	ОбластьМакета.Параметры.ОрганизацияПредставление = СведенияОПокупателе + " " +
		мммКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	ОбластьМакета.Параметры.ТекДата = ТекущаяДатаСеанса();
	ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(1 + ВысотаЗаголовка, , 2 + ВысотаЗаголовка);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	/////////////////////////////////////////////////////////
	// Формирование данных
	ИтСуммаДоп = 0;
	
	ТаблицаЗП = Зарплата(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);
	ТаблицаИЛ = ИсполнительныеЛисты(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);
		
	ТаблицаНалогов = Налоги(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);			
	ТаблицаМатериалов = Материалы(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет, Группа);		
	ТаблицаУслуг = Услуги(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);
	КонтрагентыДополнительныеРеквизиты(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет, ИтСуммаДоп);
	
	/////////////////////////////////////////////////////////
	// Итого строка 

	ОбластьМакетаИтого = Макет.ПолучитьОбласть("ИтогоСтрока");
	ОбластьМакетаИтого.Параметры.ИтогоУслуги = ТаблицаУслуг.Итог("СуммаУслуг");
	ОбластьМакетаИтого.Параметры.ИтогоНалоги = ТаблицаНалогов.Итог("СуммаНалога") + ?(мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыЗП(Организация), ТаблицаИЛ.Итог("СуммаНалога") + ТаблицаЗП.Итог("СуммаНалога"), 0);
	ОбластьМакетаИтого.Параметры.ИтСуммаПоступлений = ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов");
	ОбластьМакетаИтого.Параметры.ИтСуммаОплат = ТаблицаМатериалов.Итог("СуммаОплатМатериалов");
	
	ОбластьМакетаИтого.Параметры.ИтСуммаИтого = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаУслуг.Итог("СуммаУслуг") + ТаблицаМатериалов.Итог("СуммаОплатМатериалов");
	
	ТабличныйДокумент.Вывести(ОбластьМакетаИтого);
	
	ОбластьМакетаВсего = Макет.ПолучитьОбласть("Всего");
	ОбластьМакетаВсего.Параметры.ИтСуммаВсего = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов")+ТаблицаУслуг.Итог("СуммаУслуг");
	ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
	ОбластьМакетаВсего = Макет.ПолучитьОбласть("ВсегоПоВсем");
	ОбластьМакетаВсего.Параметры.ИтСуммаВсегоПоВсем = ТаблицаНалогов.Итог("СуммаНалога") + ТаблицаМатериалов.Итог("СуммаОплатМатериалов") + ТаблицаУслуг.Итог("СуммаУслуг")
		+ ИтСуммаДоп;
	ТабличныйДокумент.Вывести(ОбластьМакетаВсего);
	
	/////////////////////////////////////////////////////////
	ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
	
	Проверка(
		Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация);
	ВетСправка(
		Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация);		
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок(); 		
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);
			
	ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
	НеВошедшиеКонтрагентыПоУслугам(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);		
	ТабличныйДокумент.ЗакончитьАвтоГруппировкуСтрок(); 
	
	КоличествоУровней = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок();
	Для Уровень = 1 По КоличествоУровней Цикл
		ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(КоличествоУровней - Уровень);
	КонецЦикла;	
			
	Запрос57(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);
	ТаблицаПоступлений(
		Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет);						
	
КонецФункции	

Функция СформироватьПоток(Прокси, ПараметрыОтчета, Организация, Группа) Экспорт
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("КонецПериода", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	СвоиФирмы = ПолучитьТаблицуСвоихФирм(Организация);
	Запрос.Параметры.Вставить("СвоиФирмы", СвоиФирмы.ВыгрузитьКолонку("ИНН"));
	Запрос.ТекстЗапроса = ТекстЗапроса();
	
	ЗапросСериализованный = мммСервер.Сериализовать(Запрос);
	Попытка
		РезультатЗапроса = Прокси.RunQuery(ЗапросСериализованный);
	Исключение
		ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка,,,"Ошибка выполнения запроса при формировании потока по организации " + Организация + Символы.ПС + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	Ответ = мммСервер.ДеСериализовать(РезультатЗапроса);
	Таб = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбработкаРезультатаВПоток(Таб, ПараметрыОтчета, Организация, Группа);
		КонецЕсли;
	Иначе
		ЗаписьЖурналаРегистрации("Отчет затраты", УровеньЖурналаРегистрации.Ошибка,,,"Ошибка выполнения запроса при формировании потока по организации " + Организация + Символы.ПС + Ответ.Ошибка);
		Возврат Ложь;
	КонецЕсли;
	
	ПоступлениеТоваров(
		Прокси, ПараметрыОтчета, Организация, Группа);
	
	Возврат Истина;
	
КонецФункции

Процедура УстановитьСтатус(Запись, Статус, ОписаниеОшибки = "", Комментарий = "", ДопПараметры = Неопределено) Экспорт
	
	Набор = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(Запись.Период);
	Набор.Отбор.Организация.Установить(Запись.Организация);
	Набор.Отбор.Документ.Установить(Запись.Документ);
	Набор.Отбор.Счет.Установить(Запись.Счет);
	Набор.Отбор.КорСчет.Установить(Запись.КорСчет);
	Набор.Отбор.Группа.Установить(Запись.Группа);
	Набор.Отбор.ВидОперации.Установить(Запись.ВидОперации);
	Набор.Отбор.ИНН.Установить(Запись.ИНН);
	Набор.Прочитать();
	Для Каждого ЗаписьРегистра Из Набор Цикл
		Если (Запись.СуммаОперации < 0 И ЗаписьРегистра.СуммаОперации < 0) 
			ИЛИ (Запись.СуммаОперации > 0 И ЗаписьРегистра.СуммаОперации > 0) Тогда
			
			ЗаписьРегистра.Статус = Статус;
			Если Статус = ЗатратыКлиентСервер.СтатусОтправки_Ошибка() Тогда
				ЗаписьРегистра.ОшибкаВыгрузки = ОписаниеОшибки;
			Иначе
				ЗаписьРегистра.ОшибкаВыгрузки = ?(ДопПараметры = Неопределено, "", ДопПараметры.ОписаниеОшибки);	
			КонецЕсли;	
			Если НЕ ПустаяСтрока(Комментарий) Тогда
				ЗаписьРегистра.Комментарий = ?(ПустаяСтрока(ЗаписьРегистра.Комментарий), Комментарий, ЗаписьРегистра.Комментарий + Символы.ПС + ЗаписьРегистра.Комментарий);
			КонецЕсли;	
			
		КонецЕсли;
	КонецЦикла;	
	Набор.ДополнительныеСвойства.Вставить("НеВыполнятьКонтрольУдаляемых", Истина);
	Набор.Записать();
	
КонецПроцедуры	

//////////////////////////////////////////
// проверка строки выписки
Функция ВыпискаПроверитьСтроку(Данные, ДокВыписка, ДопПараметр, ДелатьЗеркальнуюОперацию = Ложь) Экспорт
	Если НЕ ЗначениеЗаполнено(Данные.ВидОперации) Тогда
		Данные.Статус = ЗатратыКлиентСервер.СтатусОтправки_Ошибка();
		Возврат Ложь;
	КонецЕсли;	
	Содержание = СокрЛП(Данные.ВидОперации.Аналитика);
	Сумма = Данные.СуммаОперации;
	КорСчет = Данные.ВидОперации.КорСчет;
	КонтрагентИНН = Данные.ВидОперации.КонтрагентИНН;
	ТипКлиента = Данные.ВидОперации.ТипКлиента;
	Группа = Данные.Группа;
	СвояФирма = Данные.ВидОперации.СвояФирма;
	РЕКЛАМА = Данные.ВидОперации.РЕКЛАМА;
	ПОСТАВЩИКИ = Данные.ВидОперации.ПОСТАВЩИКИ;	
	ОПТ = Данные.ВидОперации.ОПТ;
	МАТЕРИАЛЫ = Данные.ВидОперации.МАТЕРИАЛЫ;
	МАЛЬЧИКИ = Данные.ВидОперации.МАЛЬЧИКИ;
	ЗАТРАТЫ = Данные.ВидОперации.ЗАТРАТЫ;
	АРЕНДА = Данные.ВидОперации.АРЕНДА;	
	
	ГруппаКонтраегнта = "";
	Если СвояФирма Тогда
		рсСвязь = РегистрыСведений.СвязьОрганизаций8ИСчетов7.ПолучитьПоследнее(Данные.Период, 
			Новый Структура("Организация8", Справочники.Организации.НайтиПоРеквизиту("ИНН", КонтрагентИНН))
		);
		ГруппаКонтраегнта = СокрЛП(рсСвязь.Счет7.Наименование);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Данные.ВидОперации.КудаВыгружать) Тогда 
		Возврат ПроверитьКудаВыгружатьВыписку(Данные.ВидОперации.КудаВыгружать, ДокВыписка);
	КонецЕсли;	
	
	////////////////////////////////////////////////
	// 60	
	Если СтрНайти(Содержание, "Возврат от поставщик") > 0 
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И ПОСТАВЩИКИ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА
		И Сумма > 0
		И (ДокВыписка.ВидДвижения = "Возврат от поставщика" ИЛИ ДокВыписка.ВидДвижения = "Прочие поступления")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "Поставщики товара " + Группа 
		И Истина Тогда
		Возврат Истина;
		
	ИначеЕсли СтрНайти(Содержание, "Оплата поставщикам") > 0 
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И МАТЕРИАЛЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
		И Сумма < 0
		И ДокВыписка.ВидДвижения = "Оплата поставщику"
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "Материалы"
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0 ИЛИ СтрНайти(Содержание, "СБП") > 0 ИЛИ ПустаяСтрока(Содержание)) 
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА 
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты") 
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр" Тогда
		Возврат Истина;		
		
	ИначеЕсли (СтрНайти(Содержание, "Возврат от поставщик") > 0) 
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА 
		И Сумма > 0
		И (ДокВыписка.ВидДвижения = "Возврат от поставщика" ИЛИ ДокВыписка.ВидДвижения = "Прочие поступления") 
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр"
		И Истина Тогда
		Возврат Истина;			
		
	ИначеЕсли СтрНайти(Содержание, "Оплата поставщикам") > 0 
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И ПОСТАВЩИКИ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "Поставщики товара " + Группа 
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0)
		И КорСчет = "60"
		И (ТипКлиента = "Офис" ИЛИ АРЕНДА)
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ОН" И ДокВыписка.Субконто2 = "оф"
		И Истина Тогда
		Возврат Истина;			
		
	ИначеЕсли Истина//(СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Возврат от поставщиков") > 0) 
		И КорСчет = "60"
		И (ТипКлиента = "Фирмы универсама" ИЛИ ПустаяСтрока(ТипКлиента))
		И СвояФирма
	//	И НЕ ПОСТАВЩИКИ И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
	//	И ДокВыписка.ВидДвижения = ?(Сумма < 0, "Прочие выплаты", "Прочие поступления")
		И ДокВыписка.КоррСчет = "51"
		И СтрНайти(ДокВыписка.Субконто1, ГруппаКонтраегнта) > 0
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Внутреннее перемещение денежных средств") > 0 )
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ЗАТРАТЫ
		И ДокВыписка.ВидДвижения = ?(Сумма < 0, "Прочие выплаты", "Прочие поступления")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "" И ДокВыписка.Субконто2 = ""
		И Истина Тогда
		Возврат Истина;	
		
		
		// не распределенные
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0 ИЛИ ПустаяСтрока(Содержание))
		И КорСчет = "60"
		И ПустаяСтрока(ТипКлиента)
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ЗАТРАТЫ
		И ДокВыписка.ВидДвижения = ?(Сумма < 0, "Прочие выплаты", "Прочие поступления")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "" И ДокВыписка.Субконто2 = ""
		И Истина Тогда
		Возврат Истина;	
		
	////////////////////////////////////////////////
	// 91
		
	ИначеЕсли (СтрНайти(Содержание, "Прочие поступления") > 0 ИЛИ ПустаяСтрока(Содержание))
		И КорСчет = "91"
		И ПустаяСтрока(ТипКлиента)
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
	//	И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Прочие поступления" ИЛИ ?(Сумма < 0, ДокВыписка.ВидДвижения = "Прочие выплаты", ИСТИНА))
		И ДокВыписка.КоррСчет = "91.1"
		И ДокВыписка.Субконто1 = "ВНД" 
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли СтрНайти(Содержание, "Расходы на услуги банков") > 0
		И КорСчет = "91"
		И ПустаяСтрока(ТипКлиента)
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
	//	И Сумма < 0
		И (ДокВыписка.ВидДвижения =  ?(Сумма < 0, "Прочие выплаты", "Прочие поступления") ИЛИ ДокВыписка.ВидДвижения =  ?(Сумма < 0, "Оплата поставщику", "Прочие поступления"))
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр"
		И Истина Тогда
		Возврат Истина;		
		
	//ИначеЕсли СтрНайти(Содержание, "Прочие поступления") > 0 
	//	И КорСчет = "91"
	//	И ПустаяСтрока(ТипКлиента)
	//	И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
	//	И Сумма > 0
	//	И ДокВыписка.ВидДвижения = "Прочие поступления"
	//	И ДокВыписка.КоррСчет = "91.1"
	//	И ДокВыписка.Субконто1 = "ВНД"
	//	И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ДокВыписка.НазначениеПлатежа, Данные.ИНН) > 0, Истина) Тогда
	//	Возврат Истина;				
		
	////////////////////////////////////////////////
	// 62		
		
	ИначеЕсли //СтрНайти(Содержание, "Оплата поставщикам") > 0 
		КорСчет = "62"
		И (АРЕНДА ИЛИ ТипКлиента = "Офис")
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ РЕКЛАМА
		И Сумма > 0
		И (ДокВыписка.ВидДвижения = "Прочие поступления" ИЛИ ДокВыписка.ВидДвижения = "Поступления от покупателей")
		И ДокВыписка.КоррСчет = "62.1"
		И ДокВыписка.Субконто1 = "ОН" И ДокВыписка.Субконто2 = "оф"
		И Истина Тогда
		Возврат Истина;		
		
	ИначеЕсли СтрНайти(Содержание, "Оплата от покупателей") > 0 
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И МАЛЬЧИКИ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ЗАТРАТЫ И НЕ РЕКЛАМА
		И Сумма > 0
		И ДокВыписка.ВидДвижения = "Поступления от покупателей"
		И ДокВыписка.КоррСчет = "62.1"
		И ДокВыписка.Субконто1 = "Мальч Н" 
		И Истина Тогда
		Возврат Истина;		
					
	ИначеЕсли СтрНайти(Содержание, "Оплата от покупателей") > 0 
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И ОПТ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ЗАТРАТЫ И НЕ РЕКЛАМА
		И Сумма > 0
		И ДокВыписка.ВидДвижения = "Поступления от покупателей"
		И ДокВыписка.КоррСчет = "62.1"
		И ДокВыписка.Субконто1 = "Опт" 
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "СБП") > 0 ИЛИ СтрНайти(Содержание, "ЭКВАЙРИНГ") > 0) 
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ
		И Сумма > 0
		И ДокВыписка.ВидДвижения = "Поступления от покупателей"
		И ДокВыписка.КоррСчет = "90.1.1"
		И Лев(ДокВыписка.Субконто1, СтрДлина("Выручка " + ?(СтрДлина(Группа) = 3, Группа, Лев(Группа, 3)))) = "Выручка " + ?(СтрДлина(Группа) = 3, Группа, Лев(Группа, 3)) 
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли ИСТИНА //СтрНайти(Содержание, "Оплата от покупателей") > 0 
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И (ПОСТАВЩИКИ ИЛИ ЗАТРАТЫ ИЛИ РЕКЛАМА)
		И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ
		И Сумма > 0
		И (ДокВыписка.ВидДвижения = "Поступления от покупателей" ИЛИ ДокВыписка.ВидДвижения = "Прочие поступления")
		И ДокВыписка.КоррСчет = "62.5"
		И ДокВыписка.Субконто1 = "ВНД"
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли ИСТИНА 
		И КорСчет = "62"
		И (ПустаяСтрока(ТипКлиента) ИЛИ ТипКлиента = "Фирмы универсама" ИЛИ ТипКлиента = "Офис")
		И СвояФирма
		//И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА 
		//И НЕ ПОСТАВЩИКИ И НЕ ЗАТРАТЫ
		И Сумма > 0
	//	И ДокВыписка.ВидДвижения = "Прочие поступления"
		И ДокВыписка.КоррСчет = "51"
		И СтрНайти(ДокВыписка.Субконто1, ГруппаКонтраегнта) > 0 
		И Истина Тогда
		Возврат Истина;		
		
	ИначеЕсли ИСТИНА
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА 
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты") 
		И ДокВыписка.КоррСчет = "62.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр"
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Прочие поступления") > 0 ИЛИ ПустаяСтрока(Содержание))
		И КорСчет = "62"
		И ПустаяСтрока(ТипКлиента)
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ЗАТРАТЫ
		И ДокВыписка.ВидДвижения = ?(Сумма < 0, "Прочие выплаты", "Прочие поступления")
		И ДокВыписка.КоррСчет = "62.1"
		И ДокВыписка.Субконто1 = "" И ДокВыписка.Субконто2 = ""
		И Истина Тогда
		Возврат Истина;	
				
	////////////////////////////////////////////////
	// 68, 69		
		
	ИначеЕсли ИСТИНА//(СтрНайти(Содержание, "Прочие налоги и сборы") > 0 ИЛИ СтрНайти(Содержание, "Налог на прибыль") > 0 ИЛИ СтрНайти(Содержание, "Штрафы госорганов") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0) 
		И (КорСчет = "68" ИЛИ КорСчет = "69")
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты")
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "ЗП/налоги" 
		И Истина Тогда
		Возврат Истина;		
		
	//ИначеЕсли ИСТИНА//(СтрНайти(Содержание, "Прочие налоги и сборы") > 0 ИЛИ СтрНайти(Содержание, "Налог на прибыль") > 0) 
	//	И (КорСчет = "68" ИЛИ КорСчет = "69")
	//	И ПустаяСтрока(ТипКлиента)
	//	И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
	//	И Сумма < 0
	//	И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты")
	//	И ДокВыписка.КоррСчет = "97"
	//	И ДокВыписка.Субконто1 = "Налоги"
	//	И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ДокВыписка.НазначениеПлатежа, Данные.ИНН) > 0, Истина) Тогда
	//	Возврат Истина;	
		
	ИначеЕсли ИСТИНА//(СтрНайти(Содержание, "Прочие налоги и сборы") > 0 ИЛИ СтрНайти(Содержание, "Налог на прибыль") > 0  ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0) 
		И (КорСчет = "68" ИЛИ КорСчет = "69")
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И Сумма > 0
		И ДокВыписка.ВидДвижения = "Прочие поступления"
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "ЗП/налоги"
		И Истина Тогда
		Возврат Истина;			
		
	////////////////////////////////////////////////
	// 50		
	
	// Делать операцию 
		
	ИначеЕсли (СтрНайти(Содержание, "Розничная выручка") > 0 ИЛИ СтрНайти(Содержание, "Сдача наличных в банк") > 0 ИЛИ СтрНайти(Содержание, "Внутреннее перемещение денежных средств") > 0)
		И КорСчет = "50"
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И Сумма > 0
		И ДокВыписка.ВидДвижения = "Сдача наличных в банк"
		И ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И Истина Тогда
		
		Если мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Данные.Организация) ИЛИ мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Данные.Организация) Тогда
		Иначе
		//	ДелатьЗеркальнуюОперацию = Истина;
		КонецЕсли;	
		Возврат Истина;		
		
	////////////////////////////////////////////////
	// 76		
	
	// 66,67,76 - проверять если был расход с 51 то делать 51-51, если нет то с кассы - и выдавать предупреждение Агнессе
	ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0 ИЛИ СтрНайти(Содержание, "Получение кредитов и займов") > 0)
		И (КорСчет = "76")// ИЛИ КорСчет = "67"  ИЛИ КорСчет = "66" ИЛИ КорСчет = "75")
	//	И ПустаяСтрока(ТипКлиента)
		И СвояФирма 
	//	И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ  		
		И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
			ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка"))
		И (ДокВыписка.КоррСчет = "51" ИЛИ ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(КонтрагентИНН))
		И ?(ДокВыписка.КоррСчет = "51", ДокВыписка.Субконто1 = ГруппаКонтраегнта, ИСТИНА) 		
		И Истина Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Т.СуммаОперации КАК СуммаОперации
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СУММА(ДанныеКВыгрузкеВ7.СуммаОперации) КАК СуммаОперации
		               |	ИЗ
		               |		РегистрСведений.ДанныеКВыгрузкеВ7 КАК ДанныеКВыгрузкеВ7
		               |	ГДЕ
		               |		ДанныеКВыгрузкеВ7.Период = &Период
		               |		И ДанныеКВыгрузкеВ7.ИНН = &ИНН
		               |		И ДанныеКВыгрузкеВ7.Счет = ""51""
		               |		И ДанныеКВыгрузкеВ7.ВидОперации.КонтрагентИНН = &КонтрагентИНН) КАК Т
		               |ГДЕ
		               |	НЕ Т.СуммаОперации ЕСТЬ NULL";
		Запрос.УстановитьПараметр("Период", Данные.Период);					   
		Запрос.УстановитьПараметр("ИНН", ?(ТипЗнч(КонтрагентИНН) = Тип("Структура"), КонтрагентИНН.ИНН, КонтрагентИНН));
		Запрос.УстановитьПараметр("КонтрагентИНН", Данные.ИНН);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			// с 50 счета
			Если ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(КонтрагентИНН) Тогда
				ДелатьЗеркальнуюОперацию = Истина;
				Возврат Истина;
			КонецЕсли;	
		КонецЕсли;
		
		// с 51 счета
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			Если ДокВыписка.КоррСчет = "51" И ДокВыписка.Субконто1 = ГруппаКонтраегнта Тогда
				Попытка
					РезСумма = ?(Выборка.СуммаОперации < 0, -1*(Выборка.СуммаОперации), Выборка.СуммаОперации);
				Исключение
					РезСумма = 0;
				КонецПопытки;	
				Если ?(РезСумма<0, -1*РезСумма, РезСумма) <> ?(Сумма<0, -1*Сумма, Сумма) Тогда
					
					ДопПараметр = Новый Структура("ОписаниеОшибки",
						СтрШаблон("Сумма отправленная фирмой контрагентом (%1, %2) не соответствует сумме получения %3",
							Данные.ВидОперации.Контрагент, РезСумма, Сумма
						)	
					);
					
					Возврат Ложь;
					
				КонецЕсли;
				
				Возврат Истина;				
			КонецЕсли;	
		КонецЕсли;
		
		//Возврат Истина;	
		
	ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
		И КорСчет = "76"
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма
		И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
			ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка"))
		И ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация) 
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0)
		И КорСчет = "76"
		И ПустаяСтрока(ТипКлиента)
		И МАТЕРИАЛЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА 
		И Сумма < 0
		И ДокВыписка.ВидДвижения = "Оплата поставщику"
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "Материалы"
		И Истина Тогда
		Возврат Истина;	
		
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0) 
		И КорСчет = "76"
		И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ ПОСТАВЩИКИ	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА 
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты") 
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр"
		И Истина Тогда
		Возврат Истина;		
		
	ИначеЕсли (СтрНайти(Содержание, "Оплата поставщикам") > 0 ИЛИ СтрНайти(Содержание, "Прочие расходы") > 0) 
		И КорСчет = "76"
		И (ТипКлиента = "Офис" ИЛИ АРЕНДА)
		И НЕ СвояФирма 
		И Сумма < 0
		И (ДокВыписка.ВидДвижения = "Оплата поставщику" ИЛИ ДокВыписка.ВидДвижения = "Прочие выплаты") 
		И ДокВыписка.КоррСчет = "60.1"
		И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр"
		И Истина Тогда
		Возврат Истина;			
		
	////////////////////////////////////////////////
	// 70
	
	ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
		И КорСчет = "70"
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма
		И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
			ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка")
			ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Выплата зарплаты"))
		И ДокВыписка.КоррСчет = "60.1" 
		И ДокВыписка.Субконто1 = "ЕМ" И (СтрНайти(ДокВыписка.Субконто2, "перс") > 0 ИЛИ СтрНайти(ДокВыписка.Субконто2, "зарплата") > 0)
		И Истина Тогда
		Возврат Истина;			
		
	////////////////////////////////////////////////
	// 66
	
	//ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
	//	И (КорСчет = "66")
	//	И ПустаяСтрока(ТипКлиента)
	//	И НЕ СвояФирма
	//	И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ И НЕ ЗАТРАТЫ
	//	И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
	//		ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка"))
	//	И ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
	//	И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ДокВыписка.НазначениеПлатежа, Данные.ИНН) > 0, Истина) Тогда
	//	ДелатьЗеркальнуюОперацию = Истина;
	//	Возврат Истина;	
	//	
	//////////////////////////////////////////////////
	//// 67
	//		
	//ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
	//	И КорСчет = "67"
	//	И ПустаяСтрока(ТипКлиента)
	//	И НЕ СвояФирма
	//	И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ И НЕ ЗАТРАТЫ
	//	И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
	//		ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка")
	//		)
	//	И ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
	//	И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ДокВыписка.НазначениеПлатежа, Данные.ИНН) > 0, Истина) Тогда
	//	ДелатьЗеркальнуюОперацию = Истина;
	//	Возврат Истина;	
		
	//ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
	//	И КорСчет = "67"
	//	И ПустаяСтрока(ТипКлиента)
	//	И НЕ СвояФирма
	//	И ЗАТРАТЫ
	//	И Сумма < 0
	//	И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ
	//	//И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
	//	//	ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка")
	//	//	)
	//	И ДокВыписка.Субконто1 = "ЕМ" И ДокВыписка.Субконто2 = "затр" 
	//	И ДокВыписка.КоррСчет = "60.1"
	//	И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ДокВыписка.НазначениеПлатежа, Данные.ИНН) > 0, Истина) Тогда
	//	Возврат Истина;			
		
	
	////////////////////////////////////////////////
	// 75	
	
	ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
		И (КорСчет = "75" ИЛИ КорСчет = "67" ИЛИ КорСчет = "66" ИЛИ КорСчет = "58")
		//И ПустаяСтрока(ТипКлиента)
		//И НЕ СвояФирма
	//	И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		И (ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты") 
			ИЛИ ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Сдача наличных в банк", "Получение наличных из банка"))
		И ДокВыписка.КоррСчет = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И Истина Тогда
		ДелатьЗеркальнуюОперацию = Истина;
		Возврат Истина;				
		
	//(21:57) Агнесса: Вираж уже где-то писала, наверное в спарке, не нашла. 299,01-Это 57 счет. 
	//Давайте все 57, которые идут из 1с8, относить на 57.3 в ммм7	
	ИначеЕсли ИСТИНА //(СтрНайти(Содержание, "Торговая выручка") > 0 ИЛИ СтрНайти(Содержание, "Прочие поступления") > 0)
		И СтрНайти(КорСчет,"57") > 0 
		//И ПустаяСтрока(ТипКлиента)
		//И НЕ СвояФирма
		//И НЕ МАЛЬЧИКИ И НЕ МАТЕРИАЛЫ И НЕ АРЕНДА И НЕ ОПТ И НЕ РЕКЛАМА И НЕ ПОСТАВЩИКИ  И НЕ ЗАТРАТЫ
		//И Сумма > 0
		И ДокВыписка.ВидДвижения = ?(Сумма > 0 , "Прочие поступления", "Прочие выплаты")
		И ДокВыписка.КоррСчет = "57.3"
		И Истина Тогда
		Возврат Истина;			
		
	КонецЕсли;	
		
	Возврат Ложь;
	
КонецФункции

Функция ПроверитьКудаВыгружатьВыписку(КудаВыгружать, ТекСтрока)
	
	Массив = СтрРазделить(КудаВыгружать, ",", Истина);
	ВидДвижения = СтрЗаменить(Массив[0], """", "");
	КорСч 		= СтрЗаменить(Массив[1], """", "");
	Субконто1 	= СтрЗаменить(Массив[2], """", "");
	Субконто2 	= СтрЗаменить(Массив[3], """", "");
	Содержание 	= СтрЗаменить(Массив[4], """", "");
	
	Если ?(ЗначениеЗаполнено(КорСч), ТекСтрока.КоррСчет = КорСч, Истина)
		И ?(ЗначениеЗаполнено(ВидДвижения), ТекСтрока.ВидДвижения = ВидДвижения, Истина)
		И ?(ЗначениеЗаполнено(Субконто1), ТекСтрока.Субконто1 = Субконто1, Истина)
		И ?(ЗначениеЗаполнено(Субконто2), ТекСтрока.Субконто2 = Субконто2, Истина)
		И ?(ЗначениеЗаполнено(Содержание), ТекСтрока.НазначениеПлатежа = Содержание, Истина) Тогда
		Возврат Истина;	
	КонецЕсли;
	
	Возврат Ложь;
	
	//Если СтрНайти(Содержание, "Возврат от поставщик") > 0 
	//	И КорСчет = "60"
	//	И ПустаяСтрока(ТипКлиента)
	//	И ПОСТАВЩИКИ
	//	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА
	//	И Сумма > 0
	//	И ДокВыписка.ВидДвижения = "Возврат от поставщика"
	//	И ДокВыписка.КоррСчет = "60.1"
	//	И ДокВыписка.Субконто1 = "Поставщики товара " + Группа Тогда
	//	Возврат Истина;
	//
	
КонецФункции

//////////////////////////////////////////
// проверка проводки операции
Функция ОперацияПроверитьСтроку(Данные, ТекСтрока, СуммаПоМодулю = Ложь, ДопПараметр = "") Экспорт
	
	Если НЕ ЗначениеЗаполнено(Данные.ВидОперации) Тогда
		Данные.Статус = ЗатратыКлиентСервер.СтатусОтправки_Ошибка();
		Возврат Ложь;
	КонецЕсли;	
	Содержание = СокрЛП(Данные.ВидОперации.Аналитика);
	Сумма = Данные.СуммаОперации;
	КорСчет = Данные.ВидОперации.КорСчет;
	КонтрагентИНН = Данные.ВидОперации.КонтрагентИНН;
	ТипКлиента = Данные.ВидОперации.ТипКлиента;
	Группа = Данные.Группа;
	СвояФирма = Данные.ВидОперации.СвояФирма;
	РЕКЛАМА = Данные.ВидОперации.РЕКЛАМА;
	ПОСТАВЩИКИ = Данные.ВидОперации.ПОСТАВЩИКИ;	
	ОПТ = Данные.ВидОперации.ОПТ;
	МАТЕРИАЛЫ = Данные.ВидОперации.МАТЕРИАЛЫ;
	МАЛЬЧИКИ = Данные.ВидОперации.МАЛЬЧИКИ;
	ЗАТРАТЫ = Данные.ВидОперации.ЗАТРАТЫ;
	АРЕНДА = Данные.ВидОперации.АРЕНДА;	
	
	ГруппаКонтраегнта = "";
	ФирмаУниверсама = Ложь;
	Если СвояФирма Тогда
		рсСвязь = РегистрыСведений.СвязьОрганизаций8ИСчетов7.ПолучитьПоследнее(Данные.Период, 
			Новый Структура("Организация8", Справочники.Организации.НайтиПоРеквизиту("ИНН", КонтрагентИНН))
		);
		ГруппаКонтраегнта = СокрЛП(рсСвязь.Счет7.Наименование);
		
		ФирмаУниверсама = мммОтчетЗатратыСерверПереопределяемый.ЭтоФирмыУниверсама(КонтрагентИНН) ИЛИ (ТипКлиента = "Фирмы универсама");
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Данные.ВидОперации.КудаВыгружать) Тогда 
		Возврат ПроверитьКудаВыгружатьОперацию(Данные.ВидОперации.КудаВыгружать, ТекСтрока);
	КонецЕсли;
	
	// поиск зеркальной проводки
	Если СвояФирма И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Т.СуммаОперации КАК СуммаОперации
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СУММА(ДанныеКВыгрузкеВ7.СуммаОперации) КАК СуммаОперации
		               |	ИЗ
		               |		РегистрСведений.ДанныеКВыгрузкеВ7 КАК ДанныеКВыгрузкеВ7
		               |	ГДЕ
		               |		ДанныеКВыгрузкеВ7.Период = &Период
		               |		И ДанныеКВыгрузкеВ7.ИНН = &ИНН
		               |		И ДанныеКВыгрузкеВ7.Счет = ""50""
		               |		И ДанныеКВыгрузкеВ7.ВидОперации.КонтрагентИНН = &КонтрагентИНН) КАК Т
		               |ГДЕ
		               |	НЕ Т.СуммаОперации ЕСТЬ NULL";
		Запрос.УстановитьПараметр("Период", Данные.Период);					   
		Запрос.УстановитьПараметр("ИНН", КонтрагентИНН);
		Запрос.УстановитьПараметр("КонтрагентИНН", Данные.ИНН);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ДопПараметр = Новый Структура("Возврат,Описание", Ложь, СтрШаблон("Не найдена зеркальная проводка от %1", Данные.ВидОперации.Контрагент));
			Возврат Истина;
		Иначе
			ДопПараметр = Новый Структура("Возврат,Описание", Истина, СтрШаблон("Запись будет сформирована зеркальной проводкой от %1", Данные.ВидОперации.Контрагент));
			Возврат Истина;					
		КонецЕсли;
	КонецЕсли;			
	
	Если СтрНайти(Содержание, "Внутреннее перемещение денежных средств") > 0 
		И КорСчет = "51"
		И ПустаяСтрока(ТипКлиента)
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0
		И ТекСтрока.СчДт = "51"	И ТекСтрока.СчКт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И ТекСтрока.СубконтоДт1 = Группа Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;
		
	//ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
	//	И КорСчет = "76" 
	//	И (ФирмаУниверсама ИЛИ СвояФирма)
	////	И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
	//	И Сумма > 0 	// поступление в кассу
	//	И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
	//	И ТекСтрока.СчКт = "90.1.1"
	//	И (ТекСтрока.СубконтоКт1 = "Выручка " + Лев(ГруппаКонтраегнта,3) ИЛИ ТекСтрока.СубконтоКт1 = "Выручка " + ГруппаКонтраегнта) Тогда
	//	Возврат Истина;		
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
		И КорСчет = "76"
		И (ФирмаУниверсама ИЛИ СвояФирма)
	//	И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0 	// поступление в кассу
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчКт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И ТекСтрока.СчДт = "51"
		И (ТекСтрока.СубконтоДт1 = Лев(ГруппаКонтраегнта,3) ИЛИ ТекСтрока.СубконтоДт1 = ГруппаКонтраегнта) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;		
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
		И КорСчет = "76"
		И (ФирмаУниверсама ИЛИ СвояФирма)
		И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0 	
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчКт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И ТекСтрока.СчДт = "50.1"
		И СтрНайти(Нрег(ТекСтрока.СодержаниеПроводки), Нрег(ГруппаКонтраегнта)) > 0 Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;				
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
		И КорСчет = "76"
		И (ФирмаУниверсама ИЛИ СвояФирма)
	//	И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма > 0 	// поступление в кассу
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		И ТекСтрока.СчКт = "50.1" Тогда
	//	И СтрНайти(ТекСтрока.СодержаниеПроводки, "Выдача в кассу") > 0 Тогда
		Возврат Истина;	
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
		И КорСчет = "76"
		И (ФирмаУниверсама ИЛИ СвояФирма)
	//	И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма > 0 	// поступление в кассу
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
		//И ТекСтрока.СчКт = "51"
		И ТекСтрока.СчКт = "90.1.1"
		//И (ТекСтрока.СубконтоКт1 = Лев(ГруппаКонтраегнта,3) ИЛИ ТекСтрока.СубконтоКт1 = ГруппаКонтраегнта) Тогда
		И СтрНайти(НРег(СокрЛП(ТекСтрока.СубконтоКт1)), "выручка") > 0 Тогда
		Возврат Истина;			
		
	//ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
	//	И КорСчет = "76"
	////	И ПустаяСтрока(ТипКлиента)
	//	И ФирмаУниверсама
	////	И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
	//	И Сумма > 0 	// поступление в кассу из банка
	//	И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация) И ТекСтрока.СчКт = "51"
	//	И ТекСтрока.СубконтоДт1 = "Получение наличных из банка" И  ТекСтрока.СубконтоКт1 = ГруппаКонтраегнта Тогда
	//	Возврат Истина;			
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0 
		И КорСчет = "76"
	//	И ПустаяСтрока(ТипКлиента)
		И НЕ ФирмаУниверсама И НЕ СвояФирма
	//	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма > 0
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)	И ТекСтрока.СчКт = "90.1.1"
		И ТекСтрока.СубконтоКт1 = "Выручка " + ?(СтрДлина(Группа) > 3, Лев(Группа, 3), Группа)  Тогда
		Возврат Истина;	
		
	ИначеЕсли СтрНайти(Содержание, "Розничная выручка") > 0
		И (КорСчет = "76" ИЛИ КорСчет = "90")
		//	И ПустаяСтрока(ТипКлиента)
		И НЕ ФирмаУниверсама
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма > 0 
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)	И ТекСтрока.СчКт = "90.1.1"
		И СтрНайти(НРег(ТекСтрока.СодержаниеПроводки), "выручка") > 0  Тогда
		Возврат Истина;		
		
	// Ботко, Зевс - возврат покупателям отнимаем от реализации	
	ИначеЕсли СтрНайти(Содержание, "Возврат покупателям") > 0
		И (КорСчет = "76" ИЛИ КорСчет = "62" ИЛИ КорСчет = "60")
		И НЕ ФирмаУниверсама
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Данные.Организация)
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)	И ТекСтрока.СчКт = "90.1.1"
		И СтрНайти(НРег(ТекСтрока.СодержаниеПроводки), "выручка") > 0 Тогда
		
		Возврат Истина;				
		
	// Жсмн - отдельная строка для возвраа реализации	
	ИначеЕсли СтрНайти(Содержание, "Возврат покупателям") > 0 
		И (КорСчет = "76" ИЛИ КорСчет = "62" ИЛИ КорСчет = "60")
		И НЕ ФирмаУниверсама
	//	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоБоткоЗевс(Данные.Организация)
		И ТекСтрока.СчДт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)	И ТекСтрока.СчКт = "90.1.1" 
		И СтрНайти(ТекСтрока.СодержаниеПроводки, "возвр") > 0 Тогда
		
		Возврат Истина;			
		
	ИначеЕсли СтрНайти(Содержание, "Выплата заработной платы") > 0 
		И КорСчет = "70"
	//	И ПустаяСтрока(ТипКлиента)
		И НЕ ФирмаУниверсама И НЕ СвояФирма
	//	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И Сумма < 0
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация)
		И ТекСтрока.СчДт = "50.1" И ТекСтрока.СчКт = мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)
	//	И ТекСтрока.СубконтоДт1 = "Прочие поступления" 
		И (СтрНайти(ТекСтрока.СодержаниеПроводки, "выплата зп") > 0 ИЛИ СтрНайти(ТекСтрока.СодержаниеПроводки, "депон") > 0) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;	
		
		// оспаде, ебанный костыль
	ИначеЕсли СтрНайти(Содержание, "Выплата заработной платы") > 0 
		И КорСчет = "70"
	//	И ПустаяСтрока(ТипКлиента)
		И НЕ ФирмаУниверсама
	//	И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ЗАТРАТЫ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
	//	И Сумма > 0
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация)
		И ТекСтрока.СчДт = "50.1" И ТекСтрока.СчКт = "51"
		И ТекСтрока.СубконтоДт1 = "Прочие выплаты" И ТекСтрока.СубконтоКт1 = Группа И ТекСтрока.СубконтоКт2 = "Прочие поступления" 
		И (СтрНайти(ТекСтрока.СодержаниеПроводки, "выплата зп") > 0 ИЛИ СтрНайти(ТекСтрока.СодержаниеПроводки, "депон") > 0) 
		И ?(Группа = "Перс" ИЛИ Группа = "П20", СтрНайти(ТекСтрока.СодержаниеПроводки, Данные.ИНН) > 0, Истина) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;					
	
	ИначеЕсли ИСТИНА // СтрНайти(Содержание, "Оплата поставщик") > 0 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
		И СвояФирма 
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация)
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "51")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "51", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ТекСтрока.СубконтоДт1 = ?(Сумма > 0, Истина,ГруппаКонтраегнта) 
		И ТекСтрока.СубконтоКт1 = ?(Сумма > 0, ГруппаКонтраегнта, Истина)  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;		
		
	ИначеЕсли ИСТИНА // СтрНайти(Содержание, "Оплата поставщик") > 0 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
		И СвояФирма 
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация)
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), мммОтчетЗатратыСерверПереопределяемый.Счет50(КонтрагентИНН))	
		И ТекСтрока.СчКт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(КонтрагентИНН), мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ИСТИНА  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;		
		
	ИначеЕсли ИСТИНА // СтрНайти(Содержание, "Оплата поставщик") > 0 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
		И СвояФирма 
		И мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(Данные.Организация)
		И НЕ мммОтчетЗатратыСерверПереопределяемый.ЭтоКассоваяФирма(КонтрагентИНН)
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "51")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "51", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ?(Сумма > 0, (ТекСтрока.СубконтоКт1 = Лев(ГруппаКонтраегнта,3) ИЛИ (ТекСтрока.СубконтоКт1 = ГруппаКонтраегнта)), (ТекСтрока.СубконтоДт1 = Лев(ГруппаКонтраегнта,3) ИЛИ (ТекСтрока.СубконтоДт1 = ГруппаКонтраегнта)))
		И ИСТИНА  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;			
		
	ИначеЕсли ИСТИНА //СтрНайти(Содержание, "Оплата поставщик") > 0 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
	//	И ПустаяСтрока(ТипКлиента)
		И ЗАТРАТЫ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "60.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "60.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ТекСтрока.СубконтоДт1 = ?(Сумма > 0, Истина,"ЕМ") 
		И ТекСтрока.СубконтоДт2 = ?(Сумма > 0, Истина,"затр") 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт1 = "ЕМ", Истина) 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт2 = "затр", Истина)  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;	
		
	ИначеЕсли СтрНайти(Содержание, "Прочие расходы") > 0 
		И (КорСчет = "91")  
		И НЕ СвояФирма И ПустаяСтрока(ТипКлиента)
	//	И ЗАТРАТЫ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "60.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "60.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ТекСтрока.СубконтоДт1 = ?(Сумма > 0, Истина,"ЕМ") 
		И ТекСтрока.СубконтоДт2 = ?(Сумма > 0, Истина,"затр") 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт1 = "ЕМ", Истина) 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт2 = "затр", Истина)  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;			
		
	ИначеЕсли ИСТИНА  
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
		И (ТипКлиента = "Офис" ИЛИ АРЕНДА ИЛИ РЕКЛАМА) 
		И НЕ СвояФирма И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ПОСТАВЩИКИ И НЕ ЗАТРАТЫ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "60.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "60.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ?(Сумма > 0, Истина, ТекСтрока.СубконтоДт1 = "ОН") 
		И ?(Сумма > 0, Истина, ТекСтрока.СубконтоДт2 = "оф") 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт1 = "ОН", Истина) 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт2 = "оф", Истина) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;		
		
	ИначеЕсли ИСТИНА  
		И (КорСчет = "62")  
		И (ТипКлиента = "Офис" ИЛИ АРЕНДА ИЛИ РЕКЛАМА) 
		И НЕ СвояФирма И НЕ ОПТ И НЕ МАТЕРИАЛЫ И НЕ МАЛЬЧИКИ И НЕ ПОСТАВЩИКИ И НЕ ЗАТРАТЫ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "62.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "62.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ?(Сумма > 0, Истина, ТекСтрока.СубконтоДт1 = "ОН") 
		И ?(Сумма > 0, Истина, ТекСтрока.СубконтоДт2 = "оф") 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт1 = "ОН", Истина) 
		И ?(Сумма > 0, ТекСтрока.СубконтоКт2 = "оф", Истина) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;		
		
	ИначеЕсли ИСТИНА //СтрНайти(Содержание, "Оплата поставщик") > 0 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
	//	И ПустаяСтрока(ТипКлиента)
		И МАТЕРИАЛЫ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ ЗАТРАТЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ ПОСТАВЩИКИ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "60.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "60.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ?(Сумма > 0, Истина,ТекСтрока.СубконтоКт1 = "Материалы")  
		И ?(Сумма > 0, ТекСтрока.СубконтоКт1 = "Материалы", Истина)  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;	
		
	ИначеЕсли ИСТИНА 
		И (КорСчет = "60" ИЛИ КорСчет = "62")  
		И ПустаяСтрока(ТипКлиента)
		И ПОСТАВЩИКИ
		И НЕ СвояФирма И НЕ РЕКЛАМА И НЕ ОПТ И НЕ ЗАТРАТЫ И НЕ МАЛЬЧИКИ И НЕ АРЕНДА И НЕ МАТЕРИАЛЫ
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "60.1")	
		И ТекСтрока.СчКт = ?(Сумма > 0, "60.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация))
		И ?(Сумма > 0, Истина, СтрНайти(НРег(ТекСтрока.СубконтоДт1), "поставщики товара") > 0)  
		И ?(Сумма > 0, СтрНайти(НРег(ТекСтрока.СубконтоКт1), "поставщики товара") > 0, Истина)  Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;	
		

		
	ИначеЕсли ИСТИНА 
		И КорСчет = "71"
		И ТекСтрока.СчДт = ?(Сумма > 0, мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация), "71.1")
		И ТекСтрока.СчКт = ?(Сумма > 0, "71.1", мммОтчетЗатратыСерверПереопределяемый.Счет50(Данные.Организация)) Тогда
		СуммаПоМодулю = Истина;
		Возврат Истина;				
		
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции

Функция ПроверитьКудаВыгружатьОперацию(КудаВыгружать, ТекСтрока)
	
	Массив = СтрРазделить(КудаВыгружать, ",", Истина);
	СчДт 		= СтрЗаменить(Массив[0], """", "");
	СубконтоДт1 = СтрЗаменить(Массив[1], """", "");
	СубконтоДт2 = СтрЗаменить(Массив[2], """", "");
	СчКт 		= СтрЗаменить(Массив[3], """", "");
	СубконтоКт1 = СтрЗаменить(Массив[4], """", "");
	СубконтоКт2 = СтрЗаменить(Массив[5], """", "");
	Содержание 	= СтрЗаменить(Массив[6], """", "");
	
	Если ?(ЗначениеЗаполнено(СчДт), ТекСтрока.СчДт = СчДт, Истина)
		И ?(ЗначениеЗаполнено(СчКт), ТекСтрока.СчКт = СчКт, Истина)
		И ?(ЗначениеЗаполнено(СубконтоДт1), ТекСтрока.СубконтоДт1 = СубконтоДт1, Истина)
		И ?(ЗначениеЗаполнено(СубконтоДт2), ТекСтрока.СубконтоДт2 = СубконтоДт2, Истина) 
		И ?(ЗначениеЗаполнено(СубконтоКт1), ТекСтрока.СубконтоКт1 = СубконтоКт1, Истина)
		И ?(ЗначениеЗаполнено(СубконтоКт2), ТекСтрока.СубконтоКт2 = СубконтоКт2, Истина)		
		И ?(ЗначениеЗаполнено(Содержание), ТекСтрока.СодержаниеПроводки = Содержание, Истина) Тогда
		Возврат Истина;	
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции	
//////////////////////////////////////////
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеПотока

Процедура ОбработкаРезультатаВПоток(Таб, ПараметрыОтчета, Организация, Группа)
	
	НаборЗаписей = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(НачалоМесяца(ПараметрыОтчета.НачалоПериода));
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	
	НомерСтроки = 1;
	Если НаборЗаписей.Количество() <> 0 Тогда
		НомерСтроки = НаборЗаписей[НаборЗаписей.Количество() - 1].уНомерСтроки + 1;		
	КонецЕсли;
	
	Для Каждого Стр Из Таб Цикл 
		Если Таб.Колонки.Найти("СуммаОборотДт") = Неопределено Тогда
			Запись = НаборЗаписей.Добавить();
			// значения по умолчанию
			Запись.Статус = ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено();
			Запись.Период = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
			Запись.Организация = Организация;
			Запись.Группа = Группа;
			Запись.уНомерСтроки = НомерСтроки;
			
			Запись.Счет = Стр.Счет;
			Запись.КорСчет = Стр.КорСчет;
			
			Запись.ИНН = Организация.ИНН;
			Запись.СуммаОперации = Стр.СуммаОборот;//?(ЗначениеЗаполнено(Стр.СуммаОборотДт), Стр.СуммаОборотДт, Стр.СуммаОборотКт);
			
			Если Стр.Счет = "51" Тогда
				Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Выписка");
			ИначеЕсли Стр.Счет = "50" Тогда	
				Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Операция");
			ИначеЕсли Стр.Счет = "10.1" Тогда	
				Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеМатериалов");	
			ИначеЕсли Стр.Счет = "41" Тогда	
				Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеТоваров");				
			КонецЕсли;	

			Запись.ВидОперации = НайтиВидОперации(Стр, Запись.Документ, Организация);
		Иначе
				
			Если Стр.СуммаОборотДт <> 0 Тогда
				Запись = НаборЗаписей.Добавить();
				// значения по умолчанию
				Запись.Статус = ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено();
				Запись.Период = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
				Запись.Организация = Организация;
				Запись.Группа = Группа;
				Запись.уНомерСтроки = НомерСтроки;
				
				Запись.Счет = Стр.Счет;
				Запись.КорСчет = Стр.КорСчет;
				
				Запись.ИНН = Организация.ИНН;
				Запись.СуммаОперации = Стр.СуммаОборотДт;//?(ЗначениеЗаполнено(Стр.СуммаОборотДт), Стр.СуммаОборотДт, Стр.СуммаОборотКт);
				
				Если Стр.Счет = "51" Тогда
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Выписка");
				ИначеЕсли Стр.Счет = "50" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Операция");
				ИначеЕсли Стр.Счет = "10.1" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеМатериалов");	
				ИначеЕсли Стр.Счет = "41" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеТоваров");				
				КонецЕсли;	

				Запись.ВидОперации = НайтиВидОперации(Стр, Запись.Документ, Организация);
				НомерСтроки = НомерСтроки + 1;

			КонецЕсли;
			Если Стр.СуммаОборотКт <> 0 Тогда
				Запись = НаборЗаписей.Добавить();
				// значения по умолчанию
				Запись.Статус = ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено();
				Запись.Период = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
				Запись.Организация = Организация;
				Запись.Группа = Группа;
				Запись.уНомерСтроки = НомерСтроки;
				
				Запись.Счет = Стр.Счет;
				Запись.КорСчет = Стр.КорСчет;
				
				Запись.ИНН = Организация.ИНН;
				Запись.СуммаОперации = -Стр.СуммаОборотКт;//?(ЗначениеЗаполнено(Стр.СуммаОборотДт), Стр.СуммаОборотДт, Стр.СуммаОборотКт);
				
				Если Стр.Счет = "51" Тогда
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Выписка");
				ИначеЕсли Стр.Счет = "50" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.Операция");
				ИначеЕсли Стр.Счет = "10.1" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеМатериалов");	
				ИначеЕсли Стр.Счет = "41" Тогда	
					Запись.Документ = ПредопределенноеЗначение("Перечисление.ВидыВыгружаемыхДокументов.ПоступлениеТоваров");				
				КонецЕсли;	

				Запись.ВидОперации = НайтиВидОперации(Стр, Запись.Документ, Организация);
				НомерСтроки = НомерСтроки + 1;

			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;	
	
	//тзСвертка = НаборЗаписей.Выгрузить();
	//тзСвертка.Свернуть("Период,Организация,Документ,Счет,КорСчет,Группа,ВидОперации,ИНН,Статус,Комментарий", "СуммаОперации");
	//
	//Если ПараметрыОтчета.НеЗатиратьОтправленные Тогда
	//	
	//	тзСвертка = УдалитьДублиСтрокТаблицыЗначенийСПриоритетомСтатуса(тзСвертка, "Период,Организация,Документ,Счет,КорСчет,Группа,ВидОперации,ИНН,Статус,СуммаОперации,Комментарий");
	//	//Для Каждого СтрокаС Из тзСвертка Цикл
	//	//КонецЦикла;	
	//КонецЕсли;			
	//
	//НаборЗаписей.Загрузить(тзСвертка);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Отчет затраты.Формирование очереди", УровеньЖурналаРегистрации.Ошибка,,,
			""+НачалоМесяца(ПараметрыОтчета.НачалоПериода) + Символы.ПС + Организация + Символы.ПС + ОписаниеОшибки()
		);
	КонецПопытки;

	
КонецПроцедуры	

Функция УдалитьДублиСтрокТаблицыЗначенийСПриоритетомСтатуса(Таблица, Колонки = "") Экспорт

	Если ПустаяСтрока(Колонки) Тогда
		
		// Просто свернем таблицу по всем колонкам
		
		Для каждого Колонка Из Таблица.Колонки Цикл
			Колонки = Колонки + ?(ПустаяСтрока(Колонки), "", ",") + Колонка.Имя;
		КонецЦикла;
		
		ТаблицаРезультат = Таблица.Скопировать();
		ТаблицаРезультат.Свернуть(Колонки);
		
	Иначе
		
		КолонкиЗапроса = "ТЗ." + СтрЗаменить(Колонки, ",", ",ТЗ.");
		КолонкиЗапроса1 = СтрЗаменить(КолонкиЗапроса, "ТЗ.", "ВТ_ТЗ.");
		КолонкиГруппировки = КолонкиЗапроса1;
		КолонкиГруппировки = СтрЗаменить(КолонкиГруппировки, "ВТ_ТЗ.Статус,", ""); 
		КолонкиГруппировки = СтрЗаменить(КолонкиГруппировки, "ВТ_ТЗ.Статус", "");
		КолонкиГруппировки = СтрЗаменить(КолонкиГруппировки, "ВТ_ТЗ.Комментарий,", "");
		КолонкиГруппировки = СтрЗаменить(КолонкиГруппировки, "ВТ_ТЗ.Комментарий", "");
		КолонкиГруппировки = ?(Прав(КолонкиГруппировки, 1) = ",", Лев(КолонкиГруппировки, СтрДлина(КолонкиГруппировки) - 1), КолонкиГруппировки);
		КолонкиЗапроса1 = СтрЗаменить(КолонкиЗапроса1, "ВТ_ТЗ.Статус", "МИНИМУМ(ВЫБОР КОГДА ВТ_ТЗ.Статус = "+ЗатратыКлиентСервер.СтатусОтправки_Успешно()+" ТОГДА "+ЗатратыКлиентСервер.СтатусОтправки_Успешно()+" ИНАЧЕ "+ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено()+" КОНЕЦ) КАК Статус");
		КолонкиЗапроса1 = СтрЗаменить(КолонкиЗапроса1, "ВТ_ТЗ.Комментарий", "МАКСИМУМ(ВТ_ТЗ.Комментарий) КАК Комментарий");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
					   |	" + КолонкиЗапроса + "
					   |ПОМЕСТИТЬ ВТ_ТЗ
					   |ИЗ
					   |	&ТЗ КАК ТЗ
					   |;
					   |
					   |////////////////////////////////////////////////////////////////////////////////
					   |ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	" + КолонкиЗапроса1 + "
					   |ИЗ
					   |	ВТ_ТЗ КАК ВТ_ТЗ
					   |СГРУППИРОВАТЬ ПО 
					   |	"+ КолонкиГруппировки +"";

		Запрос.УстановитьПараметр("ТЗ", Таблица);
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаЗапроса = РезультатЗапроса.Выгрузить();
		//ТаблицаРезультат = Таблица.СкопироватьКолонки();
		//Для каждого СтрокаТЗ Из ТаблицаЗапроса Цикл
		//
		//	СтруктураОтбора = Новый Структура(Колонки);
		//	ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТЗ);
		//	
		//	РезультатОтбора = Таблица.НайтиСтроки(СтруктураОтбора);
		//	Для каждого СтрокаОтбора Из РезультатОтбора Цикл
		//		
		//		НоваяСтрока = ТаблицаРезультат.Добавить();
		//		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтбора);
		//		Прервать;
		//		
		//	КонецЦикла;
		//
		//КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаЗапроса;

КонецФункции // УдалитьДублиСтрокТаблицыЗначений()

Функция НайтиВидОперации(Стр, Документ, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыОперацийВыгружаемыхВ7.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ВидыОперацийВыгружаемыхВ7 КАК ВидыОперацийВыгружаемыхВ7
	               |ГДЕ
	               |	НЕ ВидыОперацийВыгружаемыхВ7.ПометкаУдаления
	               |	И ВидыОперацийВыгружаемыхВ7.Документ = &Документ
	               |	И ВидыОперацийВыгружаемыхВ7.СвояФирма = &СвояФирма
	               |	И ВидыОперацийВыгружаемыхВ7.РЕКЛАМА = &РЕКЛАМА
	               |	И ВидыОперацийВыгружаемыхВ7.ПОСТАВЩИКИ = &ПОСТАВЩИКИ
	               |	И ВидыОперацийВыгружаемыхВ7.ОПТ = &ОПТ
	               |	И ВидыОперацийВыгружаемыхВ7.МАТЕРИАЛЫ = &МАТЕРИАЛЫ
	               |	И ВидыОперацийВыгружаемыхВ7.МАЛЬЧИКИ = &МАЛЬЧИКИ
	               |	И ВидыОперацийВыгружаемыхВ7.ЗАТРАТЫ = &ЗАТРАТЫ
	               |	И ВидыОперацийВыгружаемыхВ7.АРЕНДА = &АРЕНДА
	               |	И НЕ ВидыОперацийВыгружаемыхВ7.ЭтоГруппа
	               |	И ВидыОперацийВыгружаемыхВ7.Счет = &Счет
	               |	И ВидыОперацийВыгружаемыхВ7.КорСчет = &КорСчет
	               |	И ВидыОперацийВыгружаемыхВ7.Аналитика = &Аналитика
	               |	И ВидыОперацийВыгружаемыхВ7.ТипКлиента = &ТипКлиента
	               |	И ВидыОперацийВыгружаемыхВ7.Организация = &Организация";
	Запрос.УстановитьПараметр("Документ", Документ);
	Попытка
		Запрос.УстановитьПараметр("СвояФирма", ?(ЗначениеЗаполнено(Стр.СвояФирма), Стр.СвояФирма, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.СвояФирма = &СвояФирма", "");
	КонецПопытки;         
	Попытка
		Запрос.УстановитьПараметр("РЕКЛАМА", ?(ЗначениеЗаполнено(Стр.РЕКЛАМА), Стр.РЕКЛАМА, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.РЕКЛАМА = &РЕКЛАМА", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("ПОСТАВЩИКИ", ?(ЗначениеЗаполнено(Стр.ПОСТАВЩИКИ), Стр.ПОСТАВЩИКИ, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.ПОСТАВЩИКИ = &ПОСТАВЩИКИ", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("ОПТ", ?(ЗначениеЗаполнено(Стр.ОПТ), Стр.ОПТ, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.ОПТ = &ОПТ", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("МАТЕРИАЛЫ", ?(ЗначениеЗаполнено(Стр.МАТЕРИАЛЫ), Стр.МАТЕРИАЛЫ, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.МАТЕРИАЛЫ = &МАТЕРИАЛЫ", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("МАЛЬЧИКИ", ?(ЗначениеЗаполнено(Стр.МАЛЬЧИКИ), Стр.МАЛЬЧИКИ, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.МАЛЬЧИКИ = &МАЛЬЧИКИ", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("ЗАТРАТЫ", ?(ЗначениеЗаполнено(Стр.ЗАТРАТЫ), Стр.ЗАТРАТЫ, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.ЗАТРАТЫ = &ЗАТРАТЫ", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("АРЕНДА", ?(ЗначениеЗаполнено(Стр.АРЕНДА), Стр.АРЕНДА, Ложь));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.АРЕНДА = &АРЕНДА", "");
	КонецПопытки;			
	Запрос.УстановитьПараметр("Счет", ?(ЗначениеЗаполнено(Стр.Счет), Стр.Счет, ""));		
	Попытка	
		Запрос.УстановитьПараметр("КорСчет", ?(ЗначениеЗаполнено(Стр.КорСчет), Стр.КорСчет, ""));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.КорСчет = &КорСчет", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("Аналитика", ?(ЗначениеЗаполнено(Стр.Аналитика), Стр.Аналитика, ""));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.Аналитика = &Аналитика", "");
	КонецПопытки;		
	Попытка	
		Запрос.УстановитьПараметр("ТипКлиента", ?(ЗначениеЗаполнено(Стр.ТипКлиента), Стр.ТипКлиента, ""));
	Исключение
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.ТипКлиента = &ТипКлиента", "");
	КонецПопытки;		
	Запрос.УстановитьПараметр("Организация", Организация);
	
	// детально по каждой организации, не важно своя или не своя
	Попытка
		Если (Стр.Счет = "50" И ЗначениеЗаполнено(Стр.Контрагент)) ИЛИ ЗначениеЗаполнено(Стр.Контрагент) Тогда
			Запрос.Текст = Запрос.Текст 
				+ Символы.ПС + "И ВидыОперацийВыгружаемыхВ7.Контрагент = &Контрагент"
				+ Символы.ПС + "И ВидыОперацийВыгружаемыхВ7.КонтрагентИНН = &КонтрагентИНН";
			Запрос.УстановитьПараметр("Контрагент", Стр.Контрагент);	
			Запрос.УстановитьПараметр("КонтрагентИНН", Стр.КонтрагентИНН);
		КонецЕсли;	
		Исключение
	КонецПопытки;

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыОперацийВыгружаемыхВ7.Организация = &Организация", "");	
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;			
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СоздатьЗаписьНастроек(Стр, Документ);
	КонецЕсли;	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;	
	
КонецФункции

Функция СоздатьЗаписьНастроек(Стр, Документ) 
	
	спр = Справочники.ВидыОперацийВыгружаемыхВ7.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(спр, Стр);
	спр.Документ = Документ;
	
	стрНаименование = "";
	Для Сч = 0 По Метаданные.Справочники.ВидыОперацийВыгружаемыхВ7.Реквизиты.Количество()-1 Цикл
		Попытка	
			Если ТипЗнч(Стр[Сч]) = Тип("Число") Тогда
				Продолжить;
			КонецЕсли;
		                                             
			стрНаименование = стрНаименование + ", " + ?(ТипЗнч(Стр[Сч]) = Тип("Булево") И ЗначениеЗаполнено(Стр[Сч]), ?(Стр[Сч], Метаданные.Справочники.ВидыОперацийВыгружаемыхВ7.Реквизиты[Сч-1].Имя, ""), Стр[Сч]);
		Исключение
			Прервать;
		КонецПопытки;
	КонецЦикла;		
	
	спр.Наименование = СокрЛП(Документ) + ", " + стрНаименование;
	
	Попытка
		спр.Записать();
	Исключение
		Возврат ПредопределенноеЗначение("Справочник.ВидыОперацийВыгружаемыхВ7.ПустаяСсылка");
	КонецПопытки;
	
	Возврат спр.Ссылка;
	
КонецФункции	

Процедура ОчиститьОчередь(Период , Организация, ПараметрыОтчета)
	
	Если НЕ ПараметрыОтчета.НеЗатиратьОтправленные Тогда 	
		Набор = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Организация);
		Набор.Отбор.Период.Установить(Период);
		Набор.Записать();
	Иначе
		Набор = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Организация);
		Набор.Отбор.Период.Установить(Период);
		Набор.Прочитать();
		тз = Набор.Выгрузить();
		МассивСтрок = тз.НайтиСтроки(Новый Структура("Статус", ЗатратыКлиентСервер.СтатусОтправки_Успешно()));
		тзУспешные = тз.Скопировать(МассивСтрок);
		Набор.Очистить();
		Набор.Загрузить(тзУспешные);
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапроса()
	
	Текст = "ВЫБРАТЬ
|	""51"" КАК Счет,
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
|	КОНЕЦ КАК КорСчет,
|	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
|	ХозрасчетныйОбороты.Субконто2.Наименование КАК Аналитика,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.Наименование
|				КОНЕЦ
|	КОНЕЦ КАК Контрагент,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН
|				КОНЕЦ
|	КОНЕЦ КАК КонтрагентИНН,
|	КонтрагентыДополнительныеРеквизиты.Значение.Наименование КАК ТипКлиента,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК АРЕНДА,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК ПОСТАВЩИКИ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК РЕКЛАМА,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК ЗАТРАТЫ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК МАТЕРИАЛЫ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК МАЛЬЧИКИ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ КАК ОПТ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|	КОНЕЦ КАК СвояФирма
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета)), , Организация.ИНН = &Организация, НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета)), ) КАК ХозрасчетныйОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
|		ПО ХозрасчетныйОбороты.КорСубконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
|			И (КонтрагентыДополнительныеРеквизиты.Свойство В
|				(ВЫБРАТЬ
|					ДопРек.Ссылка
|				ИЗ
|					ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
|				ГДЕ
|					ДопРек.Наименование = ""ТипКлиента""))
|
|СГРУППИРОВАТЬ ПО
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.Наименование
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|	КОНЕЦ,
|	ХозрасчетныйОбороты.Субконто2.Наименование,
|	КонтрагентыДополнительныеРеквизиты.Значение.Наименование
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	""50"",
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
|	КОНЕЦ,
|	СУММА(ХозрасчетныйОбороты.СуммаОборот),
|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт),
|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт),
|	ХозрасчетныйОбороты.Субконто1.Наименование,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.Наименование
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН
|				КОНЕЦ
|	КОНЕЦ,
|	КонтрагентыДополнительныеРеквизиты.Значение.Наименование,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|	КОНЕЦ
|ИЗ
|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса)), , Организация.ИНН = &Организация, НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса)), ) КАК ХозрасчетныйОбороты
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
|		ПО ХозрасчетныйОбороты.КорСубконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
|			И (КонтрагентыДополнительныеРеквизиты.Свойство В
|				(ВЫБРАТЬ
|					ДопРек.Ссылка
|				ИЗ
|					ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
|				ГДЕ
|					ДопРек.Наименование = ""ТипКлиента""))
|
|СГРУППИРОВАТЬ ПО
|	ВЫБОР
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Код
|		КОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
|			ТОГДА ХозрасчетныйОбороты.КорСчет.Родитель.Родитель.Код
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.Наименование
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%аренда%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%поставщик%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%реклам%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%затраты%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%материалы%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА (ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ПОКУПАТЕЛИ 20%"" ИЛИ ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ЗАЙМЫ%"")
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.Наименование ПОДОБНО ""%ОПТ%""
|							И ХозрасчетныйОбороты.КорСубконто1.Родитель.Родитель.Родитель.Родитель.ЭтоГруппа
|						ТОГДА ИСТИНА
|				КОНЕЦ
|	КОНЕЦ,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = ТИП(Справочник.Контрагенты)
|			ТОГДА ВЫБОР
|					КОГДА ХозрасчетныйОбороты.КорСубконто1.ИНН В (&СвоиФирмы)
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|	КОНЕЦ,
|	ХозрасчетныйОбороты.Субконто1.Наименование,
|	КонтрагентыДополнительныеРеквизиты.Значение.Наименование
|
|УПОРЯДОЧИТЬ ПО
|	Счет УБЫВ,
|	КорСчет,
|	Аналитика
|";
	
	Возврат Текст;
	
КонецФункции	

#КонецОбласти

#Область ФормированиеОтчета
Функция Зарплата(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "70");  // РасчетыСПерсоналомПоОплатеТруда
	Запрос.Параметры.Вставить("СписокКорСчетов", "51");
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаНалога,
		|	ХозрасчетныйОбороты.Счет.Наименование КАК ВидНалога
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Наименование";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ТаблицаЗП = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаЗП Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;	
	
	Возврат ТаблицаЗП;
	
КонецФункции

Функция ИсполнительныеЛисты(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "76.41");  // РасчетыПоИсполнительнымДокументамРаботников
	Запрос.Параметры.Вставить("СписокКорСчетов", "51");
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////		
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаНалога,
		|	ХозрасчетныйОбороты.Счет.Наименование КАК ВидНалога
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Наименование";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ТаблицаИЛ = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаИЛ Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);	
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;	
	
	Возврат ТаблицаИЛ;
	
КонецФункции

Функция Налоги(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
		МассивКорСчетов = Новый Массив;
		МассивКорСчетов.Добавить("68");//(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
		МассивКорСчетов.Добавить("69");//(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		
		Запрос = мммСервер.ЗапросПрокси();
		Запрос.Параметры.Вставить("ДатаНачала", НачалоДня(ПараметрыОтчета.НачалоПериода));
		Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
		Запрос.Параметры.Вставить("Организация", Организация.ИНН);
		Запрос.Параметры.Вставить("Счет", "51"); //		   ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		Запрос.Параметры.Вставить("СписокКорСчетов", МассивКорСчетов);	
		Запрос.ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Хозрасчетный.Код КАК Код
			|ПОМЕСТИТЬ ВТСчета
			|ИЗ
			|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
			|ГДЕ
			|	(Хозрасчетный.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&СписокКорСчетов)
			|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&СписокКорСчетов))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаНалога,
			|	ХозрасчетныйОбороты.КорСчет.Наименование КАК КорСчет,
			|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорСубконто
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&ДатаНачала,
			|			&ДатаОкончания,
			|			Авто,
			|			Счет.Код В (&Счет),
			|			,
			|			Организация.ИНН = &Организация,
			|			КорСчет.Код В (ВЫБРАТЬ ВТ.Код ИЗ ВТСчета КАК ВТ),
			|			) КАК ХозрасчетныйОбороты
			| 
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОбороты.КорСчет.Наименование,
			|	ХозрасчетныйОбороты.КорСубконто1
			|
			|ИМЕЮЩИЕ
			|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
			|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	ТаблицаНалогов = Ответ.Результат;
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаНалогов Цикл
				ОбластьМакета.Параметры.ВидНалога = Лев(Стр.КорСчет,40)+" "+Лев(Стр.КорСубконто,6);
				ОбластьМакета.Параметры.СуммаНалога = Стр.СуммаНалога;
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаНалога;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;						
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция Материалы(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет, Группа)
	
	Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""Материалы"",Истина,,);");
	Если СтрНайти(Ответ, """Value"": {") > 0 И 
		СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
		СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""Материалы""");
	КонецЕсли;	
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);	
	//Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.Параметры.Вставить("Счет", "60");		//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Материалы");
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОбороты.Субконто1 КАК ВидНалога,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОплатМатериалов,
		|	0 КАК СуммаПоступленийМатериалов
		|ПОМЕСТИТЬ ВТМатериалы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В
		|				(ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Организация.ИНН = &Организация,
		|			КорСчет.Код = &КорСчет,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	NULL,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНалога
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(Материалы.ВидНалога) КАК ВидНалога,
		|	СУММА(Материалы.СуммаПоступленийМатериалов) КАК СуммаПоступленийМатериалов,
		|	СУММА(Материалы.СуммаОплатМатериалов) КАК СуммаОплатМатериалов
		|ИЗ
		|	ВТМатериалы КАК Материалы
		|
		|СГРУППИРОВАТЬ ПО
		|	Материалы.ВидНалога
		|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаМатериалов = Ответ.Результат;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаМатериалов Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаОплатМатериалов;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			
			//СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//+"ПоступлениеМатериалов"+Разделитель+"60"+Разделитель+"51"+Разделитель+СокрЛП(ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов"))+Разделитель+"Поступления по материалам"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;			
			тз = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			тз.Колонки.Добавить("СуммаОборот", Новый ОписаниеТипов("Число"));
			НоваяСтрока = тз.Добавить();
			НоваяСтрока.Период = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
			НоваяСтрока.Статус = ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено();
			НоваяСтрока.Организация = Организация;
			Попытка
				НоваяСтрока.Группа = Группа[0].Счет7;
			Исключение
				НоваяСтрока.Группа = "";
			КонецПопытки;
			НоваяСтрока.Счет = "10.1";
			НоваяСтрока.СуммаОборот = ТаблицаМатериалов.Итог("СуммаПоступленийМатериалов");
			
			ОбработкаРезультатаВПоток(тз, ПараметрыОтчета, Организация, НоваяСтрока.Группа);			
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции

Функция Услуги(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ЗАТРАТЫ"",Истина,,);");
	Если СтрНайти(Ответ, """Value"": {") > 0 И 
		СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
		СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ЗАТРАТЫ""");
	КонецЕсли;	
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);	
	Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ЗАТРАТЫ");	
	Запрос.Параметры.Вставить("Счет", "60");		//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета51
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК ВидНалога,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаУслуг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета.Код
		|				ИЗ
		|					ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							ВтОфис.Контрагент
		|						ИЗ
		|							ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет.Код = &КорСчет,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				ВТКонтрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1),
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета51.Код
		|				ИЗ
		|					ВТСчета51),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ХозрасчетныйОбороты.Субконто1 В (ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.УслугиБанков))
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Субконто1
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
		|";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);	
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаУслуг = Ответ.Результат;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
			Для Каждого Стр Из ТаблицаУслуг Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Стр);
				ОбластьМакета.Параметры.ИтСумма = Стр.СуммаУслуг;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоУслугам");
			ОбластьМакета.Параметры.ИтСуммаУслуг = ТаблицаУслуг.Итог("СуммаУслуг");
			ТабличныйДокумент.Вывести(ОбластьМакета);				
		КонецЕсли;
	КонецЕсли;

	Возврат Ответ.Результат;
	
КонецФункции

Процедура КонтрагентыДополнительныеРеквизиты(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет, ИтСуммаДоп)
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("КорСчет", "51");		//      ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	МассивСчетов5 = Новый Массив;
	МассивСчетов5.Добавить("60");//ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	МассивСчетов5.Добавить("76");//ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);	
	Запрос.Параметры.Вставить("Счет", МассивСчетов5);
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Хозрасчетный.Код КАК Код
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК ВидНалога,
		|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.Контрагенты).ИНН КАК ВидНалогаИНН,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаУслуг,
		|	ПРЕДСТАВЛЕНИЕ(КонтрагентыДополнительныеРеквизиты.Значение) КАК ТипКлиента
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет.Код В
		|				(ВЫБРАТЬ
		|					ВТСчета.Код
		|				ИЗ
		|					ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ВтОфис.Контрагент
		|					ИЗ
		|						ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет.Код В (&КорСчет),
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО ХозрасчетныйОбороты.Субконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
		|ИТОГИ
		|	СУММА(СуммаУслуг)
		|ПО
		|	ТипКлиента
		|";

	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ТаблицаУслуг2 = Ответ.Результат;

			Для Каждого Стр Из ТаблицаУслуг2 Цикл
				Если Не ЗначениеЗаполнено(Стр.ВидНалога) Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогиПоДопРекизитам");					
					ОбластьМакета.Параметры.ВидНалога=Стр.ТипКлиента;
					ИтСуммаДоп=ИтСуммаДоп+Стр.СуммаУслуг;
				Иначе
					ОбластьМакета = Макет.ПолучитьОбласть("СтрокаОтчета");
					ОбластьМакета.Параметры.ВидНалога=Стр.ВидНалога;
				КонецЕсли; 								
				ОбластьМакета.Параметры.СуммаУслуг=Стр.СуммаУслуг;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры	

Процедура Проверка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация)
	
	ОбластьМакетаПроверка = Макет.ПолучитьОбласть("Проверка");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет",  "51");//ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	
	Запрос.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаПроверки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет.Код В (&Счет), , Организация.ИНН = &Организация, , ) КАК ХозрасчетныйОбороты";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда	
			РезультатЗапроса = Ответ.Результат;	
			ОбластьМакетаПроверка.Параметры.СуммаПроверки = РезультатЗапроса.Итог("СуммаПроверки");
	//	КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакетаПроверка);	
	
КонецПроцедуры	

Процедура ВетСправка(Прокси, ТабличныйДокумент, Макет, ПараметрыОтчета, Организация)
	
	ОбластьВетСправка = Макет.ПолучитьОбласть("ВетСправка");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет",  "44.03");
	
	Запрос.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаВетСправка
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Авто, Счет.Код В (&Счет), , Организация.ИНН = &Организация, , ) КАК ХозрасчетныйОбороты";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
	//	Если Ответ.Результат.Количество() > 0 Тогда	
			РезультатЗапроса = Ответ.Результат;	
			ОбластьВетСправка.Параметры.СуммаВетСправка=РезультатЗапроса.Итог("СуммаВетСправка")*1.2;
	//	КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьВетСправка);	
	
КонецПроцедуры

Процедура НеВошедшиеКонтрагентыПоУслугам(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	ОбластьМакетаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугам");
	ОбластьМакетаГруппаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугамГруппа");
		
	ВыполняемыйКод = "ГруппаКонтрагентовЗатраты=Справочники.Контрагенты.НайтиПоНаименованию(""ЗАТРАТЫ"",Истина,,);
		|ГруппаКонтрагентовМатериалы=Справочники.Контрагенты.НайтиПоНаименованию(""Материалы"",Истина,,);
		|МассивКлиентов= Новый Массив;
		|МассивКлиентов.Добавить(ГруппаКонтрагентовЗатраты);
		|МассивКлиентов.Добавить(ГруппаКонтрагентовМатериалы);
		|Запрос = Новый Запрос;
		|Запрос.УстановитьПараметр(""ДатаНачала"", 		НачалоДня(Дата("+Формат(ПараметрыОтчета.НачалоПериода,"ДФ=yyyy,MM,dd")+")));
		|Запрос.УстановитьПараметр(""ДатаОкончания"", 	Новый Граница(КонецДня(Дата("+Формат(ПараметрыОтчета.КонецПериода,"ДФ=yyyy,MM,dd")+")), ВидГраницы.Включая));
		|Запрос.УстановитьПараметр(""Организация"", 	"""+Организация.ИНН+""");
		|Запрос.УстановитьПараметр(""ВидыСубконто"", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		|Запрос.УстановитьПараметр(""ВыбСчет"", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
		|Запрос.УстановитьПараметр(""КорСчет"", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		|Запрос.УстановитьПараметр(""ГруппаКонтрагентов"", МассивКлиентов);
		|ДопСвойство= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(""ТипКлиента"");
		|Запрос.УстановитьПараметр(""Свойство"", ДопСвойство);
		|Запрос.Текст =""ВЫБРАТЬ
		||	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		||ПОМЕСТИТЬ ВтОфис
		||ИЗ
		||	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		||ГДЕ
		||	КонтрагентыДополнительныеРеквизиты.Свойство = &Свойство
		||
		||ИНДЕКСИРОВАТЬ ПО
		||	Контрагент
		||;
		||
		||////////////////////////////////////////////////////////////////////////////////
		||ВЫБРАТЬ РАЗРЕШЕННЫЕ
		||	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		||	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаУслуг
		||ИЗ
		||	РегистрБухгалтерии.Хозрасчетный.Обороты(
		||			&ДатаНачала,
		||			&ДатаОкончания,
		||			Авто,
		||			Счет В ИЕРАРХИИ (&ВыбСчет),
		||			&ВидыСубконто,
		||			НЕ Субконто1 В
		||						(ВЫБРАТЬ
		||							ВтОфис.Контрагент
		||						ИЗ
		||							ВтОфис)
		||				И Организация.ИНН = &Организация,
		||			КорСчет = &КорСчет,
		||			) КАК ХозрасчетныйОбороты
		||ГДЕ
		||	НЕ ХозрасчетныйОбороты.Субконто1 В ИЕРАРХИИ (&ГруппаКонтрагентов)
		||
		||СГРУППИРОВАТЬ ПО
		||	ХозрасчетныйОбороты.Субконто1
		||ИТОГИ
		||	СУММА(СуммаУслуг)
		||ПО
		||	Контрагент ТОЛЬКО ИЕРАРХИЯ"";		
		|ТаблицаУслуг = Запрос.Выполнить().Выгрузить();
		|ВозвращаемоеЗначение = Новый ТаблицаЗначений;
		|ВозвращаемоеЗначение.Колонки.Добавить(""ЭтоГруппа"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""Контрагент"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""СуммаУслуг"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""Уровень"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""СвояФирма"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""ПоставщикиТовара"");
		|ВозвращаемоеЗначение.Колонки.Добавить(""ИНН"");		
		|Для Каждого Стр Из ТаблицаУслуг Цикл
		|	Если НЕ ЗначениеЗаполнено(Стр.Контрагент) Тогда
		|		Продолжить;
		|	КонецЕсли;	
		|	
		|	НоваяСтр = ВозвращаемоеЗначение.Добавить();
		|	НоваяСтр.ЭтоГруппа = Стр.Контрагент.ЭтоГруппа;
		|	НоваяСтр.Уровень = Стр.Контрагент.Уровень();
		|	НоваяСтр.СуммаУслуг = Стр.СуммаУслуг;
		|	НоваяСтр.Контрагент = СокрЛП(Стр.Контрагент);
		|   НоваяСтр.ИНН = Стр.Контрагент.ИНН;	
		|	Если НЕ Стр.Контрагент.ЭтоГруппа Тогда
		|		Если СтрНайти(Стр.Контрагент.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;
		|		ИначеЕсли СтрНайти(Стр.Контрагент.Родитель.Родитель.Родитель.Родитель.Наименование, ""Поставщики"") > 0 Тогда
		|			НоваяСтр.ПоставщикиТовара = Истина;		
		|		КонецЕсли;			
		|	КонецЕсли;
		|КонецЦикла;";				

	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunCode(ВыполняемыйКод)
	);
	ТаблицаУслуг = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		
		ТаблицаСвоихФирм = ПолучитьТаблицуСвоихФирм(Организация);
		ТаблицаСумм = Новый ТаблицаЗначений;
		ТаблицаСумм.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
		ТаблицаСумм.Колонки.Добавить("ПоставщикиТовара", Новый ОписаниеТипов("Булево"));
		
		Если Ответ.Результат.Количество() > 0 Тогда
			
			Для Каждого Стр Из ТаблицаУслуг Цикл
				Если Не ЗначениеЗаполнено(Стр.Контрагент) Тогда
					Продолжить;
				КонецЕсли;
				Если (Стр.ЭтоГруппа)Тогда //и (Стр.Контрагент.Уровень()=0) Тогда
					ОбластьМакетаГруппаКлиентов.Параметры.Контрагент=Стр.Контрагент;
					ОбластьМакетаГруппаКлиентов.Параметры.СуммаУслуг=Стр.СуммаУслуг;
					ТабличныйДокумент.Вывести(ОбластьМакетаГруппаКлиентов,Стр.Уровень);
				Иначе
					ОбластьМакетаКлиентов.Параметры.Контрагент=Стр.Контрагент;
					ОбластьМакетаКлиентов.Параметры.СуммаУслуг=Стр.СуммаУслуг;
					
					ТабличныйДокумент.Вывести(ОбластьМакетаКлиентов,Стр.Уровень);
					
					///
					Если НЕ ТаблицаСвоихФирм.Найти(Стр.ИНН, "ИНН") = Неопределено Тогда
						// переброс денег. Запись должна быть сформирована ПрочиеВыплаты
					Иначе
						НоваяСтрока = ТаблицаСумм.Добавить();
						НоваяСтрока.Сумма =  Стр.СуммаУслуг;
						НоваяСтрока.ПоставщикиТовара = Стр.ПоставщикиТовара;
					КонецЕсли;		
					
				КонецЕсли; 					
			КонецЦикла; 
			
		КонецЕсли;
	Иначе
		ЗаписьЖурналаРегистрации("Отчет затраты",УровеньЖурналаРегистрации.Ошибка,,,Ответ.ОписаниеОшибки);
	КонецЕсли;	
	
КонецПроцедуры	

Процедура Запрос57(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	ОбластьМакетаКлиентов = Макет.ПолучитьОбласть("НеВошедшиеКонтрагентыПоУслугам");
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("КорСчет", "57");//ПланыСчетов.Хозрасчетный.ПереводыВПути_);
	Запрос.Параметры.Вставить("Счет", "51");//ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаУслуг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Период, Счет.Код В (&Счет), , Организация.ИНН = &Организация, КорСчет В (ВЫБРАТЬ * ИЗ ВТСчета), ) КАК ХозрасчетныйОбороты";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Для Каждого Выборка Из Ответ.Результат Цикл
				Если Выборка.СуммаУслуг > 0 Тогда
					ОбластьМакетаКлиентов.Параметры.Контрагент="Счет 57";
					ОбластьМакетаКлиентов.Параметры.СуммаУслуг=Выборка.СуммаУслуг;
					ТабличныйДокумент.Вывести(ОбластьМакетаКлиентов);					
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

Процедура ТаблицаПоступлений(Прокси, ПараметрыОтчета, Организация, ТабличныйДокумент, Макет)
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);	
	
	///////////////////////////////////////////ТАБЛИЦА ПОСТУПЛЕНИЙ ШАПКА///////////////////////////////////////////////////
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПоступлений");
	//ТабличныйДокумент.Вывести(ОбластьМакета);
	// Дно
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("ВыбСчет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&ВыбСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&ВыбСчет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт), 0) КАК СуммаНачало,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт), 0) КАК СуммаКонец,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт), 0) КАК СуммаПриход,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт), 0) КАК СуммаРасход
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет В (ВЫБРАТЬ * ИЗ ВТСчета), , Организация.ИНН = &Организация) КАК ХозрасчетныйОстаткиИОбороты";	

	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	ТаблицаОстатков = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
		//	ОбластьМакета = Макет.ПолучитьОбласть("ДноПоступлений");
			Для Каждого Стр Из ТаблицаОстатков Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
			КонецЦикла; 			
		КонецЕсли;
	КонецЕсли;	
	ТабличныйДокумент.Вывести(ОбластьМакета);		

	///////////////////////////////////////////ТАБЛИЦА ПОСТУПЛЕНИЙ СТРОКИ///////////////////////////////////////////////////
			
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;		
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчет,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.КорСубконто1) КАК КорСубконто,
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаОборотДт), 0) КАК СуммаПрихода,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК СтатьяДС
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств),
		|			НЕ КорСубконто1 В
		|						(ВЫБРАТЬ
		|							ВтОфис.Контрагент
		|						ИЗ
		|							ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.КорСчет,
		|	ХозрасчетныйОбороты.КорСубконто1,
		|	ХозрасчетныйОбороты.Субконто1
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	ИтСумПоступлений=0;
	ТаблицаПоступлений = Ответ.Результат;
	ТабличныйДокумент.НачатьАвтоГруппировкуСтрок();
	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПоступлений");	
			Для Каждого Стр Из ТаблицаПоступлений Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры ,Стр);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				ИтСумПоступлений=ИтСумПоступлений+Стр.СуммаПрихода;
			КонецЦикла; 
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоступ");
			ОбластьМакета.Параметры.СуммаПрихода=ТаблицаПоступлений.Итог("СуммаПрихода");
			ТабличныйДокумент.Вывести(ОбластьМакета);			
		КонецЕсли;
	КонецЕсли;
	ТабличныйДокумент.ЗакончитьАвтоГруппировкуСтрок(); 
	КоличествоУровней = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок();
	Для Уровень = 1 По КоличествоУровней - 1 Цикл
		ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(КоличествоУровней - Уровень);
	КонецЦикла;
	
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);
	
	
	// ПокупателиДополнительныеРеквизиты
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала",    НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация",   Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "62");  // РасчетыСПокупателямиИЗаказчиками
	Запрос.Параметры.Вставить("КорСчет", "51");  // РасчетныеСчета
	Запрос.ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;		
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТКорСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&КорСчет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&КорСчет))
		|;		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ ВтОфис
		|ИЗ
		|	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|ГДЕ
		|	КонтрагентыДополнительныеРеквизиты.Свойство В
		|			(ВЫБРАТЬ
		|				ДопРек.Ссылка
		|			ИЗ
		|				ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРек
		|			ГДЕ
		|				ДопРек.Наименование = ""ТипКлиента"")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;		
		|////////////////////////////////////////////////////////////////////////////////			
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Субконто1) КАК Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(КонтрагентыДополнительныеРеквизиты.Значение) КАК ТипКлиента,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0) КАК СуммаПрихода
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В (ВЫБРАТЬ * ИЗ ВТСчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ВтОфис.Контрагент
		|					ИЗ
		|						ВтОфис)
		|				И Организация.ИНН = &Организация,
		|			КорСчет В (ВЫБРАТЬ * ИЗ ВТКорСчета),
		|			) КАК ХозрасчетныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО ХозрасчетныйОбороты.Субконто1 = КонтрагентыДополнительныеРеквизиты.Ссылка
		|ИТОГИ
		|	СУММА(СуммаПрихода)
		|ПО
		|	ТипКлиента";
	
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);
	
	ИтСуммаДоп=0;
	ТаблицаПокупателей = Ответ.Результат;

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			Для Каждого Стр Из ТаблицаПокупателей Цикл
				Если Не ЗначениеЗаполнено(Стр.Контрагент) Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогиПоДопРекизитамПокупателей");					
					ОбластьМакета.Параметры.ТипКлиента=Стр.ТипКлиента;
					ИтСуммаДоп=ИтСуммаДоп+Стр.СуммаПрихода;
				Иначе
					ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПокупателей");
					ОбластьМакета.Параметры.ТипКлиента=Стр.Контрагент;										
				КонецЕсли; 								
				
				ОбластьМакета.Параметры.СуммаПрихода=Стр.СуммаПрихода;
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла; 
			
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоПоступлений");
			ОбластьМакета.Параметры.СуммаПрихода=ИтСумПоступлений+ИтСуммаДоп;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
	КонецЕсли;	
	
	
	ОбластьМакетаРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабличныйДокумент.Вывести(ОбластьМакетаРазделитель);	
	
КонецПроцедуры

Процедура ПоступлениеТоваров(Прокси, ПараметрыОтчета, Организация, Группа)
	
	Ответ = Неопределено;
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ЖАСМИН Поставщики"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ЖАСМИН Поставщики""");
		КонецЕсли;			
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""Поставщики БАЙКАЛ"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""Поставщики БАЙКАЛ""");
		КонецЕсли;			
	Иначе
		Ответ = Прокси.RunCode("ВозвращаемоеЗначение=Справочники.Контрагенты.НайтиПоНаименованию(""ПОСТАВЩИКИ ТОВАРА"",Истина,,);");
		Если СтрНайти(Ответ, """Value"": {") > 0 И 
			СтрНайти(Ответ, """#type"": ""jcfg:CatalogRef.Контрагенты"",") > 0 И
			СтрНайти(Ответ, """#value"": ""00000000-0000-0000-0000-000000000000""") > 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не найдена группа контрагентов ""ПОСТАВЩИКИ ТОВАРА""");
		КонецЕсли;	
	КонецЕсли;
	
	Запрос = мммСервер.ЗапросПрокси();
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрыОтчета.НачалоПериода);
	Запрос.Параметры.Вставить("ДатаОкончания", Новый Граница(ПараметрыОтчета.КонецПериода, ВидГраницы.Включая));
	Запрос.Параметры.Вставить("Организация", Организация.ИНН);
	Запрос.Параметры.Вставить("Счет", "60"); //ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками
	Если мммОтчетЗатратыСерверПереопределяемый.ЭтоЖасмин(Организация) Тогда
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ЖАСМИН Поставщики");
	ИначеЕсли мммОтчетЗатратыСерверПереопределяемый.ЭтоБайкалЯрисПосейдон(Организация) Тогда
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "Поставщики БАЙКАЛ");
	Иначе
		Запрос.Параметры.Вставить("ГруппаКонтрагентов", "ПОСТАВЩИКИ ТОВАРА");
	КонецЕсли;
	Запрос.ТекстЗапроса = "ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Наименование = &ГруппаКонтрагентов
		|			ИЛИ Контрагенты.Родитель.Родитель.Родитель.Наименование = &ГруппаКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	(Хозрасчетный.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Код В (&Счет)
		|			ИЛИ Хозрасчетный.Родитель.Родитель.Родитель.Код В (&Счет))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаТоваров
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Авто,
		|			Счет В
		|				(ВЫБРАТЬ
		|					*
		|				ИЗ
		|					ВТСчета КАК ВТ),
		|			,
		|			Организация.ИНН = &Организация,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ 
		|	ХозрасчетныйОбороты.Субконто1 В
		|			(ВЫБРАТЬ
		|				Контрагенты.Ссылка
		|			ИЗ
		|				ВТКонтрагенты КАК Контрагенты)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0
		|";
	Ответ = мммСервер.ДеСериализовать(
		Прокси.RunQuery(мммСервер.Сериализовать(Запрос))
	);

	Если НЕ Ответ.Ошибка Тогда
		Если Ответ.Результат.Количество() > 0 Тогда
			
			//СтрЗаписи=СокрЛП(Организация.ИНН)+Разделитель+ СокрЛП(Формат(ПараметрыОтчета.КонецПериода,"ДФ=dd.MM.yyyy"))+Разделитель+ СокрЛП(Организация)+Разделитель
			//+"ПоступлениеТоваров"+Разделитель+"60"+Разделитель+"60"+Разделитель+СокрЛП(Ответ.Результат.Итог("СуммаТоваров"))+Разделитель+"Поступление товаров"+?((ГруппаОрганизаций = "п20" ИЛИ ГруппаОрганизаций = "п19" ИЛИ ГруппаОрганизаций = "перс"), " "+СокрЛП(Организация.ИНН), "") + Разделитель + ГруппаОрганизаций;
			//
			//ПотокВыгрузки.ЗаписатьСтроку(СтрЗаписи);
			
			тз = РегистрыСведений.ДанныеКВыгрузкеВ7.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			тз.Колонки.Добавить("СуммаОборот", Новый ОписаниеТипов("Число"));
			НоваяСтрока = тз.Добавить();
			НоваяСтрока.Период = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
			НоваяСтрока.Статус = ЗатратыКлиентСервер.СтатусОтправки_НеОтправлено();
			НоваяСтрока.Организация = Организация;
			Попытка
				НоваяСтрока.Группа = Группа;
			Исключение
				НоваяСтрока.Группа = "";
			КонецПопытки;
			НоваяСтрока.Счет = "41";
			НоваяСтрока.СуммаОборот = Ответ.Результат.Итог("СуммаТоваров");
			
			ОбработкаРезультатаВПоток(тз, ПараметрыОтчета, Организация, Группа);			
						
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти